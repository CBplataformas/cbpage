import{$ as Ut,$a as vd,$b as Rs,A as kt,Aa as io,Ab as lo,B as pc,Ba as hd,Bb as uo,C as gc,Ca as Cs,Cb as ho,D as _n,Da as fd,Db as Pe,E as Cn,Ea as vi,Eb as st,F as Vi,Fa as Wi,Fb as nr,G as bc,Ga as no,Gb as Ac,H as bi,Ha as md,Hb as Ed,I as nd,Ia as ro,Ib as xs,J as rd,Ja as W,Jb as As,K as to,Ka as F,Kb as Nc,L as od,La as wc,Lb as rr,M as wn,Ma as Ie,Mb as Mc,N as Hi,Na as pd,Nb as Sd,O as vc,Oa as ws,Ob as oe,P as sd,Pa as Ts,Pb as Cd,Q as ad,Qa as oo,Qb as Ft,R as Ec,Ra as Ue,Rb as Ns,S as ji,Sa as Tc,Sb as fo,T as $e,Ta as Dc,Tb as qi,U as ue,Ua as An,Ub as Rc,V as Ct,Va as de,Vb as or,W as It,Wa as Ae,Wb as wd,X as cd,Xa as gd,Xb as Td,Y as xt,Ya as bd,Yb as at,Z as $n,Za as Et,Zb as yc,_ as H,_a as xc,_b as Ms,a as P,aa as ld,ab as tr,ac as Dd,b as vt,ba as Z,bb as Ee,bc as Zi,ca as Sc,cb as Q,cc as ys,d as dc,da as V,db as Ds,dc as Oc,e as _e,ea as R,eb as zt,ec as mo,f as td,fa as eo,fb as er,fc as xd,g as Kt,ga as ot,gb as Nn,gc as kc,h as hc,ha as Wt,hb as so,hc as Os,i as fc,ia as it,ib as ao,ic as ks,j as tt,ja as Tn,jb as co,k as le,ka as ud,kb as N,l as Ve,la as Dn,lb as A,lc as Ad,m as ve,ma as ti,mb as Rt,mc as Is,n as j,na as dd,nb as Gt,o as _r,oa as je,ob as ir,oc as sr,p as gs,pa as dt,pb as _,pc as Ps,q as ed,qa as ht,qb as wt,qc as Bs,r as q,ra as Ui,rb as zi,s as Gn,sa as xn,sb as Xi,t as xe,ta as ei,tb as Ei,u as bs,ua as Es,ub as Ne,v as mc,va as Ss,vb as Pt,w as id,wa as Y,wb as Bt,x as He,xa as lt,xb as Yi,y as vs,ya as Cc,yb as I,z as $r,za as ft,zb as re}from"./chunk-DLURDWDD.js";var go=class{},Ls=class{},Ni=class t{constructor(i){this.normalizedNames=new Map,this.lazyUpdate=null,i?typeof i=="string"?this.lazyInit=()=>{this.headers=new Map,i.split(`
`).forEach(e=>{let n=e.indexOf(":");if(n>0){let r=e.slice(0,n),o=r.toLowerCase(),s=e.slice(n+1).trim();this.maybeSetNormalizedName(r,o),this.headers.has(o)?this.headers.get(o).push(s):this.headers.set(o,[s])}})}:typeof Headers<"u"&&i instanceof Headers?(this.headers=new Map,i.forEach((e,n)=>{this.setHeaderEntries(n,e)})):this.lazyInit=()=>{this.headers=new Map,Object.entries(i).forEach(([e,n])=>{this.setHeaderEntries(e,n)})}:this.headers=new Map}has(i){return this.init(),this.headers.has(i.toLowerCase())}get(i){this.init();let e=this.headers.get(i.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(i){return this.init(),this.headers.get(i.toLowerCase())||null}append(i,e){return this.clone({name:i,value:e,op:"a"})}set(i,e){return this.clone({name:i,value:e,op:"s"})}delete(i,e){return this.clone({name:i,value:e,op:"d"})}maybeSetNormalizedName(i,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,i)}init(){this.lazyInit&&(this.lazyInit instanceof t?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(i=>this.applyUpdate(i)),this.lazyUpdate=null))}copyFrom(i){i.init(),Array.from(i.headers.keys()).forEach(e=>{this.headers.set(e,i.headers.get(e)),this.normalizedNames.set(e,i.normalizedNames.get(e))})}clone(i){let e=new t;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof t?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([i]),e}applyUpdate(i){let e=i.name.toLowerCase();switch(i.op){case"a":case"s":let n=i.value;if(typeof n=="string"&&(n=[n]),n.length===0)return;this.maybeSetNormalizedName(i.name,e);let r=(i.op==="a"?this.headers.get(e):void 0)||[];r.push(...n),this.headers.set(e,r);break;case"d":let o=i.value;if(!o)this.headers.delete(e),this.normalizedNames.delete(e);else{let s=this.headers.get(e);if(!s)return;s=s.filter(a=>o.indexOf(a)===-1),s.length===0?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,s)}break}}setHeaderEntries(i,e){let n=(Array.isArray(e)?e:[e]).map(o=>o.toString()),r=i.toLowerCase();this.headers.set(r,n),this.maybeSetNormalizedName(i,r)}forEach(i){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>i(this.normalizedNames.get(e),this.headers.get(e)))}};var Pc=class{encodeKey(i){return Nd(i)}encodeValue(i){return Nd(i)}decodeKey(i){return decodeURIComponent(i)}decodeValue(i){return decodeURIComponent(i)}};function Bm(t,i){let e=new Map;return t.length>0&&t.replace(/^\?/,"").split("&").forEach(r=>{let o=r.indexOf("="),[s,a]=o==-1?[i.decodeKey(r),""]:[i.decodeKey(r.slice(0,o)),i.decodeValue(r.slice(o+1))],c=e.get(s)||[];c.push(a),e.set(s,c)}),e}var Fm=/%(\d[a-f0-9])/gi,Lm={40:"@","3A":":",24:"$","2C":",","3B":";","3D":"=","3F":"?","2F":"/"};function Nd(t){return encodeURIComponent(t).replace(Fm,(i,e)=>Lm[e]??i)}function Fs(t){return`${t}`}var Qi=class t{constructor(i={}){if(this.updates=null,this.cloneFrom=null,this.encoder=i.encoder||new Pc,i.fromString){if(i.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=Bm(i.fromString,this.encoder)}else i.fromObject?(this.map=new Map,Object.keys(i.fromObject).forEach(e=>{let n=i.fromObject[e],r=Array.isArray(n)?n.map(Fs):[Fs(n)];this.map.set(e,r)})):this.map=null}has(i){return this.init(),this.map.has(i)}get(i){this.init();let e=this.map.get(i);return e?e[0]:null}getAll(i){return this.init(),this.map.get(i)||null}keys(){return this.init(),Array.from(this.map.keys())}append(i,e){return this.clone({param:i,value:e,op:"a"})}appendAll(i){let e=[];return Object.keys(i).forEach(n=>{let r=i[n];Array.isArray(r)?r.forEach(o=>{e.push({param:n,value:o,op:"a"})}):e.push({param:n,value:r,op:"a"})}),this.clone(e)}set(i,e){return this.clone({param:i,value:e,op:"s"})}delete(i,e){return this.clone({param:i,value:e,op:"d"})}toString(){return this.init(),this.keys().map(i=>{let e=this.encoder.encodeKey(i);return this.map.get(i).map(n=>e+"="+this.encoder.encodeValue(n)).join("&")}).filter(i=>i!=="").join("&")}clone(i){let e=new t({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(i),e}init(){this.map===null&&(this.map=new Map),this.cloneFrom!==null&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(i=>this.map.set(i,this.cloneFrom.map.get(i))),this.updates.forEach(i=>{switch(i.op){case"a":case"s":let e=(i.op==="a"?this.map.get(i.param):void 0)||[];e.push(Fs(i.value)),this.map.set(i.param,e);break;case"d":if(i.value!==void 0){let n=this.map.get(i.param)||[],r=n.indexOf(Fs(i.value));r!==-1&&n.splice(r,1),n.length>0?this.map.set(i.param,n):this.map.delete(i.param)}else{this.map.delete(i.param);break}}}),this.cloneFrom=this.updates=null)}};var Bc=class{constructor(){this.map=new Map}set(i,e){return this.map.set(i,e),this}get(i){return this.map.has(i)||this.map.set(i,i.defaultValue()),this.map.get(i)}delete(i){return this.map.delete(i),this}has(i){return this.map.has(i)}keys(){return this.map.keys()}};function Vm(t){switch(t){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}function Md(t){return typeof ArrayBuffer<"u"&&t instanceof ArrayBuffer}function Rd(t){return typeof Blob<"u"&&t instanceof Blob}function yd(t){return typeof FormData<"u"&&t instanceof FormData}function Hm(t){return typeof URLSearchParams<"u"&&t instanceof URLSearchParams}var po=class t{constructor(i,e,n,r){this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=i.toUpperCase();let o;if(Vm(this.method)||r?(this.body=n!==void 0?n:null,o=r):o=n,o&&(this.reportProgress=!!o.reportProgress,this.withCredentials=!!o.withCredentials,o.responseType&&(this.responseType=o.responseType),o.headers&&(this.headers=o.headers),o.context&&(this.context=o.context),o.params&&(this.params=o.params),this.transferCache=o.transferCache),this.headers??=new Ni,this.context??=new Bc,!this.params)this.params=new Qi,this.urlWithParams=e;else{let s=this.params.toString();if(s.length===0)this.urlWithParams=e;else{let a=e.indexOf("?"),c=a===-1?"?":a<e.length-1?"&":"";this.urlWithParams=e+c+s}}}serializeBody(){return this.body===null?null:typeof this.body=="string"||Md(this.body)||Rd(this.body)||yd(this.body)||Hm(this.body)?this.body:this.body instanceof Qi?this.body.toString():typeof this.body=="object"||typeof this.body=="boolean"||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return this.body===null||yd(this.body)?null:Rd(this.body)?this.body.type||null:Md(this.body)?null:typeof this.body=="string"?"text/plain":this.body instanceof Qi?"application/x-www-form-urlencoded;charset=UTF-8":typeof this.body=="object"||typeof this.body=="number"||typeof this.body=="boolean"?"application/json":null}clone(i={}){let e=i.method||this.method,n=i.url||this.url,r=i.responseType||this.responseType,o=i.transferCache??this.transferCache,s=i.body!==void 0?i.body:this.body,a=i.withCredentials??this.withCredentials,c=i.reportProgress??this.reportProgress,l=i.headers||this.headers,u=i.params||this.params,h=i.context??this.context;return i.setHeaders!==void 0&&(l=Object.keys(i.setHeaders).reduce((f,d)=>f.set(d,i.setHeaders[d]),l)),i.setParams&&(u=Object.keys(i.setParams).reduce((f,d)=>f.set(d,i.setParams[d]),u)),new t(e,n,s,{params:u,headers:l,context:h,reportProgress:c,responseType:r,withCredentials:a,transferCache:o})}},Ki=function(t){return t[t.Sent=0]="Sent",t[t.UploadProgress=1]="UploadProgress",t[t.ResponseHeader=2]="ResponseHeader",t[t.DownloadProgress=3]="DownloadProgress",t[t.Response=4]="Response",t[t.User=5]="User",t}(Ki||{}),bo=class{constructor(i,e=200,n="OK"){this.headers=i.headers||new Ni,this.status=i.status!==void 0?i.status:e,this.statusText=i.statusText||n,this.url=i.url||null,this.ok=this.status>=200&&this.status<300}},Vs=class t extends bo{constructor(i={}){super(i),this.type=Ki.ResponseHeader}clone(i={}){return new t({headers:i.headers||this.headers,status:i.status!==void 0?i.status:this.status,statusText:i.statusText||this.statusText,url:i.url||this.url||void 0})}},vo=class t extends bo{constructor(i={}){super(i),this.type=Ki.Response,this.body=i.body!==void 0?i.body:null}clone(i={}){return new t({body:i.body!==void 0?i.body:this.body,headers:i.headers||this.headers,status:i.status!==void 0?i.status:this.status,statusText:i.statusText||this.statusText,url:i.url||this.url||void 0})}},Ji=class extends bo{constructor(i){super(i,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.status>=200&&this.status<300?this.message=`Http failure during parsing for ${i.url||"(unknown url)"}`:this.message=`Http failure response for ${i.url||"(unknown url)"}: ${i.status} ${i.statusText}`,this.error=i.error||null}},Pd=200,jm=204;function Ic(t,i){return{body:i,headers:t.headers,context:t.context,observe:t.observe,params:t.params,reportProgress:t.reportProgress,responseType:t.responseType,withCredentials:t.withCredentials,transferCache:t.transferCache}}var Hc=(()=>{class t{constructor(e){this.handler=e}request(e,n,r={}){let o;if(e instanceof po)o=e;else{let c;r.headers instanceof Ni?c=r.headers:c=new Ni(r.headers);let l;r.params&&(r.params instanceof Qi?l=r.params:l=new Qi({fromObject:r.params})),o=new po(e,n,r.body!==void 0?r.body:null,{headers:c,context:r.context,params:l,reportProgress:r.reportProgress,responseType:r.responseType||"json",withCredentials:r.withCredentials,transferCache:r.transferCache})}let s=j(o).pipe(Cn(c=>this.handler.handle(c)));if(e instanceof po||r.observe==="events")return s;let a=s.pipe(kt(c=>c instanceof vo));switch(r.observe||"body"){case"body":switch(o.responseType){case"arraybuffer":return a.pipe(q(c=>{if(c.body!==null&&!(c.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return c.body}));case"blob":return a.pipe(q(c=>{if(c.body!==null&&!(c.body instanceof Blob))throw new Error("Response is not a Blob.");return c.body}));case"text":return a.pipe(q(c=>{if(c.body!==null&&typeof c.body!="string")throw new Error("Response is not a string.");return c.body}));case"json":default:return a.pipe(q(c=>c.body))}case"response":return a;default:throw new Error(`Unreachable: unhandled observe type ${r.observe}}`)}}delete(e,n={}){return this.request("DELETE",e,n)}get(e,n={}){return this.request("GET",e,n)}head(e,n={}){return this.request("HEAD",e,n)}jsonp(e,n){return this.request("JSONP",e,{params:new Qi().append(n,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(e,n={}){return this.request("OPTIONS",e,n)}patch(e,n,r={}){return this.request("PATCH",e,Ic(r,n))}post(e,n,r={}){return this.request("POST",e,Ic(r,n))}put(e,n,r={}){return this.request("PUT",e,Ic(r,n))}static{this.\u0275fac=function(n){return new(n||t)(V(go))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),Um=/^\)\]\}',?\n/,Wm="X-Request-URL";function Od(t){if(t.url)return t.url;let i=Wm.toLocaleLowerCase();return t.headers.get(i)}var zm=(()=>{class t{constructor(){this.fetchImpl=R(Fc,{optional:!0})?.fetch??((...e)=>globalThis.fetch(...e)),this.ngZone=R(lt)}handle(e){return new Kt(n=>{let r=new AbortController;return this.doRequest(e,r.signal,n).then(Lc,o=>n.error(new Ji({error:o}))),()=>r.abort()})}doRequest(e,n,r){return dc(this,null,function*(){let o=this.createRequestInit(e),s;try{let d=this.ngZone.runOutsideAngular(()=>this.fetchImpl(e.urlWithParams,P({signal:n},o)));Xm(d),r.next({type:Ki.Sent}),s=yield d}catch(d){r.error(new Ji({error:d,status:d.status??0,statusText:d.statusText,url:e.urlWithParams,headers:d.headers}));return}let a=new Ni(s.headers),c=s.statusText,l=Od(s)??e.urlWithParams,u=s.status,h=null;if(e.reportProgress&&r.next(new Vs({headers:a,status:u,statusText:c,url:l})),s.body){let d=s.headers.get("content-length"),p=[],g=s.body.getReader(),b=0,E,v,w=typeof Zone<"u"&&Zone.current;yield this.ngZone.runOutsideAngular(()=>dc(this,null,function*(){for(;;){let{done:D,value:x}=yield g.read();if(D)break;if(p.push(x),b+=x.length,e.reportProgress){v=e.responseType==="text"?(v??"")+(E??=new TextDecoder).decode(x,{stream:!0}):void 0;let k=()=>r.next({type:Ki.DownloadProgress,total:d?+d:void 0,loaded:b,partialText:v});w?w.run(k):k()}}}));let C=this.concatChunks(p,b);try{let D=s.headers.get("Content-Type")??"";h=this.parseBody(e,C,D)}catch(D){r.error(new Ji({error:D,headers:new Ni(s.headers),status:s.status,statusText:s.statusText,url:Od(s)??e.urlWithParams}));return}}u===0&&(u=h?Pd:0),u>=200&&u<300?(r.next(new vo({body:h,headers:a,status:u,statusText:c,url:l})),r.complete()):r.error(new Ji({error:h,headers:a,status:u,statusText:c,url:l}))})}parseBody(e,n,r){switch(e.responseType){case"json":let o=new TextDecoder().decode(n).replace(Um,"");return o===""?null:JSON.parse(o);case"text":return new TextDecoder().decode(n);case"blob":return new Blob([n],{type:r});case"arraybuffer":return n.buffer}}createRequestInit(e){let n={},r=e.withCredentials?"include":void 0;if(e.headers.forEach((o,s)=>n[o]=s.join(",")),e.headers.has("Accept")||(n.Accept="application/json, text/plain, */*"),!e.headers.has("Content-Type")){let o=e.detectContentTypeHeader();o!==null&&(n["Content-Type"]=o)}return{body:e.serializeBody(),method:e.method,headers:n,credentials:r}}concatChunks(e,n){let r=new Uint8Array(n),o=0;for(let s of e)r.set(s,o),o+=s.length;return r}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),Fc=class{};function Lc(){}function Xm(t){t.then(Lc,Lc)}function Ym(t,i){return i(t)}function qm(t,i,e){return(n,r)=>ti(e,()=>i(n,o=>t(o,r)))}var Bd=new Z(""),Zm=new Z(""),Jm=new Z("",{providedIn:"root",factory:()=>!0});var kd=(()=>{class t extends go{constructor(e,n){super(),this.backend=e,this.injector=n,this.chain=null,this.pendingTasks=R(Ss),this.contributeToStability=R(Jm)}handle(e){if(this.chain===null){let n=Array.from(new Set([...this.injector.get(Bd),...this.injector.get(Zm,[])]));this.chain=n.reduceRight((r,o)=>qm(r,o,this.injector),Ym)}if(this.contributeToStability){let n=this.pendingTasks.add();return this.chain(e,r=>this.backend.handle(r)).pipe(wn(()=>this.pendingTasks.remove(n)))}else return this.chain(e,n=>this.backend.handle(n))}static{this.\u0275fac=function(n){return new(n||t)(V(Ls),V(Dn))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})();var Qm=/^\)\]\}',?\n/;function Km(t){return"responseURL"in t&&t.responseURL?t.responseURL:/^X-Request-URL:/m.test(t.getAllResponseHeaders())?t.getResponseHeader("X-Request-URL"):null}var Id=(()=>{class t{constructor(e){this.xhrFactory=e}handle(e){if(e.method==="JSONP")throw new xt(-2800,!1);let n=this.xhrFactory;return(n.\u0275loadImpl?ve(n.\u0275loadImpl()):j(null)).pipe(ue(()=>new Kt(o=>{let s=n.build();if(s.open(e.method,e.urlWithParams),e.withCredentials&&(s.withCredentials=!0),e.headers.forEach((g,b)=>s.setRequestHeader(g,b.join(","))),e.headers.has("Accept")||s.setRequestHeader("Accept","application/json, text/plain, */*"),!e.headers.has("Content-Type")){let g=e.detectContentTypeHeader();g!==null&&s.setRequestHeader("Content-Type",g)}if(e.responseType){let g=e.responseType.toLowerCase();s.responseType=g!=="json"?g:"text"}let a=e.serializeBody(),c=null,l=()=>{if(c!==null)return c;let g=s.statusText||"OK",b=new Ni(s.getAllResponseHeaders()),E=Km(s)||e.url;return c=new Vs({headers:b,status:s.status,statusText:g,url:E}),c},u=()=>{let{headers:g,status:b,statusText:E,url:v}=l(),w=null;b!==jm&&(w=typeof s.response>"u"?s.responseText:s.response),b===0&&(b=w?Pd:0);let C=b>=200&&b<300;if(e.responseType==="json"&&typeof w=="string"){let D=w;w=w.replace(Qm,"");try{w=w!==""?JSON.parse(w):null}catch(x){w=D,C&&(C=!1,w={error:x,text:w})}}C?(o.next(new vo({body:w,headers:g,status:b,statusText:E,url:v||void 0})),o.complete()):o.error(new Ji({error:w,headers:g,status:b,statusText:E,url:v||void 0}))},h=g=>{let{url:b}=l(),E=new Ji({error:g,status:s.status||0,statusText:s.statusText||"Unknown Error",url:b||void 0});o.error(E)},f=!1,d=g=>{f||(o.next(l()),f=!0);let b={type:Ki.DownloadProgress,loaded:g.loaded};g.lengthComputable&&(b.total=g.total),e.responseType==="text"&&s.responseText&&(b.partialText=s.responseText),o.next(b)},p=g=>{let b={type:Ki.UploadProgress,loaded:g.loaded};g.lengthComputable&&(b.total=g.total),o.next(b)};return s.addEventListener("load",u),s.addEventListener("error",h),s.addEventListener("timeout",h),s.addEventListener("abort",h),e.reportProgress&&(s.addEventListener("progress",d),a!==null&&s.upload&&s.upload.addEventListener("progress",p)),s.send(a),o.next({type:Ki.Sent}),()=>{s.removeEventListener("error",h),s.removeEventListener("abort",h),s.removeEventListener("load",u),s.removeEventListener("timeout",h),e.reportProgress&&(s.removeEventListener("progress",d),a!==null&&s.upload&&s.upload.removeEventListener("progress",p)),s.readyState!==s.DONE&&s.abort()}})))}static{this.\u0275fac=function(n){return new(n||t)(V(ks))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),Fd=new Z(""),Gm="XSRF-TOKEN",_m=new Z("",{providedIn:"root",factory:()=>Gm}),$m="X-XSRF-TOKEN",tp=new Z("",{providedIn:"root",factory:()=>$m}),Hs=class{},ep=(()=>{class t{constructor(e,n,r){this.doc=e,this.platform=n,this.cookieName=r,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if(this.platform==="server")return null;let e=this.doc.cookie||"";return e!==this.lastCookieString&&(this.parseCount++,this.lastToken=Rs(e,this.cookieName),this.lastCookieString=e),this.lastToken}static{this.\u0275fac=function(n){return new(n||t)(V(at),V(vi),V(_m))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})();function ip(t,i){let e=t.url.toLowerCase();if(!R(Fd)||t.method==="GET"||t.method==="HEAD"||e.startsWith("http://")||e.startsWith("https://"))return i(t);let n=R(Hs).getToken(),r=R(tp);return n!=null&&!t.headers.has(r)&&(t=t.clone({headers:t.headers.set(r,n)})),i(t)}function Ld(...t){let i=[Hc,Id,kd,{provide:go,useExisting:kd},{provide:Ls,useFactory:()=>R(zm,{optional:!0})??R(Id)},{provide:Bd,useValue:ip,multi:!0},{provide:Fd,useValue:!0},{provide:Hs,useClass:ep}];for(let e of t)i.push(...e.\u0275providers);return Tn(i)}var Wc=class extends Td{constructor(){super(...arguments),this.supportsDOMEvents=!0}},zc=class t extends Wc{static makeCurrent(){wd(new t)}onAndCancel(i,e,n){return i.addEventListener(e,n),()=>{i.removeEventListener(e,n)}}dispatchEvent(i,e){i.dispatchEvent(e)}remove(i){i.remove()}createElement(i,e){return e=e||this.getDefaultDocument(),e.createElement(i)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(i){return i.nodeType===Node.ELEMENT_NODE}isShadowRoot(i){return i instanceof DocumentFragment}getGlobalEventTarget(i,e){return e==="window"?window:e==="document"?i:e==="body"?i.body:null}getBaseHref(i){let e=sp();return e==null?null:ap(e)}resetBaseElement(){Eo=null}getUserAgent(){return window.navigator.userAgent}getCookie(i){return Rs(document.cookie,i)}},Eo=null;function sp(){return Eo=Eo||document.querySelector("base"),Eo?Eo.getAttribute("href"):null}function ap(t){return new URL(t,document.baseURI).pathname}var cp=(()=>{class t{build(){return new XMLHttpRequest}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),Xc=new Z(""),jd=(()=>{class t{constructor(e,n){this._zone=n,this._eventNameToPlugin=new Map,e.forEach(r=>{r.manager=this}),this._plugins=e.slice().reverse()}addEventListener(e,n,r){return this._findPluginFor(n).addEventListener(e,n,r)}getZone(){return this._zone}_findPluginFor(e){let n=this._eventNameToPlugin.get(e);if(n)return n;if(n=this._plugins.find(o=>o.supports(e)),!n)throw new xt(5101,!1);return this._eventNameToPlugin.set(e,n),n}static{this.\u0275fac=function(n){return new(n||t)(V(Xc),V(lt))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),js=class{constructor(i){this._doc=i}},jc="ng-app-id",Ud=(()=>{class t{constructor(e,n,r,o={}){this.doc=e,this.appId=n,this.nonce=r,this.platformId=o,this.styleRef=new Map,this.hostNodes=new Set,this.styleNodesInDOM=this.collectServerRenderedStyles(),this.platformIsServer=Os(o),this.resetHostNodes()}addStyles(e){for(let n of e)this.changeUsageCount(n,1)===1&&this.onStyleAdded(n)}removeStyles(e){for(let n of e)this.changeUsageCount(n,-1)<=0&&this.onStyleRemoved(n)}ngOnDestroy(){let e=this.styleNodesInDOM;e&&(e.forEach(n=>n.remove()),e.clear());for(let n of this.getAllStyles())this.onStyleRemoved(n);this.resetHostNodes()}addHost(e){this.hostNodes.add(e);for(let n of this.getAllStyles())this.addStyleToHost(e,n)}removeHost(e){this.hostNodes.delete(e)}getAllStyles(){return this.styleRef.keys()}onStyleAdded(e){for(let n of this.hostNodes)this.addStyleToHost(n,e)}onStyleRemoved(e){let n=this.styleRef;n.get(e)?.elements?.forEach(r=>r.remove()),n.delete(e)}collectServerRenderedStyles(){let e=this.doc.head?.querySelectorAll(`style[${jc}="${this.appId}"]`);if(e?.length){let n=new Map;return e.forEach(r=>{r.textContent!=null&&n.set(r.textContent,r)}),n}return null}changeUsageCount(e,n){let r=this.styleRef;if(r.has(e)){let o=r.get(e);return o.usage+=n,o.usage}return r.set(e,{usage:n,elements:[]}),n}getStyleElement(e,n){let r=this.styleNodesInDOM,o=r?.get(n);if(o?.parentNode===e)return r.delete(n),o.removeAttribute(jc),o;{let s=this.doc.createElement("style");return this.nonce&&s.setAttribute("nonce",this.nonce),s.textContent=n,this.platformIsServer&&s.setAttribute(jc,this.appId),e.appendChild(s),s}}addStyleToHost(e,n){let r=this.getStyleElement(e,n),o=this.styleRef,s=o.get(n)?.elements;s?s.push(r):o.set(n,{elements:[r],usage:1})}resetHostNodes(){let e=this.hostNodes;e.clear(),e.add(this.doc.head)}static{this.\u0275fac=function(n){return new(n||t)(V(at),V(Cs),V(no,8),V(vi))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),Uc={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/Math/MathML"},Zc=/%COMP%/g,Wd="%COMP%",lp=`_nghost-${Wd}`,up=`_ngcontent-${Wd}`,dp=!0,hp=new Z("",{providedIn:"root",factory:()=>dp});function fp(t){return up.replace(Zc,t)}function mp(t){return lp.replace(Zc,t)}function zd(t,i){return i.map(e=>e.replace(Zc,t))}var Us=(()=>{class t{constructor(e,n,r,o,s,a,c,l=null){this.eventManager=e,this.sharedStylesHost=n,this.appId=r,this.removeStylesOnCompDestroy=o,this.doc=s,this.platformId=a,this.ngZone=c,this.nonce=l,this.rendererByCompId=new Map,this.platformIsServer=Os(a),this.defaultRenderer=new So(e,s,c,this.platformIsServer)}createRenderer(e,n){if(!e||!n)return this.defaultRenderer;this.platformIsServer&&n.encapsulation===eo.ShadowDom&&(n=vt(P({},n),{encapsulation:eo.Emulated}));let r=this.getOrCreateRenderer(e,n);return r instanceof Ws?r.applyToHost(e):r instanceof Co&&r.applyStyles(),r}getOrCreateRenderer(e,n){let r=this.rendererByCompId,o=r.get(n.id);if(!o){let s=this.doc,a=this.ngZone,c=this.eventManager,l=this.sharedStylesHost,u=this.removeStylesOnCompDestroy,h=this.platformIsServer;switch(n.encapsulation){case eo.Emulated:o=new Ws(c,l,n,this.appId,u,s,a,h);break;case eo.ShadowDom:return new Yc(c,l,e,n,s,a,this.nonce,h);default:o=new Co(c,l,n,u,s,a,h);break}r.set(n.id,o)}return o}ngOnDestroy(){this.rendererByCompId.clear()}static{this.\u0275fac=function(n){return new(n||t)(V(jd),V(Ud),V(Cs),V(hp),V(at),V(vi),V(lt),V(no))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),So=class{constructor(i,e,n,r){this.eventManager=i,this.doc=e,this.ngZone=n,this.platformIsServer=r,this.data=Object.create(null),this.throwOnSyntheticProps=!0,this.destroyNode=null}destroy(){}createElement(i,e){return e?this.doc.createElementNS(Uc[e]||e,i):this.doc.createElement(i)}createComment(i){return this.doc.createComment(i)}createText(i){return this.doc.createTextNode(i)}appendChild(i,e){(Vd(i)?i.content:i).appendChild(e)}insertBefore(i,e,n){i&&(Vd(i)?i.content:i).insertBefore(e,n)}removeChild(i,e){e.remove()}selectRootElement(i,e){let n=typeof i=="string"?this.doc.querySelector(i):i;if(!n)throw new xt(-5104,!1);return e||(n.textContent=""),n}parentNode(i){return i.parentNode}nextSibling(i){return i.nextSibling}setAttribute(i,e,n,r){if(r){e=r+":"+e;let o=Uc[r];o?i.setAttributeNS(o,e,n):i.setAttribute(e,n)}else i.setAttribute(e,n)}removeAttribute(i,e,n){if(n){let r=Uc[n];r?i.removeAttributeNS(r,e):i.removeAttribute(`${n}:${e}`)}else i.removeAttribute(e)}addClass(i,e){i.classList.add(e)}removeClass(i,e){i.classList.remove(e)}setStyle(i,e,n,r){r&(ro.DashCase|ro.Important)?i.style.setProperty(e,n,r&ro.Important?"important":""):i.style[e]=n}removeStyle(i,e,n){n&ro.DashCase?i.style.removeProperty(e):i.style[e]=""}setProperty(i,e,n){i!=null&&(i[e]=n)}setValue(i,e){i.nodeValue=e}listen(i,e,n){if(typeof i=="string"&&(i=or().getGlobalEventTarget(this.doc,i),!i))throw new Error(`Unsupported event target ${i} for event ${e}`);return this.eventManager.addEventListener(i,e,this.decoratePreventDefault(n))}decoratePreventDefault(i){return e=>{if(e==="__ngUnwrap__")return i;(this.platformIsServer?this.ngZone.runGuarded(()=>i(e)):i(e))===!1&&e.preventDefault()}}};function Vd(t){return t.tagName==="TEMPLATE"&&t.content!==void 0}var Yc=class extends So{constructor(i,e,n,r,o,s,a,c){super(i,o,s,c),this.sharedStylesHost=e,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);let l=zd(r.id,r.styles);for(let u of l){let h=document.createElement("style");a&&h.setAttribute("nonce",a),h.textContent=u,this.shadowRoot.appendChild(h)}}nodeOrShadowRoot(i){return i===this.hostEl?this.shadowRoot:i}appendChild(i,e){return super.appendChild(this.nodeOrShadowRoot(i),e)}insertBefore(i,e,n){return super.insertBefore(this.nodeOrShadowRoot(i),e,n)}removeChild(i,e){return super.removeChild(null,e)}parentNode(i){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(i)))}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}},Co=class extends So{constructor(i,e,n,r,o,s,a,c){super(i,o,s,a),this.sharedStylesHost=e,this.removeStylesOnCompDestroy=r,this.styles=c?zd(c,n.styles):n.styles}applyStyles(){this.sharedStylesHost.addStyles(this.styles)}destroy(){this.removeStylesOnCompDestroy&&this.sharedStylesHost.removeStyles(this.styles)}},Ws=class extends Co{constructor(i,e,n,r,o,s,a,c){let l=r+"-"+n.id;super(i,e,n,o,s,a,c,l),this.contentAttr=fp(l),this.hostAttr=mp(l)}applyToHost(i){this.applyStyles(),this.setAttribute(i,this.hostAttr,"")}createElement(i,e){let n=super.createElement(i,e);return super.setAttribute(n,this.contentAttr,""),n}},pp=(()=>{class t extends js{constructor(e){super(e)}supports(e){return!0}addEventListener(e,n,r){return e.addEventListener(n,r,!1),()=>this.removeEventListener(e,n,r)}removeEventListener(e,n,r){return e.removeEventListener(n,r)}static{this.\u0275fac=function(n){return new(n||t)(V(at))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),Hd=["alt","control","meta","shift"],gp={"\b":"Backspace","	":"Tab","\x7F":"Delete","\x1B":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},bp={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey},vp=(()=>{class t extends js{constructor(e){super(e)}supports(e){return t.parseEventName(e)!=null}addEventListener(e,n,r){let o=t.parseEventName(n),s=t.eventCallback(o.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>or().onAndCancel(e,o.domEventName,s))}static parseEventName(e){let n=e.toLowerCase().split("."),r=n.shift();if(n.length===0||!(r==="keydown"||r==="keyup"))return null;let o=t._normalizeKey(n.pop()),s="",a=n.indexOf("code");if(a>-1&&(n.splice(a,1),s="code."),Hd.forEach(l=>{let u=n.indexOf(l);u>-1&&(n.splice(u,1),s+=l+".")}),s+=o,n.length!=0||o.length===0)return null;let c={};return c.domEventName=r,c.fullKey=s,c}static matchEventFullKeyCode(e,n){let r=gp[e.key]||e.key,o="";return n.indexOf("code.")>-1&&(r=e.code,o="code."),r==null||!r?!1:(r=r.toLowerCase(),r===" "?r="space":r==="."&&(r="dot"),Hd.forEach(s=>{if(s!==r){let a=bp[s];a(e)&&(o+=s+".")}}),o+=r,o===n)}static eventCallback(e,n,r){return o=>{t.matchEventFullKeyCode(o,e)&&r.runGuarded(()=>n(o))}}static _normalizeKey(e){return e==="esc"?"escape":e}static{this.\u0275fac=function(n){return new(n||t)(V(at))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})();function Xd(t,i){return Cd(P({rootComponent:t},Ep(i)))}function Ep(t){return{appProviders:[...Dp,...t?.providers??[]],platformProviders:Tp}}function Sp(){zc.makeCurrent()}function Cp(){return new Cc}function wp(){return hd(document),document}var Tp=[{provide:vi,useValue:xd},{provide:fd,useValue:Sp,multi:!0},{provide:at,useFactory:wp,deps:[]}];var Dp=[{provide:ud,useValue:"root"},{provide:Cc,useFactory:Cp,deps:[]},{provide:Xc,useClass:pp,multi:!0,deps:[at,lt,vi]},{provide:Xc,useClass:vp,multi:!0,deps:[at]},Us,Ud,jd,{provide:Ts,useExisting:Us},{provide:ks,useClass:cp,deps:[]},[]];var Yd=(()=>{class t{constructor(e){this._doc=e}getTitle(){return this._doc.title}setTitle(e){this._doc.title=e||""}static{this.\u0275fac=function(n){return new(n||t)(V(at))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var K="primary",Lo=Symbol("RouteTitle"),_c=class{constructor(i){this.params=i||{}}has(i){return Object.prototype.hasOwnProperty.call(this.params,i)}get(i){if(this.has(i)){let e=this.params[i];return Array.isArray(e)?e[0]:e}return null}getAll(i){if(this.has(i)){let e=this.params[i];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}};function hr(t){return new _c(t)}function Ap(t,i,e){let n=e.path.split("/");if(n.length>t.length||e.pathMatch==="full"&&(i.hasChildren()||n.length<t.length))return null;let r={};for(let o=0;o<n.length;o++){let s=n[o],a=t[o];if(s[0]===":")r[s.substring(1)]=a;else if(s!==a.path)return null}return{consumed:t.slice(0,n.length),posParams:r}}function Np(t,i){if(t.length!==i.length)return!1;for(let e=0;e<t.length;++e)if(!Si(t[e],i[e]))return!1;return!0}function Si(t,i){let e=t?$c(t):void 0,n=i?$c(i):void 0;if(!e||!n||e.length!=n.length)return!1;let r;for(let o=0;o<e.length;o++)if(r=e[o],!$d(t[r],i[r]))return!1;return!0}function $c(t){return[...Object.keys(t),...Object.getOwnPropertySymbols(t)]}function $d(t,i){if(Array.isArray(t)&&Array.isArray(i)){if(t.length!==i.length)return!1;let e=[...t].sort(),n=[...i].sort();return e.every((r,o)=>n[o]===r)}else return t===i}function th(t){return t.length>0?t[t.length-1]:null}function _i(t){return gs(t)?t:As(t)?ve(Promise.resolve(t)):j(t)}var Mp={exact:ih,subset:nh},eh={exact:Rp,subset:yp,ignored:()=>!0};function qd(t,i,e){return Mp[e.paths](t.root,i.root,e.matrixParams)&&eh[e.queryParams](t.queryParams,i.queryParams)&&!(e.fragment==="exact"&&t.fragment!==i.fragment)}function Rp(t,i){return Si(t,i)}function ih(t,i,e){if(!Rn(t.segments,i.segments)||!Ys(t.segments,i.segments,e)||t.numberOfChildren!==i.numberOfChildren)return!1;for(let n in i.children)if(!t.children[n]||!ih(t.children[n],i.children[n],e))return!1;return!0}function yp(t,i){return Object.keys(i).length<=Object.keys(t).length&&Object.keys(i).every(e=>$d(t[e],i[e]))}function nh(t,i,e){return rh(t,i,i.segments,e)}function rh(t,i,e,n){if(t.segments.length>e.length){let r=t.segments.slice(0,e.length);return!(!Rn(r,e)||i.hasChildren()||!Ys(r,e,n))}else if(t.segments.length===e.length){if(!Rn(t.segments,e)||!Ys(t.segments,e,n))return!1;for(let r in i.children)if(!t.children[r]||!nh(t.children[r],i.children[r],n))return!1;return!0}else{let r=e.slice(0,t.segments.length),o=e.slice(t.segments.length);return!Rn(t.segments,r)||!Ys(t.segments,r,n)||!t.children[K]?!1:rh(t.children[K],i,o,n)}}function Ys(t,i,e){return i.every((n,r)=>eh[e](t[r].parameters,n.parameters))}var Ri=class{constructor(i=new gt([],{}),e={},n=null){this.root=i,this.queryParams=e,this.fragment=n}get queryParamMap(){return this._queryParamMap??=hr(this.queryParams),this._queryParamMap}toString(){return Ip.serialize(this)}},gt=class{constructor(i,e){this.segments=i,this.children=e,this.parent=null,Object.values(e).forEach(n=>n.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return qs(this)}},Mn=class{constructor(i,e){this.path=i,this.parameters=e}get parameterMap(){return this._parameterMap??=hr(this.parameters),this._parameterMap}toString(){return sh(this)}};function Op(t,i){return Rn(t,i)&&t.every((e,n)=>Si(e.parameters,i[n].parameters))}function Rn(t,i){return t.length!==i.length?!1:t.every((e,n)=>e.path===i[n].path)}function kp(t,i){let e=[];return Object.entries(t.children).forEach(([n,r])=>{n===K&&(e=e.concat(i(r,n)))}),Object.entries(t.children).forEach(([n,r])=>{n!==K&&(e=e.concat(i(r,n)))}),e}var xl=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:()=>new Mo,providedIn:"root"})}}return t})(),Mo=class{parse(i){let e=new el(i);return new Ri(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(i){let e=`/${wo(i.root,!0)}`,n=Fp(i.queryParams),r=typeof i.fragment=="string"?`#${Pp(i.fragment)}`:"";return`${e}${n}${r}`}},Ip=new Mo;function qs(t){return t.segments.map(i=>sh(i)).join("/")}function wo(t,i){if(!t.hasChildren())return qs(t);if(i){let e=t.children[K]?wo(t.children[K],!1):"",n=[];return Object.entries(t.children).forEach(([r,o])=>{r!==K&&n.push(`${r}:${wo(o,!1)}`)}),n.length>0?`${e}(${n.join("//")})`:e}else{let e=kp(t,(n,r)=>r===K?[wo(t.children[K],!1)]:[`${r}:${wo(n,!1)}`]);return Object.keys(t.children).length===1&&t.children[K]!=null?`${qs(t)}/${e[0]}`:`${qs(t)}/(${e.join("//")})`}}function oh(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function zs(t){return oh(t).replace(/%3B/gi,";")}function Pp(t){return encodeURI(t)}function tl(t){return oh(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function Zs(t){return decodeURIComponent(t)}function Zd(t){return Zs(t.replace(/\+/g,"%20"))}function sh(t){return`${tl(t.path)}${Bp(t.parameters)}`}function Bp(t){return Object.entries(t).map(([i,e])=>`;${tl(i)}=${tl(e)}`).join("")}function Fp(t){let i=Object.entries(t).map(([e,n])=>Array.isArray(n)?n.map(r=>`${zs(e)}=${zs(r)}`).join("&"):`${zs(e)}=${zs(n)}`).filter(e=>e);return i.length?`?${i.join("&")}`:""}var Lp=/^[^\/()?;#]+/;function Jc(t){let i=t.match(Lp);return i?i[0]:""}var Vp=/^[^\/()?;=#]+/;function Hp(t){let i=t.match(Vp);return i?i[0]:""}var jp=/^[^=?&#]+/;function Up(t){let i=t.match(jp);return i?i[0]:""}var Wp=/^[^&#]+/;function zp(t){let i=t.match(Wp);return i?i[0]:""}var el=class{constructor(i){this.url=i,this.remaining=i}parseRootSegment(){return this.consumeOptional("/"),this.remaining===""||this.peekStartsWith("?")||this.peekStartsWith("#")?new gt([],{}):new gt([],this.parseChildren())}parseQueryParams(){let i={};if(this.consumeOptional("?"))do this.parseQueryParam(i);while(this.consumeOptional("&"));return i}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(this.remaining==="")return{};this.consumeOptional("/");let i=[];for(this.peekStartsWith("(")||i.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),i.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(i.length>0||Object.keys(e).length>0)&&(n[K]=new gt(i,e)),n}parseSegment(){let i=Jc(this.remaining);if(i===""&&this.peekStartsWith(";"))throw new xt(4009,!1);return this.capture(i),new Mn(Zs(i),this.parseMatrixParams())}parseMatrixParams(){let i={};for(;this.consumeOptional(";");)this.parseParam(i);return i}parseParam(i){let e=Hp(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){let r=Jc(this.remaining);r&&(n=r,this.capture(n))}i[Zs(e)]=Zs(n)}parseQueryParam(i){let e=Up(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){let s=zp(this.remaining);s&&(n=s,this.capture(n))}let r=Zd(e),o=Zd(n);if(i.hasOwnProperty(r)){let s=i[r];Array.isArray(s)||(s=[s],i[r]=s),s.push(o)}else i[r]=o}parseParens(i){let e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){let n=Jc(this.remaining),r=this.remaining[n.length];if(r!=="/"&&r!==")"&&r!==";")throw new xt(4010,!1);let o;n.indexOf(":")>-1?(o=n.slice(0,n.indexOf(":")),this.capture(o),this.capture(":")):i&&(o=K);let s=this.parseChildren();e[o]=Object.keys(s).length===1?s[K]:new gt([],s),this.consumeOptional("//")}return e}peekStartsWith(i){return this.remaining.startsWith(i)}consumeOptional(i){return this.peekStartsWith(i)?(this.remaining=this.remaining.substring(i.length),!0):!1}capture(i){if(!this.consumeOptional(i))throw new xt(4011,!1)}};function ah(t){return t.segments.length>0?new gt([],{[K]:t}):t}function ch(t){let i={};for(let[n,r]of Object.entries(t.children)){let o=ch(r);if(n===K&&o.segments.length===0&&o.hasChildren())for(let[s,a]of Object.entries(o.children))i[s]=a;else(o.segments.length>0||o.hasChildren())&&(i[n]=o)}let e=new gt(t.segments,i);return Xp(e)}function Xp(t){if(t.numberOfChildren===1&&t.children[K]){let i=t.children[K];return new gt(t.segments.concat(i.segments),i.children)}return t}function yn(t){return t instanceof Ri}function Yp(t,i,e=null,n=null){let r=lh(t);return uh(r,i,e,n)}function lh(t){let i;function e(o){let s={};for(let c of o.children){let l=e(c);s[c.outlet]=l}let a=new gt(o.url,s);return o===t&&(i=a),a}let n=e(t.root),r=ah(n);return i??r}function uh(t,i,e,n){let r=t;for(;r.parent;)r=r.parent;if(i.length===0)return Qc(r,r,r,e,n);let o=qp(i);if(o.toRoot())return Qc(r,r,new gt([],{}),e,n);let s=Zp(o,r,t),a=s.processChildren?xo(s.segmentGroup,s.index,o.commands):hh(s.segmentGroup,s.index,o.commands);return Qc(r,s.segmentGroup,a,e,n)}function Js(t){return typeof t=="object"&&t!=null&&!t.outlets&&!t.segmentPath}function Ro(t){return typeof t=="object"&&t!=null&&t.outlets}function Qc(t,i,e,n,r){let o={};n&&Object.entries(n).forEach(([c,l])=>{o[c]=Array.isArray(l)?l.map(u=>`${u}`):`${l}`});let s;t===i?s=e:s=dh(t,i,e);let a=ah(ch(s));return new Ri(a,o,r)}function dh(t,i,e){let n={};return Object.entries(t.children).forEach(([r,o])=>{o===i?n[r]=e:n[r]=dh(o,i,e)}),new gt(t.segments,n)}var Qs=class{constructor(i,e,n){if(this.isAbsolute=i,this.numberOfDoubleDots=e,this.commands=n,i&&n.length>0&&Js(n[0]))throw new xt(4003,!1);let r=n.find(Ro);if(r&&r!==th(n))throw new xt(4004,!1)}toRoot(){return this.isAbsolute&&this.commands.length===1&&this.commands[0]=="/"}};function qp(t){if(typeof t[0]=="string"&&t.length===1&&t[0]==="/")return new Qs(!0,0,t);let i=0,e=!1,n=t.reduce((r,o,s)=>{if(typeof o=="object"&&o!=null){if(o.outlets){let a={};return Object.entries(o.outlets).forEach(([c,l])=>{a[c]=typeof l=="string"?l.split("/"):l}),[...r,{outlets:a}]}if(o.segmentPath)return[...r,o.segmentPath]}return typeof o!="string"?[...r,o]:s===0?(o.split("/").forEach((a,c)=>{c==0&&a==="."||(c==0&&a===""?e=!0:a===".."?i++:a!=""&&r.push(a))}),r):[...r,o]},[]);return new Qs(e,i,n)}var lr=class{constructor(i,e,n){this.segmentGroup=i,this.processChildren=e,this.index=n}};function Zp(t,i,e){if(t.isAbsolute)return new lr(i,!0,0);if(!e)return new lr(i,!1,NaN);if(e.parent===null)return new lr(e,!0,0);let n=Js(t.commands[0])?0:1,r=e.segments.length-1+n;return Jp(e,r,t.numberOfDoubleDots)}function Jp(t,i,e){let n=t,r=i,o=e;for(;o>r;){if(o-=r,n=n.parent,!n)throw new xt(4005,!1);r=n.segments.length}return new lr(n,!1,r-o)}function Qp(t){return Ro(t[0])?t[0].outlets:{[K]:t}}function hh(t,i,e){if(t??=new gt([],{}),t.segments.length===0&&t.hasChildren())return xo(t,i,e);let n=Kp(t,i,e),r=e.slice(n.commandIndex);if(n.match&&n.pathIndex<t.segments.length){let o=new gt(t.segments.slice(0,n.pathIndex),{});return o.children[K]=new gt(t.segments.slice(n.pathIndex),t.children),xo(o,0,r)}else return n.match&&r.length===0?new gt(t.segments,{}):n.match&&!t.hasChildren()?il(t,i,e):n.match?xo(t,0,r):il(t,i,e)}function xo(t,i,e){if(e.length===0)return new gt(t.segments,{});{let n=Qp(e),r={};if(Object.keys(n).some(o=>o!==K)&&t.children[K]&&t.numberOfChildren===1&&t.children[K].segments.length===0){let o=xo(t.children[K],i,e);return new gt(t.segments,o.children)}return Object.entries(n).forEach(([o,s])=>{typeof s=="string"&&(s=[s]),s!==null&&(r[o]=hh(t.children[o],i,s))}),Object.entries(t.children).forEach(([o,s])=>{n[o]===void 0&&(r[o]=s)}),new gt(t.segments,r)}}function Kp(t,i,e){let n=0,r=i,o={match:!1,pathIndex:0,commandIndex:0};for(;r<t.segments.length;){if(n>=e.length)return o;let s=t.segments[r],a=e[n];if(Ro(a))break;let c=`${a}`,l=n<e.length-1?e[n+1]:null;if(r>0&&c===void 0)break;if(c&&l&&typeof l=="object"&&l.outlets===void 0){if(!Qd(c,l,s))return o;n+=2}else{if(!Qd(c,{},s))return o;n++}r++}return{match:!0,pathIndex:r,commandIndex:n}}function il(t,i,e){let n=t.segments.slice(0,i),r=0;for(;r<e.length;){let o=e[r];if(Ro(o)){let c=Gp(o.outlets);return new gt(n,c)}if(r===0&&Js(e[0])){let c=t.segments[i];n.push(new Mn(c.path,Jd(e[0]))),r++;continue}let s=Ro(o)?o.outlets[K]:`${o}`,a=r<e.length-1?e[r+1]:null;s&&a&&Js(a)?(n.push(new Mn(s,Jd(a))),r+=2):(n.push(new Mn(s,{})),r++)}return new gt(n,{})}function Gp(t){let i={};return Object.entries(t).forEach(([e,n])=>{typeof n=="string"&&(n=[n]),n!==null&&(i[e]=il(new gt([],{}),0,n))}),i}function Jd(t){let i={};return Object.entries(t).forEach(([e,n])=>i[e]=`${n}`),i}function Qd(t,i,e){return t==e.path&&Si(i,e.parameters)}var Ao="imperative",se=function(t){return t[t.NavigationStart=0]="NavigationStart",t[t.NavigationEnd=1]="NavigationEnd",t[t.NavigationCancel=2]="NavigationCancel",t[t.NavigationError=3]="NavigationError",t[t.RoutesRecognized=4]="RoutesRecognized",t[t.ResolveStart=5]="ResolveStart",t[t.ResolveEnd=6]="ResolveEnd",t[t.GuardsCheckStart=7]="GuardsCheckStart",t[t.GuardsCheckEnd=8]="GuardsCheckEnd",t[t.RouteConfigLoadStart=9]="RouteConfigLoadStart",t[t.RouteConfigLoadEnd=10]="RouteConfigLoadEnd",t[t.ChildActivationStart=11]="ChildActivationStart",t[t.ChildActivationEnd=12]="ChildActivationEnd",t[t.ActivationStart=13]="ActivationStart",t[t.ActivationEnd=14]="ActivationEnd",t[t.Scroll=15]="Scroll",t[t.NavigationSkipped=16]="NavigationSkipped",t}(se||{}),We=class{constructor(i,e){this.id=i,this.url=e}},yo=class extends We{constructor(i,e,n="imperative",r=null){super(i,e),this.type=se.NavigationStart,this.navigationTrigger=n,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}},Gi=class extends We{constructor(i,e,n){super(i,e),this.urlAfterRedirects=n,this.type=se.NavigationEnd}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}},Fe=function(t){return t[t.Redirect=0]="Redirect",t[t.SupersededByNewNavigation=1]="SupersededByNewNavigation",t[t.NoDataFromResolver=2]="NoDataFromResolver",t[t.GuardRejected=3]="GuardRejected",t}(Fe||{}),nl=function(t){return t[t.IgnoredSameUrlNavigation=0]="IgnoredSameUrlNavigation",t[t.IgnoredByUrlHandlingStrategy=1]="IgnoredByUrlHandlingStrategy",t}(nl||{}),Mi=class extends We{constructor(i,e,n,r){super(i,e),this.reason=n,this.code=r,this.type=se.NavigationCancel}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}},On=class extends We{constructor(i,e,n,r){super(i,e),this.reason=n,this.code=r,this.type=se.NavigationSkipped}},Oo=class extends We{constructor(i,e,n,r){super(i,e),this.error=n,this.target=r,this.type=se.NavigationError}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}},Ks=class extends We{constructor(i,e,n,r){super(i,e),this.urlAfterRedirects=n,this.state=r,this.type=se.RoutesRecognized}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},rl=class extends We{constructor(i,e,n,r){super(i,e),this.urlAfterRedirects=n,this.state=r,this.type=se.GuardsCheckStart}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},ol=class extends We{constructor(i,e,n,r,o){super(i,e),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=o,this.type=se.GuardsCheckEnd}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}},sl=class extends We{constructor(i,e,n,r){super(i,e),this.urlAfterRedirects=n,this.state=r,this.type=se.ResolveStart}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},al=class extends We{constructor(i,e,n,r){super(i,e),this.urlAfterRedirects=n,this.state=r,this.type=se.ResolveEnd}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},cl=class{constructor(i){this.route=i,this.type=se.RouteConfigLoadStart}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}},ll=class{constructor(i){this.route=i,this.type=se.RouteConfigLoadEnd}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}},ul=class{constructor(i){this.snapshot=i,this.type=se.ChildActivationStart}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},dl=class{constructor(i){this.snapshot=i,this.type=se.ChildActivationEnd}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},hl=class{constructor(i){this.snapshot=i,this.type=se.ActivationStart}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},fl=class{constructor(i){this.snapshot=i,this.type=se.ActivationEnd}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}};var ko=class{},fr=class{constructor(i,e){this.url=i,this.navigationBehaviorOptions=e}};function _p(t,i){return t.providers&&!t._injector&&(t._injector=bd(t.providers,i,`Route: ${t.path}`)),t._injector??i}function ii(t){return t.outlet||K}function $p(t,i){let e=t.filter(n=>ii(n)===i);return e.push(...t.filter(n=>ii(n)!==i)),e}function Vo(t){if(!t)return null;if(t.routeConfig?._injector)return t.routeConfig._injector;for(let i=t.parent;i;i=i.parent){let e=i.routeConfig;if(e?._loadedInjector)return e._loadedInjector;if(e?._injector)return e._injector}return null}var ml=class{get injector(){return Vo(this.route?.snapshot)??this.rootInjector}set injector(i){}constructor(i){this.rootInjector=i,this.outlet=null,this.route=null,this.children=new na(this.rootInjector),this.attachRef=null}},na=(()=>{class t{constructor(e){this.rootInjector=e,this.contexts=new Map}onChildOutletCreated(e,n){let r=this.getOrCreateContext(e);r.outlet=n,this.contexts.set(e,r)}onChildOutletDestroyed(e){let n=this.getContext(e);n&&(n.outlet=null,n.attachRef=null)}onOutletDeactivated(){let e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let n=this.getContext(e);return n||(n=new ml(this.rootInjector),this.contexts.set(e,n)),n}getContext(e){return this.contexts.get(e)||null}static{this.\u0275fac=function(n){return new(n||t)(V(Dn))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Gs=class{constructor(i){this._root=i}get root(){return this._root.value}parent(i){let e=this.pathFromRoot(i);return e.length>1?e[e.length-2]:null}children(i){let e=pl(i,this._root);return e?e.children.map(n=>n.value):[]}firstChild(i){let e=pl(i,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(i){let e=gl(i,this._root);return e.length<2?[]:e[e.length-2].children.map(r=>r.value).filter(r=>r!==i)}pathFromRoot(i){return gl(i,this._root).map(e=>e.value)}};function pl(t,i){if(t===i.value)return i;for(let e of i.children){let n=pl(t,e);if(n)return n}return null}function gl(t,i){if(t===i.value)return[i];for(let e of i.children){let n=gl(t,e);if(n.length)return n.unshift(i),n}return[]}var Be=class{constructor(i,e){this.value=i,this.children=e}toString(){return`TreeNode(${this.value})`}};function cr(t){let i={};return t&&t.children.forEach(e=>i[e.value.outlet]=e),i}var _s=class extends Gs{constructor(i,e){super(i),this.snapshot=e,Al(this,i)}toString(){return this.snapshot.toString()}};function fh(t){let i=tg(t),e=new le([new Mn("",{})]),n=new le({}),r=new le({}),o=new le({}),s=new le(""),a=new kn(e,n,o,s,r,K,t,i.root);return a.snapshot=i.root,new _s(new Be(a,[]),i)}function tg(t){let i={},e={},n={},r="",o=new ur([],i,n,r,e,K,t,null,{});return new ta("",new Be(o,[]))}var kn=class{constructor(i,e,n,r,o,s,a,c){this.urlSubject=i,this.paramsSubject=e,this.queryParamsSubject=n,this.fragmentSubject=r,this.dataSubject=o,this.outlet=s,this.component=a,this._futureSnapshot=c,this.title=this.dataSubject?.pipe(q(l=>l[Lo]))??j(void 0),this.url=i,this.params=e,this.queryParams=n,this.fragment=r,this.data=o}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=this.params.pipe(q(i=>hr(i))),this._paramMap}get queryParamMap(){return this._queryParamMap??=this.queryParams.pipe(q(i=>hr(i))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}};function $s(t,i,e="emptyOnly"){let n,{routeConfig:r}=t;return i!==null&&(e==="always"||r?.path===""||!i.component&&!i.routeConfig?.loadComponent)?n={params:P(P({},i.params),t.params),data:P(P({},i.data),t.data),resolve:P(P(P(P({},t.data),i.data),r?.data),t._resolvedData)}:n={params:P({},t.params),data:P({},t.data),resolve:P(P({},t.data),t._resolvedData??{})},r&&ph(r)&&(n.resolve[Lo]=r.title),n}var ur=class{get title(){return this.data?.[Lo]}constructor(i,e,n,r,o,s,a,c,l){this.url=i,this.params=e,this.queryParams=n,this.fragment=r,this.data=o,this.outlet=s,this.component=a,this.routeConfig=c,this._resolve=l}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=hr(this.params),this._paramMap}get queryParamMap(){return this._queryParamMap??=hr(this.queryParams),this._queryParamMap}toString(){let i=this.url.map(n=>n.toString()).join("/"),e=this.routeConfig?this.routeConfig.path:"";return`Route(url:'${i}', path:'${e}')`}},ta=class extends Gs{constructor(i,e){super(e),this.url=i,Al(this,e)}toString(){return mh(this._root)}};function Al(t,i){i.value._routerState=t,i.children.forEach(e=>Al(t,e))}function mh(t){let i=t.children.length>0?` { ${t.children.map(mh).join(", ")} } `:"";return`${t.value}${i}`}function Kc(t){if(t.snapshot){let i=t.snapshot,e=t._futureSnapshot;t.snapshot=e,Si(i.queryParams,e.queryParams)||t.queryParamsSubject.next(e.queryParams),i.fragment!==e.fragment&&t.fragmentSubject.next(e.fragment),Si(i.params,e.params)||t.paramsSubject.next(e.params),Np(i.url,e.url)||t.urlSubject.next(e.url),Si(i.data,e.data)||t.dataSubject.next(e.data)}else t.snapshot=t._futureSnapshot,t.dataSubject.next(t._futureSnapshot.data)}function bl(t,i){let e=Si(t.params,i.params)&&Op(t.url,i.url),n=!t.parent!=!i.parent;return e&&!n&&(!t.parent||bl(t.parent,i.parent))}function ph(t){return typeof t.title=="string"||t.title===null}var Nl=(()=>{class t{constructor(){this.activated=null,this._activatedRoute=null,this.name=K,this.activateEvents=new Y,this.deactivateEvents=new Y,this.attachEvents=new Y,this.detachEvents=new Y,this.parentContexts=R(na),this.location=R(Ue),this.changeDetector=R(oe),this.inputBinder=R(Ml,{optional:!0}),this.supportsBindingToComponentInputs=!0}get activatedComponentRef(){return this.activated}ngOnChanges(e){if(e.name){let{firstChange:n,previousValue:r}=e.name;if(n)return;this.isTrackedInParentContexts(r)&&(this.deactivate(),this.parentContexts.onChildOutletDestroyed(r)),this.initializeOutletWithName()}}ngOnDestroy(){this.isTrackedInParentContexts(this.name)&&this.parentContexts.onChildOutletDestroyed(this.name),this.inputBinder?.unsubscribeFromRouteData(this)}isTrackedInParentContexts(e){return this.parentContexts.getContext(e)?.outlet===this}ngOnInit(){this.initializeOutletWithName()}initializeOutletWithName(){if(this.parentContexts.onChildOutletCreated(this.name,this),this.activated)return;let e=this.parentContexts.getContext(this.name);e?.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.injector))}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new xt(4012,!1);return this.activated.instance}get activatedRoute(){if(!this.activated)throw new xt(4012,!1);return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new xt(4012,!1);this.location.detach();let e=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(e.instance),e}attach(e,n){this.activated=e,this._activatedRoute=n,this.location.insert(e.hostView),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.attachEvents.emit(e.instance)}deactivate(){if(this.activated){let e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,n){if(this.isActivated)throw new xt(4013,!1);this._activatedRoute=e;let r=this.location,s=e.snapshot.component,a=this.parentContexts.getOrCreateContext(this.name).children,c=new vl(e,a,r.injector);this.activated=r.createComponent(s,{index:r.length,injector:c,environmentInjector:n}),this.changeDetector.markForCheck(),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.activateEvents.emit(this.activated.instance)}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275dir=it({type:t,selectors:[["router-outlet"]],inputs:{name:"name"},outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"],standalone:!0,features:[je]})}}return t})(),vl=class t{__ngOutletInjector(i){return new t(this.route,this.childContexts,i)}constructor(i,e,n){this.route=i,this.childContexts=e,this.parent=n}get(i,e){return i===kn?this.route:i===na?this.childContexts:this.parent.get(i,e)}},Ml=new Z("");function eg(t,i,e){let n=Io(t,i._root,e?e._root:void 0);return new _s(n,i)}function Io(t,i,e){if(e&&t.shouldReuseRoute(i.value,e.value.snapshot)){let n=e.value;n._futureSnapshot=i.value;let r=ig(t,i,e);return new Be(n,r)}else{if(t.shouldAttach(i.value)){let o=t.retrieve(i.value);if(o!==null){let s=o.route;return s.value._futureSnapshot=i.value,s.children=i.children.map(a=>Io(t,a)),s}}let n=ng(i.value),r=i.children.map(o=>Io(t,o));return new Be(n,r)}}function ig(t,i,e){return i.children.map(n=>{for(let r of e.children)if(t.shouldReuseRoute(n.value,r.value.snapshot))return Io(t,n,r);return Io(t,n)})}function ng(t){return new kn(new le(t.url),new le(t.params),new le(t.queryParams),new le(t.fragment),new le(t.data),t.outlet,t.component,t)}var Po=class{constructor(i,e){this.redirectTo=i,this.navigationBehaviorOptions=e}},gh="ngNavigationCancelingError";function ea(t,i){let{redirectTo:e,navigationBehaviorOptions:n}=yn(i)?{redirectTo:i,navigationBehaviorOptions:void 0}:i,r=bh(!1,Fe.Redirect);return r.url=e,r.navigationBehaviorOptions=n,r}function bh(t,i){let e=new Error(`NavigationCancelingError: ${t||""}`);return e[gh]=!0,e.cancellationCode=i,e}function rg(t){return vh(t)&&yn(t.url)}function vh(t){return!!t&&t[gh]}var og=(t,i,e,n)=>q(r=>(new El(i,r.targetRouterState,r.currentRouterState,e,n).activate(t),r)),El=class{constructor(i,e,n,r,o){this.routeReuseStrategy=i,this.futureState=e,this.currState=n,this.forwardEvent=r,this.inputBindingEnabled=o}activate(i){let e=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,n,i),Kc(this.futureState.root),this.activateChildRoutes(e,n,i)}deactivateChildRoutes(i,e,n){let r=cr(e);i.children.forEach(o=>{let s=o.value.outlet;this.deactivateRoutes(o,r[s],n),delete r[s]}),Object.values(r).forEach(o=>{this.deactivateRouteAndItsChildren(o,n)})}deactivateRoutes(i,e,n){let r=i.value,o=e?e.value:null;if(r===o)if(r.component){let s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(i,e,s.children)}else this.deactivateChildRoutes(i,e,n);else o&&this.deactivateRouteAndItsChildren(e,n)}deactivateRouteAndItsChildren(i,e){i.value.component&&this.routeReuseStrategy.shouldDetach(i.value.snapshot)?this.detachAndStoreRouteSubtree(i,e):this.deactivateRouteAndOutlet(i,e)}detachAndStoreRouteSubtree(i,e){let n=e.getContext(i.value.outlet),r=n&&i.value.component?n.children:e,o=cr(i);for(let s of Object.values(o))this.deactivateRouteAndItsChildren(s,r);if(n&&n.outlet){let s=n.outlet.detach(),a=n.children.onOutletDeactivated();this.routeReuseStrategy.store(i.value.snapshot,{componentRef:s,route:i,contexts:a})}}deactivateRouteAndOutlet(i,e){let n=e.getContext(i.value.outlet),r=n&&i.value.component?n.children:e,o=cr(i);for(let s of Object.values(o))this.deactivateRouteAndItsChildren(s,r);n&&(n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated()),n.attachRef=null,n.route=null)}activateChildRoutes(i,e,n){let r=cr(e);i.children.forEach(o=>{this.activateRoutes(o,r[o.value.outlet],n),this.forwardEvent(new fl(o.value.snapshot))}),i.children.length&&this.forwardEvent(new dl(i.value.snapshot))}activateRoutes(i,e,n){let r=i.value,o=e?e.value:null;if(Kc(r),r===o)if(r.component){let s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(i,e,s.children)}else this.activateChildRoutes(i,e,n);else if(r.component){let s=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){let a=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),s.children.onOutletReAttached(a.contexts),s.attachRef=a.componentRef,s.route=a.route.value,s.outlet&&s.outlet.attach(a.componentRef,a.route.value),Kc(a.route.value),this.activateChildRoutes(i,null,s.children)}else s.attachRef=null,s.route=r,s.outlet&&s.outlet.activateWith(r,s.injector),this.activateChildRoutes(i,null,s.children)}else this.activateChildRoutes(i,null,n)}},ia=class{constructor(i){this.path=i,this.route=this.path[this.path.length-1]}},dr=class{constructor(i,e){this.component=i,this.route=e}};function sg(t,i,e){let n=t._root,r=i?i._root:null;return To(n,r,e,[n.value])}function ag(t){let i=t.routeConfig?t.routeConfig.canActivateChild:null;return!i||i.length===0?null:{node:t,guards:i}}function pr(t,i){let e=Symbol(),n=i.get(t,e);return n===e?typeof t=="function"&&!ld(t)?t:i.get(t):n}function To(t,i,e,n,r={canDeactivateChecks:[],canActivateChecks:[]}){let o=cr(i);return t.children.forEach(s=>{cg(s,o[s.value.outlet],e,n.concat([s.value]),r),delete o[s.value.outlet]}),Object.entries(o).forEach(([s,a])=>No(a,e.getContext(s),r)),r}function cg(t,i,e,n,r={canDeactivateChecks:[],canActivateChecks:[]}){let o=t.value,s=i?i.value:null,a=e?e.getContext(t.value.outlet):null;if(s&&o.routeConfig===s.routeConfig){let c=lg(s,o,o.routeConfig.runGuardsAndResolvers);c?r.canActivateChecks.push(new ia(n)):(o.data=s.data,o._resolvedData=s._resolvedData),o.component?To(t,i,a?a.children:null,n,r):To(t,i,e,n,r),c&&a&&a.outlet&&a.outlet.isActivated&&r.canDeactivateChecks.push(new dr(a.outlet.component,s))}else s&&No(i,a,r),r.canActivateChecks.push(new ia(n)),o.component?To(t,null,a?a.children:null,n,r):To(t,null,e,n,r);return r}function lg(t,i,e){if(typeof e=="function")return e(t,i);switch(e){case"pathParamsChange":return!Rn(t.url,i.url);case"pathParamsOrQueryParamsChange":return!Rn(t.url,i.url)||!Si(t.queryParams,i.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!bl(t,i)||!Si(t.queryParams,i.queryParams);case"paramsChange":default:return!bl(t,i)}}function No(t,i,e){let n=cr(t),r=t.value;Object.entries(n).forEach(([o,s])=>{r.component?i?No(s,i.children.getContext(o),e):No(s,null,e):No(s,i,e)}),r.component?i&&i.outlet&&i.outlet.isActivated?e.canDeactivateChecks.push(new dr(i.outlet.component,r)):e.canDeactivateChecks.push(new dr(null,r)):e.canDeactivateChecks.push(new dr(null,r))}function Ho(t){return typeof t=="function"}function ug(t){return typeof t=="boolean"}function dg(t){return t&&Ho(t.canLoad)}function hg(t){return t&&Ho(t.canActivate)}function fg(t){return t&&Ho(t.canActivateChild)}function mg(t){return t&&Ho(t.canDeactivate)}function pg(t){return t&&Ho(t.canMatch)}function Eh(t){return t instanceof ed||t?.name==="EmptyError"}var Xs=Symbol("INITIAL_VALUE");function mr(){return ue(t=>Gn(t.map(i=>i.pipe(bi(1),$e(Xs)))).pipe(q(i=>{for(let e of i)if(e!==!0){if(e===Xs)return Xs;if(e===!1||gg(e))return e}return!0}),kt(i=>i!==Xs),bi(1)))}function gg(t){return yn(t)||t instanceof Po}function bg(t,i){return xe(e=>{let{targetSnapshot:n,currentSnapshot:r,guards:{canActivateChecks:o,canDeactivateChecks:s}}=e;return s.length===0&&o.length===0?j(vt(P({},e),{guardsResult:!0})):vg(s,n,r,t).pipe(xe(a=>a&&ug(a)?Eg(n,o,t,i):j(a)),q(a=>vt(P({},e),{guardsResult:a})))})}function vg(t,i,e,n){return ve(t).pipe(xe(r=>Dg(r.component,r.route,e,i,n)),Hi(r=>r!==!0,!0))}function Eg(t,i,e,n){return ve(i).pipe(Cn(r=>bs(Cg(r.route.parent,n),Sg(r.route,n),Tg(t,r.path,e),wg(t,r.route,e))),Hi(r=>r!==!0,!0))}function Sg(t,i){return t!==null&&i&&i(new hl(t)),j(!0)}function Cg(t,i){return t!==null&&i&&i(new ul(t)),j(!0)}function wg(t,i,e){let n=i.routeConfig?i.routeConfig.canActivate:null;if(!n||n.length===0)return j(!0);let r=n.map(o=>mc(()=>{let s=Vo(i)??e,a=pr(o,s),c=hg(a)?a.canActivate(i,t):ti(s,()=>a(i,t));return _i(c).pipe(Hi())}));return j(r).pipe(mr())}function Tg(t,i,e){let n=i[i.length-1],o=i.slice(0,i.length-1).reverse().map(s=>ag(s)).filter(s=>s!==null).map(s=>mc(()=>{let a=s.guards.map(c=>{let l=Vo(s.node)??e,u=pr(c,l),h=fg(u)?u.canActivateChild(n,t):ti(l,()=>u(n,t));return _i(h).pipe(Hi())});return j(a).pipe(mr())}));return j(o).pipe(mr())}function Dg(t,i,e,n,r){let o=i&&i.routeConfig?i.routeConfig.canDeactivate:null;if(!o||o.length===0)return j(!0);let s=o.map(a=>{let c=Vo(i)??r,l=pr(a,c),u=mg(l)?l.canDeactivate(t,i,e,n):ti(c,()=>l(t,i,e,n));return _i(u).pipe(Hi())});return j(s).pipe(mr())}function xg(t,i,e,n){let r=i.canLoad;if(r===void 0||r.length===0)return j(!0);let o=r.map(s=>{let a=pr(s,t),c=dg(a)?a.canLoad(i,e):ti(t,()=>a(i,e));return _i(c)});return j(o).pipe(mr(),Sh(n))}function Sh(t){return td(It(i=>{if(typeof i!="boolean")throw ea(t,i)}),q(i=>i===!0))}function Ag(t,i,e,n){let r=i.canMatch;if(!r||r.length===0)return j(!0);let o=r.map(s=>{let a=pr(s,t),c=pg(a)?a.canMatch(i,e):ti(t,()=>a(i,e));return _i(c)});return j(o).pipe(mr(),Sh(n))}var Bo=class{constructor(i){this.segmentGroup=i||null}},Fo=class extends Error{constructor(i){super(),this.urlTree=i}};function ar(t){return _r(new Bo(t))}function Ng(t){return _r(new xt(4e3,!1))}function Mg(t){return _r(bh(!1,Fe.GuardRejected))}var Sl=class{constructor(i,e){this.urlSerializer=i,this.urlTree=e}lineralizeSegments(i,e){let n=[],r=e.root;for(;;){if(n=n.concat(r.segments),r.numberOfChildren===0)return j(n);if(r.numberOfChildren>1||!r.children[K])return Ng(`${i.redirectTo}`);r=r.children[K]}}applyRedirectCommands(i,e,n,r,o){if(typeof e!="string"){let a=e,{queryParams:c,fragment:l,routeConfig:u,url:h,outlet:f,params:d,data:p,title:g}=r,b=ti(o,()=>a({params:d,data:p,queryParams:c,fragment:l,routeConfig:u,url:h,outlet:f,title:g}));if(b instanceof Ri)throw new Fo(b);e=b}let s=this.applyRedirectCreateUrlTree(e,this.urlSerializer.parse(e),i,n);if(e[0]==="/")throw new Fo(s);return s}applyRedirectCreateUrlTree(i,e,n,r){let o=this.createSegmentGroup(i,e.root,n,r);return new Ri(o,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(i,e){let n={};return Object.entries(i).forEach(([r,o])=>{if(typeof o=="string"&&o[0]===":"){let a=o.substring(1);n[r]=e[a]}else n[r]=o}),n}createSegmentGroup(i,e,n,r){let o=this.createSegments(i,e.segments,n,r),s={};return Object.entries(e.children).forEach(([a,c])=>{s[a]=this.createSegmentGroup(i,c,n,r)}),new gt(o,s)}createSegments(i,e,n,r){return e.map(o=>o.path[0]===":"?this.findPosParam(i,o,r):this.findOrReturn(o,n))}findPosParam(i,e,n){let r=n[e.path.substring(1)];if(!r)throw new xt(4001,!1);return r}findOrReturn(i,e){let n=0;for(let r of e){if(r.path===i.path)return e.splice(n),r;n++}return i}},Cl={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function Rg(t,i,e,n,r){let o=Ch(t,i,e);return o.matched?(n=_p(i,n),Ag(n,i,e,r).pipe(q(s=>s===!0?o:P({},Cl)))):j(o)}function Ch(t,i,e){if(i.path==="**")return yg(e);if(i.path==="")return i.pathMatch==="full"&&(t.hasChildren()||e.length>0)?P({},Cl):{matched:!0,consumedSegments:[],remainingSegments:e,parameters:{},positionalParamSegments:{}};let r=(i.matcher||Ap)(e,t,i);if(!r)return P({},Cl);let o={};Object.entries(r.posParams??{}).forEach(([a,c])=>{o[a]=c.path});let s=r.consumed.length>0?P(P({},o),r.consumed[r.consumed.length-1].parameters):o;return{matched:!0,consumedSegments:r.consumed,remainingSegments:e.slice(r.consumed.length),parameters:s,positionalParamSegments:r.posParams??{}}}function yg(t){return{matched:!0,parameters:t.length>0?th(t).parameters:{},consumedSegments:t,remainingSegments:[],positionalParamSegments:{}}}function Kd(t,i,e,n){return e.length>0&&Ig(t,e,n)?{segmentGroup:new gt(i,kg(n,new gt(e,t.children))),slicedSegments:[]}:e.length===0&&Pg(t,e,n)?{segmentGroup:new gt(t.segments,Og(t,e,n,t.children)),slicedSegments:e}:{segmentGroup:new gt(t.segments,t.children),slicedSegments:e}}function Og(t,i,e,n){let r={};for(let o of e)if(ra(t,i,o)&&!n[ii(o)]){let s=new gt([],{});r[ii(o)]=s}return P(P({},n),r)}function kg(t,i){let e={};e[K]=i;for(let n of t)if(n.path===""&&ii(n)!==K){let r=new gt([],{});e[ii(n)]=r}return e}function Ig(t,i,e){return e.some(n=>ra(t,i,n)&&ii(n)!==K)}function Pg(t,i,e){return e.some(n=>ra(t,i,n))}function ra(t,i,e){return(t.hasChildren()||i.length>0)&&e.pathMatch==="full"?!1:e.path===""}function Bg(t,i,e){return i.length===0&&!t.children[e]}var wl=class{};function Fg(t,i,e,n,r,o,s="emptyOnly"){return new Tl(t,i,e,n,r,s,o).recognize()}var Lg=31,Tl=class{constructor(i,e,n,r,o,s,a){this.injector=i,this.configLoader=e,this.rootComponentType=n,this.config=r,this.urlTree=o,this.paramsInheritanceStrategy=s,this.urlSerializer=a,this.applyRedirects=new Sl(this.urlSerializer,this.urlTree),this.absoluteRedirectCount=0,this.allowRedirects=!0}noMatchError(i){return new xt(4002,`'${i.segmentGroup}'`)}recognize(){let i=Kd(this.urlTree.root,[],[],this.config).segmentGroup;return this.match(i).pipe(q(({children:e,rootSnapshot:n})=>{let r=new Be(n,e),o=new ta("",r),s=Yp(n,[],this.urlTree.queryParams,this.urlTree.fragment);return s.queryParams=this.urlTree.queryParams,o.url=this.urlSerializer.serialize(s),{state:o,tree:s}}))}match(i){let e=new ur([],Object.freeze({}),Object.freeze(P({},this.urlTree.queryParams)),this.urlTree.fragment,Object.freeze({}),K,this.rootComponentType,null,{});return this.processSegmentGroup(this.injector,this.config,i,K,e).pipe(q(n=>({children:n,rootSnapshot:e})),_n(n=>{if(n instanceof Fo)return this.urlTree=n.urlTree,this.match(n.urlTree.root);throw n instanceof Bo?this.noMatchError(n):n}))}processSegmentGroup(i,e,n,r,o){return n.segments.length===0&&n.hasChildren()?this.processChildren(i,e,n,o):this.processSegment(i,e,n,n.segments,r,!0,o).pipe(q(s=>s instanceof Be?[s]:[]))}processChildren(i,e,n,r){let o=[];for(let s of Object.keys(n.children))s==="primary"?o.unshift(s):o.push(s);return ve(o).pipe(Cn(s=>{let a=n.children[s],c=$p(e,s);return this.processSegmentGroup(i,c,a,s,r)}),ad((s,a)=>(s.push(...a),s)),bc(null),sd(),xe(s=>{if(s===null)return ar(n);let a=wh(s);return Vg(a),j(a)}))}processSegment(i,e,n,r,o,s,a){return ve(e).pipe(Cn(c=>this.processSegmentAgainstRoute(c._injector??i,e,c,n,r,o,s,a).pipe(_n(l=>{if(l instanceof Bo)return j(null);throw l}))),Hi(c=>!!c),_n(c=>{if(Eh(c))return Bg(n,r,o)?j(new wl):ar(n);throw c}))}processSegmentAgainstRoute(i,e,n,r,o,s,a,c){return ii(n)!==s&&(s===K||!ra(r,o,n))?ar(r):n.redirectTo===void 0?this.matchSegmentAgainstRoute(i,r,n,o,s,c):this.allowRedirects&&a?this.expandSegmentAgainstRouteUsingRedirect(i,r,e,n,o,s,c):ar(r)}expandSegmentAgainstRouteUsingRedirect(i,e,n,r,o,s,a){let{matched:c,parameters:l,consumedSegments:u,positionalParamSegments:h,remainingSegments:f}=Ch(e,r,o);if(!c)return ar(e);typeof r.redirectTo=="string"&&r.redirectTo[0]==="/"&&(this.absoluteRedirectCount++,this.absoluteRedirectCount>Lg&&(this.allowRedirects=!1));let d=new ur(o,l,Object.freeze(P({},this.urlTree.queryParams)),this.urlTree.fragment,Gd(r),ii(r),r.component??r._loadedComponent??null,r,_d(r)),p=$s(d,a,this.paramsInheritanceStrategy);d.params=Object.freeze(p.params),d.data=Object.freeze(p.data);let g=this.applyRedirects.applyRedirectCommands(u,r.redirectTo,h,d,i);return this.applyRedirects.lineralizeSegments(r,g).pipe(xe(b=>this.processSegment(i,n,e,b.concat(f),s,!1,a)))}matchSegmentAgainstRoute(i,e,n,r,o,s){let a=Rg(e,n,r,i,this.urlSerializer);return n.path==="**"&&(e.children={}),a.pipe(ue(c=>c.matched?(i=n._injector??i,this.getChildConfig(i,n,r).pipe(ue(({routes:l})=>{let u=n._loadedInjector??i,{parameters:h,consumedSegments:f,remainingSegments:d}=c,p=new ur(f,h,Object.freeze(P({},this.urlTree.queryParams)),this.urlTree.fragment,Gd(n),ii(n),n.component??n._loadedComponent??null,n,_d(n)),g=$s(p,s,this.paramsInheritanceStrategy);p.params=Object.freeze(g.params),p.data=Object.freeze(g.data);let{segmentGroup:b,slicedSegments:E}=Kd(e,f,d,l);if(E.length===0&&b.hasChildren())return this.processChildren(u,l,b,p).pipe(q(w=>new Be(p,w)));if(l.length===0&&E.length===0)return j(new Be(p,[]));let v=ii(n)===o;return this.processSegment(u,l,b,E,v?K:o,!0,p).pipe(q(w=>new Be(p,w instanceof Be?[w]:[])))}))):ar(e)))}getChildConfig(i,e,n){return e.children?j({routes:e.children,injector:i}):e.loadChildren?e._loadedRoutes!==void 0?j({routes:e._loadedRoutes,injector:e._loadedInjector}):xg(i,e,n,this.urlSerializer).pipe(xe(r=>r?this.configLoader.loadChildren(i,e).pipe(It(o=>{e._loadedRoutes=o.routes,e._loadedInjector=o.injector})):Mg(e))):j({routes:[],injector:i})}};function Vg(t){t.sort((i,e)=>i.value.outlet===K?-1:e.value.outlet===K?1:i.value.outlet.localeCompare(e.value.outlet))}function Hg(t){let i=t.value.routeConfig;return i&&i.path===""}function wh(t){let i=[],e=new Set;for(let n of t){if(!Hg(n)){i.push(n);continue}let r=i.find(o=>n.value.routeConfig===o.value.routeConfig);r!==void 0?(r.children.push(...n.children),e.add(r)):i.push(n)}for(let n of e){let r=wh(n.children);i.push(new Be(n.value,r))}return i.filter(n=>!e.has(n))}function Gd(t){return t.data||{}}function _d(t){return t.resolve||{}}function jg(t,i,e,n,r,o){return xe(s=>Fg(t,i,e,n,s.extractedUrl,r,o).pipe(q(({state:a,tree:c})=>vt(P({},s),{targetSnapshot:a,urlAfterRedirects:c}))))}function Ug(t,i){return xe(e=>{let{targetSnapshot:n,guards:{canActivateChecks:r}}=e;if(!r.length)return j(e);let o=new Set(r.map(c=>c.route)),s=new Set;for(let c of o)if(!s.has(c))for(let l of Th(c))s.add(l);let a=0;return ve(s).pipe(Cn(c=>o.has(c)?Wg(c,n,t,i):(c.data=$s(c,c.parent,t).resolve,j(void 0))),It(()=>a++),vc(1),xe(c=>a===s.size?j(e):Ve))})}function Th(t){let i=t.children.map(e=>Th(e)).flat();return[t,...i]}function Wg(t,i,e,n){let r=t.routeConfig,o=t._resolve;return r?.title!==void 0&&!ph(r)&&(o[Lo]=r.title),zg(o,t,i,n).pipe(q(s=>(t._resolvedData=s,t.data=$s(t,t.parent,e).resolve,null)))}function zg(t,i,e,n){let r=$c(t);if(r.length===0)return j({});let o={};return ve(r).pipe(xe(s=>Xg(t[s],i,e,n).pipe(Hi(),It(a=>{if(a instanceof Po)throw ea(new Mo,a);o[s]=a}))),vc(1),nd(o),_n(s=>Eh(s)?Ve:_r(s)))}function Xg(t,i,e,n){let r=Vo(i)??n,o=pr(t,r),s=o.resolve?o.resolve(i,e):ti(r,()=>o(i,e));return _i(s)}function Gc(t){return ue(i=>{let e=t(i);return e?ve(e).pipe(q(()=>i)):j(i)})}var Dh=(()=>{class t{buildTitle(e){let n,r=e.root;for(;r!==void 0;)n=this.getResolvedTitleForRoute(r)??n,r=r.children.find(o=>o.outlet===K);return n}getResolvedTitleForRoute(e){return e.data[Lo]}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:()=>R(Yg),providedIn:"root"})}}return t})(),Yg=(()=>{class t extends Dh{constructor(e){super(),this.title=e}updateTitle(e){let n=this.buildTitle(e);n!==void 0&&this.title.setTitle(n)}static{this.\u0275fac=function(n){return new(n||t)(V(Yd))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Rl=new Z("",{providedIn:"root",factory:()=>({})}),qg=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275cmp=ot({type:t,selectors:[["ng-component"]],standalone:!0,features:[st],decls:1,vars:0,template:function(n,r){n&1&&Rt(0,"router-outlet")},dependencies:[Nl],encapsulation:2})}}return t})();function yl(t){let i=t.children&&t.children.map(yl),e=i?vt(P({},t),{children:i}):P({},t);return!e.component&&!e.loadComponent&&(i||e.loadChildren)&&e.outlet&&e.outlet!==K&&(e.component=qg),e}var Ol=new Z(""),Zg=(()=>{class t{constructor(){this.componentLoaders=new WeakMap,this.childrenLoaders=new WeakMap,this.compiler=R(Mc)}loadComponent(e){if(this.componentLoaders.get(e))return this.componentLoaders.get(e);if(e._loadedComponent)return j(e._loadedComponent);this.onLoadStartListener&&this.onLoadStartListener(e);let n=_i(e.loadComponent()).pipe(q(xh),It(o=>{this.onLoadEndListener&&this.onLoadEndListener(e),e._loadedComponent=o}),wn(()=>{this.componentLoaders.delete(e)})),r=new fc(n,()=>new tt).pipe(hc());return this.componentLoaders.set(e,r),r}loadChildren(e,n){if(this.childrenLoaders.get(n))return this.childrenLoaders.get(n);if(n._loadedRoutes)return j({routes:n._loadedRoutes,injector:n._loadedInjector});this.onLoadStartListener&&this.onLoadStartListener(n);let o=Jg(n,this.compiler,e,this.onLoadEndListener).pipe(wn(()=>{this.childrenLoaders.delete(n)})),s=new fc(o,()=>new tt).pipe(hc());return this.childrenLoaders.set(n,s),s}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();function Jg(t,i,e,n){return _i(t.loadChildren()).pipe(q(xh),xe(r=>r instanceof gd||Array.isArray(r)?j(r):ve(i.compileModuleAsync(r))),q(r=>{n&&n(t);let o,s,a=!1;return Array.isArray(r)?(s=r,a=!0):(o=r.create(e).injector,s=o.get(Ol,[],{optional:!0,self:!0}).flat()),{routes:s.map(yl),injector:o}}))}function Qg(t){return t&&typeof t=="object"&&"default"in t}function xh(t){return Qg(t)?t.default:t}var kl=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:()=>R(Kg),providedIn:"root"})}}return t})(),Kg=(()=>{class t{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,n){return e}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Gg=new Z("");var _g=new Z(""),$g=(()=>{class t{get hasRequestedNavigation(){return this.navigationId!==0}constructor(){this.currentNavigation=null,this.currentTransition=null,this.lastSuccessfulNavigation=null,this.events=new tt,this.transitionAbortSubject=new tt,this.configLoader=R(Zg),this.environmentInjector=R(Dn),this.urlSerializer=R(xl),this.rootContexts=R(na),this.location=R(Ms),this.inputBindingEnabled=R(Ml,{optional:!0})!==null,this.titleStrategy=R(Dh),this.options=R(Rl,{optional:!0})||{},this.paramsInheritanceStrategy=this.options.paramsInheritanceStrategy||"emptyOnly",this.urlHandlingStrategy=R(kl),this.createViewTransition=R(Gg,{optional:!0}),this.navigationErrorHandler=R(_g,{optional:!0}),this.navigationId=0,this.afterPreactivation=()=>j(void 0),this.rootComponentType=null;let e=r=>this.events.next(new cl(r)),n=r=>this.events.next(new ll(r));this.configLoader.onLoadEndListener=n,this.configLoader.onLoadStartListener=e}complete(){this.transitions?.complete()}handleNavigationRequest(e){let n=++this.navigationId;this.transitions?.next(vt(P(P({},this.transitions.value),e),{id:n}))}setupNavigations(e,n,r){return this.transitions=new le({id:0,currentUrlTree:n,currentRawUrl:n,extractedUrl:this.urlHandlingStrategy.extract(n),urlAfterRedirects:this.urlHandlingStrategy.extract(n),rawUrl:n,extras:{},resolve:()=>{},reject:()=>{},promise:Promise.resolve(!0),source:Ao,restoredState:null,currentSnapshot:r.snapshot,targetSnapshot:null,currentRouterState:r,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.transitions.pipe(kt(o=>o.id!==0),q(o=>vt(P({},o),{extractedUrl:this.urlHandlingStrategy.extract(o.rawUrl)})),ue(o=>{let s=!1,a=!1;return j(o).pipe(ue(c=>{if(this.navigationId>o.id)return this.cancelNavigationTransition(o,"",Fe.SupersededByNewNavigation),Ve;this.currentTransition=o,this.currentNavigation={id:c.id,initialUrl:c.rawUrl,extractedUrl:c.extractedUrl,targetBrowserUrl:typeof c.extras.browserUrl=="string"?this.urlSerializer.parse(c.extras.browserUrl):c.extras.browserUrl,trigger:c.source,extras:c.extras,previousNavigation:this.lastSuccessfulNavigation?vt(P({},this.lastSuccessfulNavigation),{previousNavigation:null}):null};let l=!e.navigated||this.isUpdatingInternalState()||this.isUpdatedBrowserUrl(),u=c.extras.onSameUrlNavigation??e.onSameUrlNavigation;if(!l&&u!=="reload"){let h="";return this.events.next(new On(c.id,this.urlSerializer.serialize(c.rawUrl),h,nl.IgnoredSameUrlNavigation)),c.resolve(!1),Ve}if(this.urlHandlingStrategy.shouldProcessUrl(c.rawUrl))return j(c).pipe(ue(h=>{let f=this.transitions?.getValue();return this.events.next(new yo(h.id,this.urlSerializer.serialize(h.extractedUrl),h.source,h.restoredState)),f!==this.transitions?.getValue()?Ve:Promise.resolve(h)}),jg(this.environmentInjector,this.configLoader,this.rootComponentType,e.config,this.urlSerializer,this.paramsInheritanceStrategy),It(h=>{o.targetSnapshot=h.targetSnapshot,o.urlAfterRedirects=h.urlAfterRedirects,this.currentNavigation=vt(P({},this.currentNavigation),{finalUrl:h.urlAfterRedirects});let f=new Ks(h.id,this.urlSerializer.serialize(h.extractedUrl),this.urlSerializer.serialize(h.urlAfterRedirects),h.targetSnapshot);this.events.next(f)}));if(l&&this.urlHandlingStrategy.shouldProcessUrl(c.currentRawUrl)){let{id:h,extractedUrl:f,source:d,restoredState:p,extras:g}=c,b=new yo(h,this.urlSerializer.serialize(f),d,p);this.events.next(b);let E=fh(this.rootComponentType).snapshot;return this.currentTransition=o=vt(P({},c),{targetSnapshot:E,urlAfterRedirects:f,extras:vt(P({},g),{skipLocationChange:!1,replaceUrl:!1})}),this.currentNavigation.finalUrl=f,j(o)}else{let h="";return this.events.next(new On(c.id,this.urlSerializer.serialize(c.extractedUrl),h,nl.IgnoredByUrlHandlingStrategy)),c.resolve(!1),Ve}}),It(c=>{let l=new rl(c.id,this.urlSerializer.serialize(c.extractedUrl),this.urlSerializer.serialize(c.urlAfterRedirects),c.targetSnapshot);this.events.next(l)}),q(c=>(this.currentTransition=o=vt(P({},c),{guards:sg(c.targetSnapshot,c.currentSnapshot,this.rootContexts)}),o)),bg(this.environmentInjector,c=>this.events.next(c)),It(c=>{if(o.guardsResult=c.guardsResult,c.guardsResult&&typeof c.guardsResult!="boolean")throw ea(this.urlSerializer,c.guardsResult);let l=new ol(c.id,this.urlSerializer.serialize(c.extractedUrl),this.urlSerializer.serialize(c.urlAfterRedirects),c.targetSnapshot,!!c.guardsResult);this.events.next(l)}),kt(c=>c.guardsResult?!0:(this.cancelNavigationTransition(c,"",Fe.GuardRejected),!1)),Gc(c=>{if(c.guards.canActivateChecks.length)return j(c).pipe(It(l=>{let u=new sl(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects),l.targetSnapshot);this.events.next(u)}),ue(l=>{let u=!1;return j(l).pipe(Ug(this.paramsInheritanceStrategy,this.environmentInjector),It({next:()=>u=!0,complete:()=>{u||this.cancelNavigationTransition(l,"",Fe.NoDataFromResolver)}}))}),It(l=>{let u=new al(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects),l.targetSnapshot);this.events.next(u)}))}),Gc(c=>{let l=u=>{let h=[];u.routeConfig?.loadComponent&&!u.routeConfig._loadedComponent&&h.push(this.configLoader.loadComponent(u.routeConfig).pipe(It(f=>{u.component=f}),q(()=>{})));for(let f of u.children)h.push(...l(f));return h};return Gn(l(c.targetSnapshot.root)).pipe(bc(null),bi(1))}),Gc(()=>this.afterPreactivation()),ue(()=>{let{currentSnapshot:c,targetSnapshot:l}=o,u=this.createViewTransition?.(this.environmentInjector,c.root,l.root);return u?ve(u).pipe(q(()=>o)):j(o)}),q(c=>{let l=eg(e.routeReuseStrategy,c.targetSnapshot,c.currentRouterState);return this.currentTransition=o=vt(P({},c),{targetRouterState:l}),this.currentNavigation.targetRouterState=l,o}),It(()=>{this.events.next(new ko)}),og(this.rootContexts,e.routeReuseStrategy,c=>this.events.next(c),this.inputBindingEnabled),bi(1),It({next:c=>{s=!0,this.lastSuccessfulNavigation=this.currentNavigation,this.events.next(new Gi(c.id,this.urlSerializer.serialize(c.extractedUrl),this.urlSerializer.serialize(c.urlAfterRedirects))),this.titleStrategy?.updateTitle(c.targetRouterState.snapshot),c.resolve(!0)},complete:()=>{s=!0}}),Ct(this.transitionAbortSubject.pipe(It(c=>{throw c}))),wn(()=>{!s&&!a&&this.cancelNavigationTransition(o,"",Fe.SupersededByNewNavigation),this.currentTransition?.id===o.id&&(this.currentNavigation=null,this.currentTransition=null)}),_n(c=>{if(a=!0,vh(c))this.events.next(new Mi(o.id,this.urlSerializer.serialize(o.extractedUrl),c.message,c.cancellationCode)),rg(c)?this.events.next(new fr(c.url,c.navigationBehaviorOptions)):o.resolve(!1);else{let l=new Oo(o.id,this.urlSerializer.serialize(o.extractedUrl),c,o.targetSnapshot??void 0);try{let u=ti(this.environmentInjector,()=>this.navigationErrorHandler?.(l));if(u instanceof Po){let{message:h,cancellationCode:f}=ea(this.urlSerializer,u);this.events.next(new Mi(o.id,this.urlSerializer.serialize(o.extractedUrl),h,f)),this.events.next(new fr(u.redirectTo,u.navigationBehaviorOptions))}else{this.events.next(l);let h=e.errorHandler(c);o.resolve(!!h)}}catch(u){this.options.resolveNavigationPromiseOnError?o.resolve(!1):o.reject(u)}}return Ve}))}))}cancelNavigationTransition(e,n,r){let o=new Mi(e.id,this.urlSerializer.serialize(e.extractedUrl),n,r);this.events.next(o),e.resolve(!1)}isUpdatingInternalState(){return this.currentTransition?.extractedUrl.toString()!==this.currentTransition?.currentUrlTree.toString()}isUpdatedBrowserUrl(){let e=this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(!0))),n=this.currentNavigation?.targetBrowserUrl??this.currentNavigation?.extractedUrl;return e.toString()!==n?.toString()&&!this.currentNavigation?.extras.skipLocationChange}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();function t0(t){return t!==Ao}var e0=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:()=>R(i0),providedIn:"root"})}}return t})(),Dl=class{shouldDetach(i){return!1}store(i,e){}shouldAttach(i){return!1}retrieve(i){return null}shouldReuseRoute(i,e){return i.routeConfig===e.routeConfig}},i0=(()=>{class t extends Dl{static{this.\u0275fac=(()=>{let e;return function(r){return(e||(e=Ui(t)))(r||t)}})()}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Ah=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:()=>R(n0),providedIn:"root"})}}return t})(),n0=(()=>{class t extends Ah{constructor(){super(...arguments),this.location=R(Ms),this.urlSerializer=R(xl),this.options=R(Rl,{optional:!0})||{},this.canceledNavigationResolution=this.options.canceledNavigationResolution||"replace",this.urlHandlingStrategy=R(kl),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.currentUrlTree=new Ri,this.rawUrlTree=this.currentUrlTree,this.currentPageId=0,this.lastSuccessfulId=-1,this.routerState=fh(null),this.stateMemento=this.createStateMemento()}getCurrentUrlTree(){return this.currentUrlTree}getRawUrlTree(){return this.rawUrlTree}restoredState(){return this.location.getState()}get browserPageId(){return this.canceledNavigationResolution!=="computed"?this.currentPageId:this.restoredState()?.\u0275routerPageId??this.currentPageId}getRouterState(){return this.routerState}createStateMemento(){return{rawUrlTree:this.rawUrlTree,currentUrlTree:this.currentUrlTree,routerState:this.routerState}}registerNonRouterCurrentEntryChangeListener(e){return this.location.subscribe(n=>{n.type==="popstate"&&e(n.url,n.state)})}handleRouterEvent(e,n){if(e instanceof yo)this.stateMemento=this.createStateMemento();else if(e instanceof On)this.rawUrlTree=n.initialUrl;else if(e instanceof Ks){if(this.urlUpdateStrategy==="eager"&&!n.extras.skipLocationChange){let r=this.urlHandlingStrategy.merge(n.finalUrl,n.initialUrl);this.setBrowserUrl(n.targetBrowserUrl??r,n)}}else e instanceof ko?(this.currentUrlTree=n.finalUrl,this.rawUrlTree=this.urlHandlingStrategy.merge(n.finalUrl,n.initialUrl),this.routerState=n.targetRouterState,this.urlUpdateStrategy==="deferred"&&!n.extras.skipLocationChange&&this.setBrowserUrl(n.targetBrowserUrl??this.rawUrlTree,n)):e instanceof Mi&&(e.code===Fe.GuardRejected||e.code===Fe.NoDataFromResolver)?this.restoreHistory(n):e instanceof Oo?this.restoreHistory(n,!0):e instanceof Gi&&(this.lastSuccessfulId=e.id,this.currentPageId=this.browserPageId)}setBrowserUrl(e,n){let r=e instanceof Ri?this.urlSerializer.serialize(e):e;if(this.location.isCurrentPathEqualTo(r)||n.extras.replaceUrl){let o=this.browserPageId,s=P(P({},n.extras.state),this.generateNgRouterState(n.id,o));this.location.replaceState(r,"",s)}else{let o=P(P({},n.extras.state),this.generateNgRouterState(n.id,this.browserPageId+1));this.location.go(r,"",o)}}restoreHistory(e,n=!1){if(this.canceledNavigationResolution==="computed"){let r=this.browserPageId,o=this.currentPageId-r;o!==0?this.location.historyGo(o):this.currentUrlTree===e.finalUrl&&o===0&&(this.resetState(e),this.resetUrlToCurrentUrlTree())}else this.canceledNavigationResolution==="replace"&&(n&&this.resetState(e),this.resetUrlToCurrentUrlTree())}resetState(e){this.routerState=this.stateMemento.routerState,this.currentUrlTree=this.stateMemento.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.finalUrl??this.rawUrlTree)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}generateNgRouterState(e,n){return this.canceledNavigationResolution==="computed"?{navigationId:e,\u0275routerPageId:n}:{navigationId:e}}static{this.\u0275fac=(()=>{let e;return function(r){return(e||(e=Ui(t)))(r||t)}})()}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Do=function(t){return t[t.COMPLETE=0]="COMPLETE",t[t.FAILED=1]="FAILED",t[t.REDIRECTING=2]="REDIRECTING",t}(Do||{});function r0(t,i){t.events.pipe(kt(e=>e instanceof Gi||e instanceof Mi||e instanceof Oo||e instanceof On),q(e=>e instanceof Gi||e instanceof On?Do.COMPLETE:(e instanceof Mi?e.code===Fe.Redirect||e.code===Fe.SupersededByNewNavigation:!1)?Do.REDIRECTING:Do.FAILED),kt(e=>e!==Do.REDIRECTING),bi(1)).subscribe(()=>{i()})}function o0(t){throw t}var s0={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},a0={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"},Il=(()=>{class t{get currentUrlTree(){return this.stateManager.getCurrentUrlTree()}get rawUrlTree(){return this.stateManager.getRawUrlTree()}get events(){return this._events}get routerState(){return this.stateManager.getRouterState()}constructor(){this.disposed=!1,this.console=R(xs),this.stateManager=R(Ah),this.options=R(Rl,{optional:!0})||{},this.pendingTasks=R(Ss),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.navigationTransitions=R($g),this.urlSerializer=R(xl),this.location=R(Ms),this.urlHandlingStrategy=R(kl),this._events=new tt,this.errorHandler=this.options.errorHandler||o0,this.navigated=!1,this.routeReuseStrategy=R(e0),this.onSameUrlNavigation=this.options.onSameUrlNavigation||"ignore",this.config=R(Ol,{optional:!0})?.flat()??[],this.componentInputBindingEnabled=!!R(Ml,{optional:!0}),this.eventsSubscription=new _e,this.resetConfig(this.config),this.navigationTransitions.setupNavigations(this,this.currentUrlTree,this.routerState).subscribe({error:e=>{this.console.warn(e)}}),this.subscribeToNavigationEvents()}subscribeToNavigationEvents(){let e=this.navigationTransitions.events.subscribe(n=>{try{let r=this.navigationTransitions.currentTransition,o=this.navigationTransitions.currentNavigation;if(r!==null&&o!==null){if(this.stateManager.handleRouterEvent(n,o),n instanceof Mi&&n.code!==Fe.Redirect&&n.code!==Fe.SupersededByNewNavigation)this.navigated=!0;else if(n instanceof Gi)this.navigated=!0;else if(n instanceof fr){let s=n.navigationBehaviorOptions,a=this.urlHandlingStrategy.merge(n.url,r.currentRawUrl),c=P({browserUrl:r.extras.browserUrl,info:r.extras.info,skipLocationChange:r.extras.skipLocationChange,replaceUrl:r.extras.replaceUrl||this.urlUpdateStrategy==="eager"||t0(r.source)},s);this.scheduleNavigation(a,Ao,null,c,{resolve:r.resolve,reject:r.reject,promise:r.promise})}}l0(n)&&this._events.next(n)}catch(r){this.navigationTransitions.transitionAbortSubject.next(r)}});this.eventsSubscription.add(e)}resetRootComponentType(e){this.routerState.root.component=e,this.navigationTransitions.rootComponentType=e}initialNavigation(){this.setUpLocationChangeListener(),this.navigationTransitions.hasRequestedNavigation||this.navigateToSyncWithBrowser(this.location.path(!0),Ao,this.stateManager.restoredState())}setUpLocationChangeListener(){this.nonRouterCurrentEntryChangeSubscription??=this.stateManager.registerNonRouterCurrentEntryChangeListener((e,n)=>{setTimeout(()=>{this.navigateToSyncWithBrowser(e,"popstate",n)},0)})}navigateToSyncWithBrowser(e,n,r){let o={replaceUrl:!0},s=r?.navigationId?r:null;if(r){let c=P({},r);delete c.navigationId,delete c.\u0275routerPageId,Object.keys(c).length!==0&&(o.state=c)}let a=this.parseUrl(e);this.scheduleNavigation(a,n,s,o)}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.navigationTransitions.currentNavigation}get lastSuccessfulNavigation(){return this.navigationTransitions.lastSuccessfulNavigation}resetConfig(e){this.config=e.map(yl),this.navigated=!1}ngOnDestroy(){this.dispose()}dispose(){this.navigationTransitions.complete(),this.nonRouterCurrentEntryChangeSubscription&&(this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),this.nonRouterCurrentEntryChangeSubscription=void 0),this.disposed=!0,this.eventsSubscription.unsubscribe()}createUrlTree(e,n={}){let{relativeTo:r,queryParams:o,fragment:s,queryParamsHandling:a,preserveFragment:c}=n,l=c?this.currentUrlTree.fragment:s,u=null;switch(a??this.options.defaultQueryParamsHandling){case"merge":u=P(P({},this.currentUrlTree.queryParams),o);break;case"preserve":u=this.currentUrlTree.queryParams;break;default:u=o||null}u!==null&&(u=this.removeEmptyProps(u));let h;try{let f=r?r.snapshot:this.routerState.snapshot.root;h=lh(f)}catch{(typeof e[0]!="string"||e[0][0]!=="/")&&(e=[]),h=this.currentUrlTree.root}return uh(h,e,u,l??null)}navigateByUrl(e,n={skipLocationChange:!1}){let r=yn(e)?e:this.parseUrl(e),o=this.urlHandlingStrategy.merge(r,this.rawUrlTree);return this.scheduleNavigation(o,Ao,null,n)}navigate(e,n={skipLocationChange:!1}){return c0(e),this.navigateByUrl(this.createUrlTree(e,n),n)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){try{return this.urlSerializer.parse(e)}catch{return this.urlSerializer.parse("/")}}isActive(e,n){let r;if(n===!0?r=P({},s0):n===!1?r=P({},a0):r=n,yn(e))return qd(this.currentUrlTree,e,r);let o=this.parseUrl(e);return qd(this.currentUrlTree,o,r)}removeEmptyProps(e){return Object.entries(e).reduce((n,[r,o])=>(o!=null&&(n[r]=o),n),{})}scheduleNavigation(e,n,r,o,s){if(this.disposed)return Promise.resolve(!1);let a,c,l;s?(a=s.resolve,c=s.reject,l=s.promise):l=new Promise((h,f)=>{a=h,c=f});let u=this.pendingTasks.add();return r0(this,()=>{queueMicrotask(()=>this.pendingTasks.remove(u))}),this.navigationTransitions.handleNavigationRequest({source:n,restoredState:r,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,rawUrl:e,extras:o,resolve:a,reject:c,promise:l,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),l.catch(h=>Promise.reject(h))}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();function c0(t){for(let i=0;i<t.length;i++)if(t[i]==null)throw new xt(4008,!1)}function l0(t){return!(t instanceof ko)&&!(t instanceof fr)}var Nh=(()=>{class t{constructor(e,n,r,o,s,a){this.router=e,this.route=n,this.tabIndexAttribute=r,this.renderer=o,this.el=s,this.locationStrategy=a,this.href=null,this.onChanges=new tt,this.preserveFragment=!1,this.skipLocationChange=!1,this.replaceUrl=!1,this.routerLinkInput=null;let c=s.nativeElement.tagName?.toLowerCase();this.isAnchorElement=c==="a"||c==="area",this.isAnchorElement?this.subscription=e.events.subscribe(l=>{l instanceof Gi&&this.updateHref()}):this.setTabIndexIfNotOnNativeEl("0")}setTabIndexIfNotOnNativeEl(e){this.tabIndexAttribute!=null||this.isAnchorElement||this.applyAttributeValue("tabindex",e)}ngOnChanges(e){this.isAnchorElement&&this.updateHref(),this.onChanges.next(this)}set routerLink(e){e==null?(this.routerLinkInput=null,this.setTabIndexIfNotOnNativeEl(null)):(yn(e)?this.routerLinkInput=e:this.routerLinkInput=Array.isArray(e)?e:[e],this.setTabIndexIfNotOnNativeEl("0"))}onClick(e,n,r,o,s){let a=this.urlTree;if(a===null||this.isAnchorElement&&(e!==0||n||r||o||s||typeof this.target=="string"&&this.target!="_self"))return!0;let c={skipLocationChange:this.skipLocationChange,replaceUrl:this.replaceUrl,state:this.state,info:this.info};return this.router.navigateByUrl(a,c),!this.isAnchorElement}ngOnDestroy(){this.subscription?.unsubscribe()}updateHref(){let e=this.urlTree;this.href=e!==null&&this.locationStrategy?this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(e)):null;let n=this.href===null?null:md(this.href,this.el.nativeElement.tagName.toLowerCase(),"href");this.applyAttributeValue("href",n)}applyAttributeValue(e,n){let r=this.renderer,o=this.el.nativeElement;n!==null?r.setAttribute(o,e,n):r.removeAttribute(o,e)}get urlTree(){return this.routerLinkInput===null?null:yn(this.routerLinkInput)?this.routerLinkInput:this.router.createUrlTree(this.routerLinkInput,{relativeTo:this.relativeTo!==void 0?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:this.preserveFragment})}static{this.\u0275fac=function(n){return new(n||t)(F(Il),F(kn),xn("tabindex"),F(oo),F(ft),F(yc))}}static{this.\u0275dir=it({type:t,selectors:[["","routerLink",""]],hostVars:1,hostBindings:function(n,r){n&1&&_("click",function(s){return r.onClick(s.button,s.ctrlKey,s.shiftKey,s.altKey,s.metaKey)}),n&2&&Ee("target",r.target)},inputs:{target:"target",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",state:"state",info:"info",relativeTo:"relativeTo",preserveFragment:[2,"preserveFragment","preserveFragment",Ft],skipLocationChange:[2,"skipLocationChange","skipLocationChange",Ft],replaceUrl:[2,"replaceUrl","replaceUrl",Ft],routerLink:"routerLink"},standalone:!0,features:[Ae,je]})}}return t})();var u0=new Z("");function Mh(t,...i){return Tn([{provide:Ol,multi:!0,useValue:t},[],{provide:kn,useFactory:d0,deps:[Il]},{provide:Nc,multi:!0,useFactory:h0},i.map(e=>e.\u0275providers)])}function d0(t){return t.routerState.root}function h0(){let t=R(ei);return i=>{let e=t.get(rr);if(i!==e.components[0])return;let n=t.get(Il),r=t.get(f0);t.get(m0)===1&&n.initialNavigation(),t.get(p0,null,Sc.Optional)?.setUpPreloading(),t.get(u0,null,Sc.Optional)?.init(),n.resetRootComponentType(e.componentTypes[0]),r.closed||(r.next(),r.complete(),r.unsubscribe())}}var f0=new Z("",{factory:()=>new tt}),m0=new Z("",{providedIn:"root",factory:()=>1});var p0=new Z("");var oa=class t{static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-home"]],standalone:!0,features:[st],decls:3,vars:0,consts:[[1,"container"]],template:function(e,n){e&1&&(N(0,"div",0)(1,"p"),I(2,"Este es el texto home"),A()())}})};var Bl;try{Bl=typeof Intl<"u"&&Intl.v8BreakIterator}catch{Bl=!1}var qt=(()=>{class t{constructor(e){this._platformId=e,this.isBrowser=this._platformId?kc(this._platformId):typeof document=="object"&&!!document,this.EDGE=this.isBrowser&&/(edge)/i.test(navigator.userAgent),this.TRIDENT=this.isBrowser&&/(msie|trident)/i.test(navigator.userAgent),this.BLINK=this.isBrowser&&!!(window.chrome||Bl)&&typeof CSS<"u"&&!this.EDGE&&!this.TRIDENT,this.WEBKIT=this.isBrowser&&/AppleWebKit/i.test(navigator.userAgent)&&!this.BLINK&&!this.EDGE&&!this.TRIDENT,this.IOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window),this.FIREFOX=this.isBrowser&&/(firefox|minefield)/i.test(navigator.userAgent),this.ANDROID=this.isBrowser&&/android/i.test(navigator.userAgent)&&!this.TRIDENT,this.SAFARI=this.isBrowser&&/safari/i.test(navigator.userAgent)&&this.WEBKIT}static{this.\u0275fac=function(n){return new(n||t)(V(vi))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var jo;function g0(){if(jo==null&&typeof window<"u")try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:()=>jo=!0}))}finally{jo=jo||!1}return jo}function $i(t){return g0()?t:!!t.capture}var ni=function(t){return t[t.NORMAL=0]="NORMAL",t[t.NEGATED=1]="NEGATED",t[t.INVERTED=2]="INVERTED",t}(ni||{}),sa,In;function Rh(){if(In==null){if(typeof document!="object"||!document||typeof Element!="function"||!Element)return In=!1,In;if("scrollBehavior"in document.documentElement.style)In=!0;else{let t=Element.prototype.scrollTo;t?In=!/\{\s*\[native code\]\s*\}/.test(t.toString()):In=!1}}return In}function gr(){if(typeof document!="object"||!document)return ni.NORMAL;if(sa==null){let t=document.createElement("div"),i=t.style;t.dir="rtl",i.width="1px",i.overflow="auto",i.visibility="hidden",i.pointerEvents="none",i.position="absolute";let e=document.createElement("div"),n=e.style;n.width="2px",n.height="1px",t.appendChild(e),document.body.appendChild(t),sa=ni.NORMAL,t.scrollLeft===0&&(t.scrollLeft=1,sa=t.scrollLeft===0?ni.NEGATED:ni.INVERTED),t.remove()}return sa}var Pl;function b0(){if(Pl==null){let t=typeof document<"u"?document.head:null;Pl=!!(t&&(t.createShadowRoot||t.attachShadow))}return Pl}function yh(t){if(b0()){let i=t.getRootNode?t.getRootNode():null;if(typeof ShadowRoot<"u"&&ShadowRoot&&i instanceof ShadowRoot)return i}return null}function tn(t){return t.composedPath?t.composedPath()[0]:t.target}function Oh(){return typeof __karma__<"u"&&!!__karma__||typeof jasmine<"u"&&!!jasmine||typeof jest<"u"&&!!jest||typeof Mocha<"u"&&!!Mocha}function aa(t,...i){return i.length?i.some(e=>t[e]):t.altKey||t.shiftKey||t.ctrlKey||t.metaKey}function ca(t,i=0){return v0(t)?Number(t):arguments.length===2?i:0}function v0(t){return!isNaN(parseFloat(t))&&!isNaN(Number(t))}function Fl(t){return Array.isArray(t)?t:[t]}function ri(t){return t instanceof ft?t.nativeElement:t}function E0(t){if(t.type==="characterData"&&t.target instanceof Comment)return!0;if(t.type==="childList"){for(let i=0;i<t.addedNodes.length;i++)if(!(t.addedNodes[i]instanceof Comment))return!1;for(let i=0;i<t.removedNodes.length;i++)if(!(t.removedNodes[i]instanceof Comment))return!1;return!0}return!1}var S0=(()=>{class t{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),C0=(()=>{class t{constructor(e){this._mutationObserverFactory=e,this._observedElements=new Map,this._ngZone=R(lt)}ngOnDestroy(){this._observedElements.forEach((e,n)=>this._cleanupObserver(n))}observe(e){let n=ri(e);return new Kt(r=>{let s=this._observeElement(n).pipe(q(a=>a.filter(c=>!E0(c))),kt(a=>!!a.length)).subscribe(a=>{this._ngZone.run(()=>{r.next(a)})});return()=>{s.unsubscribe(),this._unobserveElement(n)}})}_observeElement(e){return this._ngZone.runOutsideAngular(()=>{if(this._observedElements.has(e))this._observedElements.get(e).count++;else{let n=new tt,r=this._mutationObserverFactory.create(o=>n.next(o));r&&r.observe(e,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(e,{observer:r,stream:n,count:1})}return this._observedElements.get(e).stream})}_unobserveElement(e){this._observedElements.has(e)&&(this._observedElements.get(e).count--,this._observedElements.get(e).count||this._cleanupObserver(e))}_cleanupObserver(e){if(this._observedElements.has(e)){let{observer:n,stream:r}=this._observedElements.get(e);n&&n.disconnect(),r.complete(),this._observedElements.delete(e)}}static{this.\u0275fac=function(n){return new(n||t)(V(S0))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),kh=(()=>{class t{get disabled(){return this._disabled}set disabled(e){this._disabled=e,this._disabled?this._unsubscribe():this._subscribe()}get debounce(){return this._debounce}set debounce(e){this._debounce=ca(e),this._subscribe()}constructor(e,n){this._contentObserver=e,this._elementRef=n,this.event=new Y,this._disabled=!1,this._currentSubscription=null}ngAfterContentInit(){!this._currentSubscription&&!this.disabled&&this._subscribe()}ngOnDestroy(){this._unsubscribe()}_subscribe(){this._unsubscribe();let e=this._contentObserver.observe(this._elementRef);this._currentSubscription=(this.debounce?e.pipe(Vi(this.debounce)):e).subscribe(this.event)}_unsubscribe(){this._currentSubscription?.unsubscribe()}static{this.\u0275fac=function(n){return new(n||t)(F(C0),F(ft))}}static{this.\u0275dir=it({type:t,selectors:[["","cdkObserveContent",""]],inputs:{disabled:[2,"cdkObserveContentDisabled","disabled",Ft],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"],standalone:!0,features:[Ae]})}}return t})();var Ih=new Set,Pn,w0=(()=>{class t{constructor(e,n){this._platform=e,this._nonce=n,this._matchMedia=this._platform.isBrowser&&window.matchMedia?window.matchMedia.bind(window):D0}matchMedia(e){return(this._platform.WEBKIT||this._platform.BLINK)&&T0(e,this._nonce),this._matchMedia(e)}static{this.\u0275fac=function(n){return new(n||t)(V(qt),V(no,8))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();function T0(t,i){if(!Ih.has(t))try{Pn||(Pn=document.createElement("style"),i&&Pn.setAttribute("nonce",i),Pn.setAttribute("type","text/css"),document.head.appendChild(Pn)),Pn.sheet&&(Pn.sheet.insertRule(`@media ${t} {body{ }}`,0),Ih.add(t))}catch(e){console.error(e)}}function D0(t){return{matches:t==="all"||t==="",media:t,addListener:()=>{},removeListener:()=>{}}}var Bh=(()=>{class t{constructor(e,n){this._mediaMatcher=e,this._zone=n,this._queries=new Map,this._destroySubject=new tt}ngOnDestroy(){this._destroySubject.next(),this._destroySubject.complete()}isMatched(e){return Ph(Fl(e)).some(r=>this._registerQuery(r).mql.matches)}observe(e){let r=Ph(Fl(e)).map(s=>this._registerQuery(s).observable),o=Gn(r);return o=bs(o.pipe(bi(1)),o.pipe(ji(1),Vi(0))),o.pipe(q(s=>{let a={matches:!1,breakpoints:{}};return s.forEach(({matches:c,query:l})=>{a.matches=a.matches||c,a.breakpoints[l]=c}),a}))}_registerQuery(e){if(this._queries.has(e))return this._queries.get(e);let n=this._mediaMatcher.matchMedia(e),o={observable:new Kt(s=>{let a=c=>this._zone.run(()=>s.next(c));return n.addListener(a),()=>{n.removeListener(a)}}).pipe($e(n),q(({matches:s})=>({query:e,matches:s})),Ct(this._destroySubject)),mql:n};return this._queries.set(e,o),o}static{this.\u0275fac=function(n){return new(n||t)(V(w0),V(lt))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();function Ph(t){return t.map(i=>i.split(",")).reduce((i,e)=>i.concat(e)).map(i=>i.trim())}var z0=200,Vl=class{constructor(i,e){this._letterKeyStream=new tt,this._items=[],this._selectedItemIndex=-1,this._pressedLetters=[],this._selectedItem=new tt,this.selectedItem=this._selectedItem;let n=typeof e?.debounceInterval=="number"?e.debounceInterval:z0;e?.skipPredicate&&(this._skipPredicateFn=e.skipPredicate),this.setItems(i),this._setupKeyHandler(n)}destroy(){this._pressedLetters=[],this._letterKeyStream.complete(),this._selectedItem.complete()}setCurrentSelectedItemIndex(i){this._selectedItemIndex=i}setItems(i){this._items=i}handleKey(i){let e=i.keyCode;i.key&&i.key.length===1?this._letterKeyStream.next(i.key.toLocaleUpperCase()):(e>=65&&e<=90||e>=48&&e<=57)&&this._letterKeyStream.next(String.fromCharCode(e))}isTyping(){return this._pressedLetters.length>0}reset(){this._pressedLetters=[]}_setupKeyHandler(i){this._letterKeyStream.pipe(It(e=>this._pressedLetters.push(e)),Vi(i),kt(()=>this._pressedLetters.length>0),q(()=>this._pressedLetters.join("").toLocaleUpperCase())).subscribe(e=>{for(let n=1;n<this._items.length+1;n++){let r=(this._selectedItemIndex+n)%this._items.length,o=this._items[r];if(!this._skipPredicateFn?.(o)&&o.getLabel?.().toLocaleUpperCase().trim().indexOf(e)===0){this._selectedItem.next(o);break}}this._pressedLetters=[]})}},Hl=class{constructor(i,e){this._items=i,this._activeItemIndex=-1,this._activeItem=An(null),this._wrap=!1,this._typeaheadSubscription=_e.EMPTY,this._vertical=!0,this._allowedModifierKeys=[],this._homeAndEnd=!1,this._pageUpAndDown={enabled:!1,delta:10},this._skipPredicateFn=n=>n.disabled,this.tabOut=new tt,this.change=new tt,i instanceof io?this._itemChangesSubscription=i.changes.subscribe(n=>this._itemsChanged(n.toArray())):Dc(i)&&(this._effectRef=Rc(()=>this._itemsChanged(i()),{injector:e}))}skipPredicate(i){return this._skipPredicateFn=i,this}withWrap(i=!0){return this._wrap=i,this}withVerticalOrientation(i=!0){return this._vertical=i,this}withHorizontalOrientation(i){return this._horizontal=i,this}withAllowedModifierKeys(i){return this._allowedModifierKeys=i,this}withTypeAhead(i=200){this._typeaheadSubscription.unsubscribe();let e=this._getItemsArray();return this._typeahead=new Vl(e,{debounceInterval:typeof i=="number"?i:void 0,skipPredicate:n=>this._skipPredicateFn(n)}),this._typeaheadSubscription=this._typeahead.selectedItem.subscribe(n=>{this.setActiveItem(n)}),this}cancelTypeahead(){return this._typeahead?.reset(),this}withHomeAndEnd(i=!0){return this._homeAndEnd=i,this}withPageUpDown(i=!0,e=10){return this._pageUpAndDown={enabled:i,delta:e},this}setActiveItem(i){let e=this._activeItem();this.updateActiveItem(i),this._activeItem()!==e&&this.change.next(this._activeItemIndex)}onKeydown(i){let e=i.keyCode,r=["altKey","ctrlKey","metaKey","shiftKey"].every(o=>!i[o]||this._allowedModifierKeys.indexOf(o)>-1);switch(e){case 9:this.tabOut.next();return;case 40:if(this._vertical&&r){this.setNextItemActive();break}else return;case 38:if(this._vertical&&r){this.setPreviousItemActive();break}else return;case 39:if(this._horizontal&&r){this._horizontal==="rtl"?this.setPreviousItemActive():this.setNextItemActive();break}else return;case 37:if(this._horizontal&&r){this._horizontal==="rtl"?this.setNextItemActive():this.setPreviousItemActive();break}else return;case 36:if(this._homeAndEnd&&r){this.setFirstItemActive();break}else return;case 35:if(this._homeAndEnd&&r){this.setLastItemActive();break}else return;case 33:if(this._pageUpAndDown.enabled&&r){let o=this._activeItemIndex-this._pageUpAndDown.delta;this._setActiveItemByIndex(o>0?o:0,1);break}else return;case 34:if(this._pageUpAndDown.enabled&&r){let o=this._activeItemIndex+this._pageUpAndDown.delta,s=this._getItemsArray().length;this._setActiveItemByIndex(o<s?o:s-1,-1);break}else return;default:(r||aa(i,"shiftKey"))&&this._typeahead?.handleKey(i);return}this._typeahead?.reset(),i.preventDefault()}get activeItemIndex(){return this._activeItemIndex}get activeItem(){return this._activeItem()}isTyping(){return!!this._typeahead&&this._typeahead.isTyping()}setFirstItemActive(){this._setActiveItemByIndex(0,1)}setLastItemActive(){this._setActiveItemByIndex(this._getItemsArray().length-1,-1)}setNextItemActive(){this._activeItemIndex<0?this.setFirstItemActive():this._setActiveItemByDelta(1)}setPreviousItemActive(){this._activeItemIndex<0&&this._wrap?this.setLastItemActive():this._setActiveItemByDelta(-1)}updateActiveItem(i){let e=this._getItemsArray(),n=typeof i=="number"?i:e.indexOf(i),r=e[n];this._activeItem.set(r??null),this._activeItemIndex=n,this._typeahead?.setCurrentSelectedItemIndex(n)}destroy(){this._typeaheadSubscription.unsubscribe(),this._itemChangesSubscription?.unsubscribe(),this._effectRef?.destroy(),this._typeahead?.destroy(),this.tabOut.complete(),this.change.complete()}_setActiveItemByDelta(i){this._wrap?this._setActiveInWrapMode(i):this._setActiveInDefaultMode(i)}_setActiveInWrapMode(i){let e=this._getItemsArray();for(let n=1;n<=e.length;n++){let r=(this._activeItemIndex+i*n+e.length)%e.length,o=e[r];if(!this._skipPredicateFn(o)){this.setActiveItem(r);return}}}_setActiveInDefaultMode(i){this._setActiveItemByIndex(this._activeItemIndex+i,i)}_setActiveItemByIndex(i,e){let n=this._getItemsArray();if(n[i]){for(;this._skipPredicateFn(n[i]);)if(i+=e,!n[i])return;this.setActiveItem(i)}}_getItemsArray(){return Dc(this._items)?this._items():this._items instanceof io?this._items.toArray():this._items}_itemsChanged(i){this._typeahead?.setItems(i);let e=this._activeItem();if(e){let n=i.indexOf(e);n>-1&&n!==this._activeItemIndex&&(this._activeItemIndex=n,this._typeahead?.setCurrentSelectedItemIndex(n))}}};var da=class extends Hl{constructor(){super(...arguments),this._origin="program"}setFocusOrigin(i){return this._origin=i,this}setActiveItem(i){super.setActiveItem(i),this.activeItem&&this.activeItem.focus(this._origin)}};function jl(t){return t.buttons===0||t.detail===0}function Ul(t){let i=t.touches&&t.touches[0]||t.changedTouches&&t.changedTouches[0];return!!i&&i.identifier===-1&&(i.radiusX==null||i.radiusX===1)&&(i.radiusY==null||i.radiusY===1)}var X0=new Z("cdk-input-modality-detector-options"),Y0={ignoreKeys:[18,17,224,91,16]},Vh=650,br=$i({passive:!0,capture:!0}),q0=(()=>{class t{get mostRecentModality(){return this._modality.value}constructor(e,n,r,o){this._platform=e,this._mostRecentTarget=null,this._modality=new le(null),this._lastTouchMs=0,this._onKeydown=s=>{this._options?.ignoreKeys?.some(a=>a===s.keyCode)||(this._modality.next("keyboard"),this._mostRecentTarget=tn(s))},this._onMousedown=s=>{Date.now()-this._lastTouchMs<Vh||(this._modality.next(jl(s)?"keyboard":"mouse"),this._mostRecentTarget=tn(s))},this._onTouchstart=s=>{if(Ul(s)){this._modality.next("keyboard");return}this._lastTouchMs=Date.now(),this._modality.next("touch"),this._mostRecentTarget=tn(s)},this._options=P(P({},Y0),o),this.modalityDetected=this._modality.pipe(ji(1)),this.modalityChanged=this.modalityDetected.pipe(to()),e.isBrowser&&n.runOutsideAngular(()=>{r.addEventListener("keydown",this._onKeydown,br),r.addEventListener("mousedown",this._onMousedown,br),r.addEventListener("touchstart",this._onTouchstart,br)})}ngOnDestroy(){this._modality.complete(),this._platform.isBrowser&&(document.removeEventListener("keydown",this._onKeydown,br),document.removeEventListener("mousedown",this._onMousedown,br),document.removeEventListener("touchstart",this._onTouchstart,br))}static{this.\u0275fac=function(n){return new(n||t)(V(qt),V(lt),V(at),V(X0,8))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var ua=function(t){return t[t.IMMEDIATE=0]="IMMEDIATE",t[t.EVENTUAL=1]="EVENTUAL",t}(ua||{}),Z0=new Z("cdk-focus-monitor-default-options"),la=$i({passive:!0,capture:!0}),J0=(()=>{class t{constructor(e,n,r,o,s){this._ngZone=e,this._platform=n,this._inputModalityDetector=r,this._origin=null,this._windowFocused=!1,this._originFromTouchInteraction=!1,this._elementInfo=new Map,this._monitoredElementCount=0,this._rootNodeFocusListenerCount=new Map,this._windowFocusListener=()=>{this._windowFocused=!0,this._windowFocusTimeoutId=window.setTimeout(()=>this._windowFocused=!1)},this._stopInputModalityDetector=new tt,this._rootNodeFocusAndBlurListener=a=>{let c=tn(a);for(let l=c;l;l=l.parentElement)a.type==="focus"?this._onFocus(a,l):this._onBlur(a,l)},this._document=o,this._detectionMode=s?.detectionMode||ua.IMMEDIATE}monitor(e,n=!1){let r=ri(e);if(!this._platform.isBrowser||r.nodeType!==1)return j();let o=yh(r)||this._getDocument(),s=this._elementInfo.get(r);if(s)return n&&(s.checkChildren=!0),s.subject;let a={checkChildren:n,subject:new tt,rootNode:o};return this._elementInfo.set(r,a),this._registerGlobalListeners(a),a.subject}stopMonitoring(e){let n=ri(e),r=this._elementInfo.get(n);r&&(r.subject.complete(),this._setClasses(n),this._elementInfo.delete(n),this._removeGlobalListeners(r))}focusVia(e,n,r){let o=ri(e),s=this._getDocument().activeElement;o===s?this._getClosestElementsInfo(o).forEach(([a,c])=>this._originChanged(a,n,c)):(this._setOrigin(n),typeof o.focus=="function"&&o.focus(r))}ngOnDestroy(){this._elementInfo.forEach((e,n)=>this.stopMonitoring(n))}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_getFocusOrigin(e){return this._origin?this._originFromTouchInteraction?this._shouldBeAttributedToTouch(e)?"touch":"program":this._origin:this._windowFocused&&this._lastFocusOrigin?this._lastFocusOrigin:e&&this._isLastInteractionFromInputLabel(e)?"mouse":"program"}_shouldBeAttributedToTouch(e){return this._detectionMode===ua.EVENTUAL||!!e?.contains(this._inputModalityDetector._mostRecentTarget)}_setClasses(e,n){e.classList.toggle("cdk-focused",!!n),e.classList.toggle("cdk-touch-focused",n==="touch"),e.classList.toggle("cdk-keyboard-focused",n==="keyboard"),e.classList.toggle("cdk-mouse-focused",n==="mouse"),e.classList.toggle("cdk-program-focused",n==="program")}_setOrigin(e,n=!1){this._ngZone.runOutsideAngular(()=>{if(this._origin=e,this._originFromTouchInteraction=e==="touch"&&n,this._detectionMode===ua.IMMEDIATE){clearTimeout(this._originTimeoutId);let r=this._originFromTouchInteraction?Vh:1;this._originTimeoutId=setTimeout(()=>this._origin=null,r)}})}_onFocus(e,n){let r=this._elementInfo.get(n),o=tn(e);!r||!r.checkChildren&&n!==o||this._originChanged(n,this._getFocusOrigin(o),r)}_onBlur(e,n){let r=this._elementInfo.get(n);!r||r.checkChildren&&e.relatedTarget instanceof Node&&n.contains(e.relatedTarget)||(this._setClasses(n),this._emitOrigin(r,null))}_emitOrigin(e,n){e.subject.observers.length&&this._ngZone.run(()=>e.subject.next(n))}_registerGlobalListeners(e){if(!this._platform.isBrowser)return;let n=e.rootNode,r=this._rootNodeFocusListenerCount.get(n)||0;r||this._ngZone.runOutsideAngular(()=>{n.addEventListener("focus",this._rootNodeFocusAndBlurListener,la),n.addEventListener("blur",this._rootNodeFocusAndBlurListener,la)}),this._rootNodeFocusListenerCount.set(n,r+1),++this._monitoredElementCount===1&&(this._ngZone.runOutsideAngular(()=>{this._getWindow().addEventListener("focus",this._windowFocusListener)}),this._inputModalityDetector.modalityDetected.pipe(Ct(this._stopInputModalityDetector)).subscribe(o=>{this._setOrigin(o,!0)}))}_removeGlobalListeners(e){let n=e.rootNode;if(this._rootNodeFocusListenerCount.has(n)){let r=this._rootNodeFocusListenerCount.get(n);r>1?this._rootNodeFocusListenerCount.set(n,r-1):(n.removeEventListener("focus",this._rootNodeFocusAndBlurListener,la),n.removeEventListener("blur",this._rootNodeFocusAndBlurListener,la),this._rootNodeFocusListenerCount.delete(n))}--this._monitoredElementCount||(this._getWindow().removeEventListener("focus",this._windowFocusListener),this._stopInputModalityDetector.next(),clearTimeout(this._windowFocusTimeoutId),clearTimeout(this._originTimeoutId))}_originChanged(e,n,r){this._setClasses(e,n),this._emitOrigin(r,n),this._lastFocusOrigin=n}_getClosestElementsInfo(e){let n=[];return this._elementInfo.forEach((r,o)=>{(o===e||r.checkChildren&&o.contains(e))&&n.push([o,r])}),n}_isLastInteractionFromInputLabel(e){let{_mostRecentTarget:n,mostRecentModality:r}=this._inputModalityDetector;if(r!=="mouse"||!n||n===e||e.nodeName!=="INPUT"&&e.nodeName!=="TEXTAREA"||e.disabled)return!1;let o=e.labels;if(o){for(let s=0;s<o.length;s++)if(o[s].contains(n))return!0}return!1}static{this.\u0275fac=function(n){return new(n||t)(V(lt),V(qt),V(q0),V(at,8),V(Z0,8))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Hh=(()=>{class t{constructor(e,n){this._elementRef=e,this._focusMonitor=n,this._focusOrigin=null,this.cdkFocusChange=new Y}get focusOrigin(){return this._focusOrigin}ngAfterViewInit(){let e=this._elementRef.nativeElement;this._monitorSubscription=this._focusMonitor.monitor(e,e.nodeType===1&&e.hasAttribute("cdkMonitorSubtreeFocus")).subscribe(n=>{this._focusOrigin=n,this.cdkFocusChange.emit(n)})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._monitorSubscription&&this._monitorSubscription.unsubscribe()}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(J0))}}static{this.\u0275dir=it({type:t,selectors:[["","cdkMonitorElementFocus",""],["","cdkMonitorSubtreeFocus",""]],outputs:{cdkFocusChange:"cdkFocusChange"},exportAs:["cdkMonitorFocus"],standalone:!0})}}return t})(),Bn=function(t){return t[t.NONE=0]="NONE",t[t.BLACK_ON_WHITE=1]="BLACK_ON_WHITE",t[t.WHITE_ON_BLACK=2]="WHITE_ON_BLACK",t}(Bn||{}),Fh="cdk-high-contrast-black-on-white",Lh="cdk-high-contrast-white-on-black",Ll="cdk-high-contrast-active",jh=(()=>{class t{constructor(e,n){this._platform=e,this._document=n,this._breakpointSubscription=R(Bh).observe("(forced-colors: active)").subscribe(()=>{this._hasCheckedHighContrastMode&&(this._hasCheckedHighContrastMode=!1,this._applyBodyHighContrastModeCssClasses())})}getHighContrastMode(){if(!this._platform.isBrowser)return Bn.NONE;let e=this._document.createElement("div");e.style.backgroundColor="rgb(1,2,3)",e.style.position="absolute",this._document.body.appendChild(e);let n=this._document.defaultView||window,r=n&&n.getComputedStyle?n.getComputedStyle(e):null,o=(r&&r.backgroundColor||"").replace(/ /g,"");switch(e.remove(),o){case"rgb(0,0,0)":case"rgb(45,50,54)":case"rgb(32,32,32)":return Bn.WHITE_ON_BLACK;case"rgb(255,255,255)":case"rgb(255,250,239)":return Bn.BLACK_ON_WHITE}return Bn.NONE}ngOnDestroy(){this._breakpointSubscription.unsubscribe()}_applyBodyHighContrastModeCssClasses(){if(!this._hasCheckedHighContrastMode&&this._platform.isBrowser&&this._document.body){let e=this._document.body.classList;e.remove(Ll,Fh,Lh),this._hasCheckedHighContrastMode=!0;let n=this.getHighContrastMode();n===Bn.BLACK_ON_WHITE?e.add(Ll,Fh):n===Bn.WHITE_ON_BLACK&&e.add(Ll,Lh)}}static{this.\u0275fac=function(n){return new(n||t)(V(qt),V(at))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var K0=new Z("cdk-dir-doc",{providedIn:"root",factory:G0});function G0(){return R(at)}var _0=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;function $0(t){let i=t?.toLowerCase()||"";return i==="auto"&&typeof navigator<"u"&&navigator?.language?_0.test(navigator.language)?"rtl":"ltr":i==="rtl"?"rtl":"ltr"}var vr=(()=>{class t{constructor(e){if(this.value="ltr",this.change=new Y,e){let n=e.body?e.body.dir:null,r=e.documentElement?e.documentElement.dir:null;this.value=$0(n||r||"ltr")}}ngOnDestroy(){this.change.complete()}static{this.\u0275fac=function(n){return new(n||t)(V(K0,8))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var Wl=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275mod=Wt({type:t})}static{this.\u0275inj=Ut({})}}return t})();function ib(){return!0}var nb=new Z("mat-sanity-checks",{providedIn:"root",factory:ib}),ql=(()=>{class t{constructor(e,n,r){this._sanityChecks=n,this._document=r,this._hasDoneGlobalChecks=!1,e._applyBodyHighContrastModeCssClasses(),this._hasDoneGlobalChecks||(this._hasDoneGlobalChecks=!0)}_checkIsEnabled(e){return Oh()?!1:typeof this._sanityChecks=="boolean"?this._sanityChecks:!!this._sanityChecks[e]}static{this.\u0275fac=function(n){return new(n||t)(V(jh),V(nb,8),V(at))}}static{this.\u0275mod=Wt({type:t})}static{this.\u0275inj=Ut({imports:[Wl,Wl]})}}return t})();var ze=function(t){return t[t.FADING_IN=0]="FADING_IN",t[t.VISIBLE=1]="VISIBLE",t[t.FADING_OUT=2]="FADING_OUT",t[t.HIDDEN=3]="HIDDEN",t}(ze||{}),zl=class{constructor(i,e,n,r=!1){this._renderer=i,this.element=e,this.config=n,this._animationForciblyDisabledThroughCss=r,this.state=ze.HIDDEN}fadeOut(){this._renderer.fadeOutRipple(this)}},Wh=$i({passive:!0,capture:!0}),Xl=class{constructor(){this._events=new Map,this._delegateEventHandler=i=>{let e=tn(i);e&&this._events.get(i.type)?.forEach((n,r)=>{(r===e||r.contains(e))&&n.forEach(o=>o.handleEvent(i))})}}addHandler(i,e,n,r){let o=this._events.get(e);if(o){let s=o.get(n);s?s.add(r):o.set(n,new Set([r]))}else this._events.set(e,new Map([[n,new Set([r])]])),i.runOutsideAngular(()=>{document.addEventListener(e,this._delegateEventHandler,Wh)})}removeHandler(i,e,n){let r=this._events.get(i);if(!r)return;let o=r.get(e);o&&(o.delete(n),o.size===0&&r.delete(e),r.size===0&&(this._events.delete(i),document.removeEventListener(i,this._delegateEventHandler,Wh)))}},zh={enterDuration:225,exitDuration:150},rb=800,Xh=$i({passive:!0,capture:!0}),Yh=["mousedown","touchstart"],qh=["mouseup","mouseleave","touchend","touchcancel"],Yl=class t{static{this._eventManager=new Xl}constructor(i,e,n,r){this._target=i,this._ngZone=e,this._platform=r,this._isPointerDown=!1,this._activeRipples=new Map,this._pointerUpEventsRegistered=!1,r.isBrowser&&(this._containerElement=ri(n))}fadeInRipple(i,e,n={}){let r=this._containerRect=this._containerRect||this._containerElement.getBoundingClientRect(),o=P(P({},zh),n.animation);n.centered&&(i=r.left+r.width/2,e=r.top+r.height/2);let s=n.radius||ob(i,e,r),a=i-r.left,c=e-r.top,l=o.enterDuration,u=document.createElement("div");u.classList.add("mat-ripple-element"),u.style.left=`${a-s}px`,u.style.top=`${c-s}px`,u.style.height=`${s*2}px`,u.style.width=`${s*2}px`,n.color!=null&&(u.style.backgroundColor=n.color),u.style.transitionDuration=`${l}ms`,this._containerElement.appendChild(u);let h=window.getComputedStyle(u),f=h.transitionProperty,d=h.transitionDuration,p=f==="none"||d==="0s"||d==="0s, 0s"||r.width===0&&r.height===0,g=new zl(this,u,n,p);u.style.transform="scale3d(1, 1, 1)",g.state=ze.FADING_IN,n.persistent||(this._mostRecentTransientRipple=g);let b=null;return!p&&(l||o.exitDuration)&&this._ngZone.runOutsideAngular(()=>{let E=()=>{b&&(b.fallbackTimer=null),clearTimeout(w),this._finishRippleTransition(g)},v=()=>this._destroyRipple(g),w=setTimeout(v,l+100);u.addEventListener("transitionend",E),u.addEventListener("transitioncancel",v),b={onTransitionEnd:E,onTransitionCancel:v,fallbackTimer:w}}),this._activeRipples.set(g,b),(p||!l)&&this._finishRippleTransition(g),g}fadeOutRipple(i){if(i.state===ze.FADING_OUT||i.state===ze.HIDDEN)return;let e=i.element,n=P(P({},zh),i.config.animation);e.style.transitionDuration=`${n.exitDuration}ms`,e.style.opacity="0",i.state=ze.FADING_OUT,(i._animationForciblyDisabledThroughCss||!n.exitDuration)&&this._finishRippleTransition(i)}fadeOutAll(){this._getActiveRipples().forEach(i=>i.fadeOut())}fadeOutAllNonPersistent(){this._getActiveRipples().forEach(i=>{i.config.persistent||i.fadeOut()})}setupTriggerEvents(i){let e=ri(i);!this._platform.isBrowser||!e||e===this._triggerElement||(this._removeTriggerEvents(),this._triggerElement=e,Yh.forEach(n=>{t._eventManager.addHandler(this._ngZone,n,e,this)}))}handleEvent(i){i.type==="mousedown"?this._onMousedown(i):i.type==="touchstart"?this._onTouchStart(i):this._onPointerUp(),this._pointerUpEventsRegistered||(this._ngZone.runOutsideAngular(()=>{qh.forEach(e=>{this._triggerElement.addEventListener(e,this,Xh)})}),this._pointerUpEventsRegistered=!0)}_finishRippleTransition(i){i.state===ze.FADING_IN?this._startFadeOutTransition(i):i.state===ze.FADING_OUT&&this._destroyRipple(i)}_startFadeOutTransition(i){let e=i===this._mostRecentTransientRipple,{persistent:n}=i.config;i.state=ze.VISIBLE,!n&&(!e||!this._isPointerDown)&&i.fadeOut()}_destroyRipple(i){let e=this._activeRipples.get(i)??null;this._activeRipples.delete(i),this._activeRipples.size||(this._containerRect=null),i===this._mostRecentTransientRipple&&(this._mostRecentTransientRipple=null),i.state=ze.HIDDEN,e!==null&&(i.element.removeEventListener("transitionend",e.onTransitionEnd),i.element.removeEventListener("transitioncancel",e.onTransitionCancel),e.fallbackTimer!==null&&clearTimeout(e.fallbackTimer)),i.element.remove()}_onMousedown(i){let e=jl(i),n=this._lastTouchStartEvent&&Date.now()<this._lastTouchStartEvent+rb;!this._target.rippleDisabled&&!e&&!n&&(this._isPointerDown=!0,this.fadeInRipple(i.clientX,i.clientY,this._target.rippleConfig))}_onTouchStart(i){if(!this._target.rippleDisabled&&!Ul(i)){this._lastTouchStartEvent=Date.now(),this._isPointerDown=!0;let e=i.changedTouches;if(e)for(let n=0;n<e.length;n++)this.fadeInRipple(e[n].clientX,e[n].clientY,this._target.rippleConfig)}}_onPointerUp(){this._isPointerDown&&(this._isPointerDown=!1,this._getActiveRipples().forEach(i=>{let e=i.state===ze.VISIBLE||i.config.terminateOnPointerUp&&i.state===ze.FADING_IN;!i.config.persistent&&e&&i.fadeOut()}))}_getActiveRipples(){return Array.from(this._activeRipples.keys())}_removeTriggerEvents(){let i=this._triggerElement;i&&(Yh.forEach(e=>t._eventManager.removeHandler(e,i,this)),this._pointerUpEventsRegistered&&(qh.forEach(e=>i.removeEventListener(e,this,Xh)),this._pointerUpEventsRegistered=!1))}};function ob(t,i,e){let n=Math.max(Math.abs(t-e.left),Math.abs(t-e.right)),r=Math.max(Math.abs(i-e.top),Math.abs(i-e.bottom));return Math.sqrt(n*n+r*r)}var Zh=new Z("mat-ripple-global-options"),Zl=(()=>{class t{get disabled(){return this._disabled}set disabled(e){e&&this.fadeOutAllNonPersistent(),this._disabled=e,this._setupTriggerEventsIfEnabled()}get trigger(){return this._trigger||this._elementRef.nativeElement}set trigger(e){this._trigger=e,this._setupTriggerEventsIfEnabled()}constructor(e,n,r,o,s){this._elementRef=e,this._animationMode=s,this.radius=0,this._disabled=!1,this._isInitialized=!1,this._globalOptions=o||{},this._rippleRenderer=new Yl(this,n,e,r)}ngOnInit(){this._isInitialized=!0,this._setupTriggerEventsIfEnabled()}ngOnDestroy(){this._rippleRenderer._removeTriggerEvents()}fadeOutAll(){this._rippleRenderer.fadeOutAll()}fadeOutAllNonPersistent(){this._rippleRenderer.fadeOutAllNonPersistent()}get rippleConfig(){return{centered:this.centered,radius:this.radius,color:this.color,animation:P(P(P({},this._globalOptions.animation),this._animationMode==="NoopAnimations"?{enterDuration:0,exitDuration:0}:{}),this.animation),terminateOnPointerUp:this._globalOptions.terminateOnPointerUp}}get rippleDisabled(){return this.disabled||!!this._globalOptions.disabled}_setupTriggerEventsIfEnabled(){!this.disabled&&this._isInitialized&&this._rippleRenderer.setupTriggerEvents(this.trigger)}launch(e,n=0,r){return typeof e=="number"?this._rippleRenderer.fadeInRipple(e,n,P(P({},this.rippleConfig),r)):this._rippleRenderer.fadeInRipple(0,0,P(P({},this.rippleConfig),e))}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(lt),F(qt),F(Zh,8),F(Wi,8))}}static{this.\u0275dir=it({type:t,selectors:[["","mat-ripple",""],["","matRipple",""]],hostAttrs:[1,"mat-ripple"],hostVars:2,hostBindings:function(n,r){n&2&&zt("mat-ripple-unbounded",r.unbounded)},inputs:{color:[0,"matRippleColor","color"],unbounded:[0,"matRippleUnbounded","unbounded"],centered:[0,"matRippleCentered","centered"],radius:[0,"matRippleRadius","radius"],animation:[0,"matRippleAnimation","animation"],disabled:[0,"matRippleDisabled","disabled"],trigger:[0,"matRippleTrigger","trigger"]},exportAs:["matRipple"],standalone:!0})}}return t})();var Wo=class{attach(i){return this._attachedHost=i,i.attach(this)}detach(){let i=this._attachedHost;i!=null&&(this._attachedHost=null,i.detach())}get isAttached(){return this._attachedHost!=null}setAttachedHost(i){this._attachedHost=i}},Jl=class extends Wo{constructor(i,e,n,r,o){super(),this.component=i,this.viewContainerRef=e,this.injector=n,this.componentFactoryResolver=r,this.projectableNodes=o}},Er=class extends Wo{constructor(i,e,n,r){super(),this.templateRef=i,this.viewContainerRef=e,this.context=n,this.injector=r}get origin(){return this.templateRef.elementRef}attach(i,e=this.context){return this.context=e,super.attach(i)}detach(){return this.context=void 0,super.detach()}},Ql=class extends Wo{constructor(i){super(),this.element=i instanceof ft?i.nativeElement:i}},Kl=class{constructor(){this._isDisposed=!1,this.attachDomPortal=null}hasAttached(){return!!this._attachedPortal}attach(i){if(i instanceof Jl)return this._attachedPortal=i,this.attachComponentPortal(i);if(i instanceof Er)return this._attachedPortal=i,this.attachTemplatePortal(i);if(this.attachDomPortal&&i instanceof Ql)return this._attachedPortal=i,this.attachDomPortal(i)}detach(){this._attachedPortal&&(this._attachedPortal.setAttachedHost(null),this._attachedPortal=null),this._invokeDisposeFn()}dispose(){this.hasAttached()&&this.detach(),this._invokeDisposeFn(),this._isDisposed=!0}setDisposeFn(i){this._disposeFn=i}_invokeDisposeFn(){this._disposeFn&&(this._disposeFn(),this._disposeFn=null)}};var Jh=(()=>{class t extends Er{constructor(e,n){super(e,n)}static{this.\u0275fac=function(n){return new(n||t)(F(Ie),F(Ue))}}static{this.\u0275dir=it({type:t,selectors:[["","cdkPortal",""]],exportAs:["cdkPortal"],standalone:!0,features:[de]})}}return t})();var ha=(()=>{class t extends Kl{constructor(e,n,r){super(),this._componentFactoryResolver=e,this._viewContainerRef=n,this._isInitialized=!1,this.attached=new Y,this.attachDomPortal=o=>{this._document;let s=o.element;s.parentNode;let a=this._document.createComment("dom-portal");o.setAttachedHost(this),s.parentNode.insertBefore(a,s),this._getRootNode().appendChild(s),this._attachedPortal=o,super.setDisposeFn(()=>{a.parentNode&&a.parentNode.replaceChild(s,a)})},this._document=r}get portal(){return this._attachedPortal}set portal(e){this.hasAttached()&&!e&&!this._isInitialized||(this.hasAttached()&&super.detach(),e&&super.attach(e),this._attachedPortal=e||null)}get attachedRef(){return this._attachedRef}ngOnInit(){this._isInitialized=!0}ngOnDestroy(){super.dispose(),this._attachedRef=this._attachedPortal=null}attachComponentPortal(e){e.setAttachedHost(this);let n=e.viewContainerRef!=null?e.viewContainerRef:this._viewContainerRef,o=(e.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(e.component),s=n.createComponent(o,n.length,e.injector||n.injector,e.projectableNodes||void 0);return n!==this._viewContainerRef&&this._getRootNode().appendChild(s.hostView.rootNodes[0]),super.setDisposeFn(()=>s.destroy()),this._attachedPortal=e,this._attachedRef=s,this.attached.emit(s),s}attachTemplatePortal(e){e.setAttachedHost(this);let n=this._viewContainerRef.createEmbeddedView(e.templateRef,e.context,{injector:e.injector});return super.setDisposeFn(()=>this._viewContainerRef.clear()),this._attachedPortal=e,this._attachedRef=n,this.attached.emit(n),n}_getRootNode(){let e=this._viewContainerRef.element.nativeElement;return e.nodeType===e.ELEMENT_NODE?e:e.parentNode}static{this.\u0275fac=function(n){return new(n||t)(F(ws),F(Ue),F(at))}}static{this.\u0275dir=it({type:t,selectors:[["","cdkPortalOutlet",""]],inputs:{portal:[0,"cdkPortalOutlet","portal"]},outputs:{attached:"attached"},exportAs:["cdkPortalOutlet"],standalone:!0,features:[de]})}}return t})();var sb=20,ab=(()=>{class t{constructor(e,n,r){this._ngZone=e,this._platform=n,this._scrolled=new tt,this._globalSubscription=null,this._scrolledCount=0,this.scrollContainers=new Map,this._document=r}register(e){this.scrollContainers.has(e)||this.scrollContainers.set(e,e.elementScrolled().subscribe(()=>this._scrolled.next(e)))}deregister(e){let n=this.scrollContainers.get(e);n&&(n.unsubscribe(),this.scrollContainers.delete(e))}scrolled(e=sb){return this._platform.isBrowser?new Kt(n=>{this._globalSubscription||this._addGlobalListener();let r=e>0?this._scrolled.pipe(gc(e)).subscribe(n):this._scrolled.subscribe(n);return this._scrolledCount++,()=>{r.unsubscribe(),this._scrolledCount--,this._scrolledCount||this._removeGlobalListener()}}):j()}ngOnDestroy(){this._removeGlobalListener(),this.scrollContainers.forEach((e,n)=>this.deregister(n)),this._scrolled.complete()}ancestorScrolled(e,n){let r=this.getAncestorScrollContainers(e);return this.scrolled(n).pipe(kt(o=>!o||r.indexOf(o)>-1))}getAncestorScrollContainers(e){let n=[];return this.scrollContainers.forEach((r,o)=>{this._scrollableContainsElement(o,e)&&n.push(o)}),n}_getWindow(){return this._document.defaultView||window}_scrollableContainsElement(e,n){let r=ri(n),o=e.getElementRef().nativeElement;do if(r==o)return!0;while(r=r.parentElement);return!1}_addGlobalListener(){this._globalSubscription=this._ngZone.runOutsideAngular(()=>{let e=this._getWindow();return He(e.document,"scroll").subscribe(()=>this._scrolled.next())})}_removeGlobalListener(){this._globalSubscription&&(this._globalSubscription.unsubscribe(),this._globalSubscription=null)}static{this.\u0275fac=function(n){return new(n||t)(V(lt),V(qt),V(at,8))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),Qh=(()=>{class t{constructor(e,n,r,o){this.elementRef=e,this.scrollDispatcher=n,this.ngZone=r,this.dir=o,this._destroyed=new tt,this._elementScrolled=new Kt(s=>this.ngZone.runOutsideAngular(()=>He(this.elementRef.nativeElement,"scroll").pipe(Ct(this._destroyed)).subscribe(s)))}ngOnInit(){this.scrollDispatcher.register(this)}ngOnDestroy(){this.scrollDispatcher.deregister(this),this._destroyed.next(),this._destroyed.complete()}elementScrolled(){return this._elementScrolled}getElementRef(){return this.elementRef}scrollTo(e){let n=this.elementRef.nativeElement,r=this.dir&&this.dir.value=="rtl";e.left==null&&(e.left=r?e.end:e.start),e.right==null&&(e.right=r?e.start:e.end),e.bottom!=null&&(e.top=n.scrollHeight-n.clientHeight-e.bottom),r&&gr()!=ni.NORMAL?(e.left!=null&&(e.right=n.scrollWidth-n.clientWidth-e.left),gr()==ni.INVERTED?e.left=e.right:gr()==ni.NEGATED&&(e.left=e.right?-e.right:e.right)):e.right!=null&&(e.left=n.scrollWidth-n.clientWidth-e.right),this._applyScrollToOptions(e)}_applyScrollToOptions(e){let n=this.elementRef.nativeElement;Rh()?n.scrollTo(e):(e.top!=null&&(n.scrollTop=e.top),e.left!=null&&(n.scrollLeft=e.left))}measureScrollOffset(e){let n="left",r="right",o=this.elementRef.nativeElement;if(e=="top")return o.scrollTop;if(e=="bottom")return o.scrollHeight-o.clientHeight-o.scrollTop;let s=this.dir&&this.dir.value=="rtl";return e=="start"?e=s?r:n:e=="end"&&(e=s?n:r),s&&gr()==ni.INVERTED?e==n?o.scrollWidth-o.clientWidth-o.scrollLeft:o.scrollLeft:s&&gr()==ni.NEGATED?e==n?o.scrollLeft+o.scrollWidth-o.clientWidth:-o.scrollLeft:e==n?o.scrollLeft:o.scrollWidth-o.clientWidth-o.scrollLeft}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(ab),F(lt),F(vr,8))}}static{this.\u0275dir=it({type:t,selectors:[["","cdk-scrollable",""],["","cdkScrollable",""]],standalone:!0})}}return t})(),cb=20,Gl=(()=>{class t{constructor(e,n,r){this._platform=e,this._change=new tt,this._changeListener=o=>{this._change.next(o)},this._document=r,n.runOutsideAngular(()=>{if(e.isBrowser){let o=this._getWindow();o.addEventListener("resize",this._changeListener),o.addEventListener("orientationchange",this._changeListener)}this.change().subscribe(()=>this._viewportSize=null)})}ngOnDestroy(){if(this._platform.isBrowser){let e=this._getWindow();e.removeEventListener("resize",this._changeListener),e.removeEventListener("orientationchange",this._changeListener)}this._change.complete()}getViewportSize(){this._viewportSize||this._updateViewportSize();let e={width:this._viewportSize.width,height:this._viewportSize.height};return this._platform.isBrowser||(this._viewportSize=null),e}getViewportRect(){let e=this.getViewportScrollPosition(),{width:n,height:r}=this.getViewportSize();return{top:e.top,left:e.left,bottom:e.top+r,right:e.left+n,height:r,width:n}}getViewportScrollPosition(){if(!this._platform.isBrowser)return{top:0,left:0};let e=this._document,n=this._getWindow(),r=e.documentElement,o=r.getBoundingClientRect(),s=-o.top||e.body.scrollTop||n.scrollY||r.scrollTop||0,a=-o.left||e.body.scrollLeft||n.scrollX||r.scrollLeft||0;return{top:s,left:a}}change(e=cb){return e>0?this._change.pipe(gc(e)):this._change}_getWindow(){return this._document.defaultView||window}_updateViewportSize(){let e=this._getWindow();this._viewportSize=this._platform.isBrowser?{width:e.innerWidth,height:e.innerHeight}:{width:0,height:0}}static{this.\u0275fac=function(n){return new(n||t)(V(qt),V(lt),V(at,8))}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var _l=class{constructor(i){this._box=i,this._destroyed=new tt,this._resizeSubject=new tt,this._elementObservables=new Map,typeof ResizeObserver<"u"&&(this._resizeObserver=new ResizeObserver(e=>this._resizeSubject.next(e)))}observe(i){return this._elementObservables.has(i)||this._elementObservables.set(i,new Kt(e=>{let n=this._resizeSubject.subscribe(e);return this._resizeObserver?.observe(i,{box:this._box}),()=>{this._resizeObserver?.unobserve(i),n.unsubscribe(),this._elementObservables.delete(i)}}).pipe(kt(e=>e.some(n=>n.target===i)),Ec({bufferSize:1,refCount:!0}),Ct(this._destroyed))),this._elementObservables.get(i)}destroy(){this._destroyed.next(),this._destroyed.complete(),this._resizeSubject.complete(),this._elementObservables.clear()}},Kh=(()=>{class t{constructor(){this._observers=new Map,this._ngZone=R(lt),typeof ResizeObserver<"u"}ngOnDestroy(){for(let[,e]of this._observers)e.destroy();this._observers.clear(),typeof ResizeObserver<"u"}observe(e,n){let r=n?.box||"content-box";return this._observers.has(r)||this._observers.set(r,new _l(r)),this._observers.get(r).observe(e)}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var iu=["*"];function hb(t,i){t&1&&Xi(0)}var fb=["tabListContainer"],mb=["tabList"],pb=["tabListInner"],gb=["nextPaginator"],bb=["previousPaginator"],vb=t=>({animationDuration:t}),Eb=(t,i)=>({value:t,params:i});function Sb(t,i){}var Cb=["tabBodyWrapper"],wb=["tabHeader"];function Tb(t,i){}function Db(t,i){if(t&1&&Et(0,Tb,0,0,"ng-template",12),t&2){let e=wt().$implicit;Q("cdkPortalOutlet",e.templateLabel)}}function xb(t,i){if(t&1&&I(0),t&2){let e=wt().$implicit;re(e.textLabel)}}function Ab(t,i){if(t&1){let e=Gt();N(0,"div",7,2),_("click",function(){let r=dt(e),o=r.$implicit,s=r.$index,a=wt(),c=Yi(1);return ht(a._handleClick(o,c,s))})("cdkFocusChange",function(r){let o=dt(e).$index,s=wt();return ht(s._tabFocusChanged(r,o))}),Rt(2,"span",8)(3,"div",9),N(4,"span",10)(5,"span",11),Et(6,Db,1,1,null,12)(7,xb,1,1),A()()()}if(t&2){let e=i.$implicit,n=i.$index,r=Yi(1),o=wt();er(e.labelClass),zt("mdc-tab--active",o.selectedIndex===n),Q("id",o._getTabLabelId(n))("disabled",e.disabled)("fitInkBarToContent",o.fitInkBarToContent),Ee("tabIndex",o._getTabIndex(n))("aria-posinset",n+1)("aria-setsize",o._tabs.length)("aria-controls",o._getTabContentId(n))("aria-selected",o.selectedIndex===n)("aria-label",e.ariaLabel||null)("aria-labelledby",!e.ariaLabel&&e.ariaLabelledby?e.ariaLabelledby:null),W(3),Q("matRippleTrigger",r)("matRippleDisabled",e.disabled||o.disableRipple),W(3),Nn(e.templateLabel?6:7)}}function Nb(t,i){t&1&&Xi(0)}function Mb(t,i){if(t&1){let e=Gt();N(0,"mat-tab-body",13),_("_onCentered",function(){dt(e);let r=wt();return ht(r._removeTabBodyWrapperHeight())})("_onCentering",function(r){dt(e);let o=wt();return ht(o._setTabBodyWrapperHeight(r))}),A()}if(t&2){let e=i.$implicit,n=i.$index,r=wt();er(e.bodyClass),zt("mat-mdc-tab-body-active",r.selectedIndex===n),Q("id",r._getTabContentId(n))("content",e.content)("position",e.position)("origin",e.origin)("animationDuration",r.animationDuration)("preserveContent",r.preserveContent),Ee("tabindex",r.contentTabIndex!=null&&r.selectedIndex===n?r.contentTabIndex:null)("aria-labelledby",r._getTabLabelId(n))("aria-hidden",r.selectedIndex!==n)}}var Rb=new Z("MatTabContent"),yb=(()=>{class t{constructor(e){this.template=e}static{this.\u0275fac=function(n){return new(n||t)(F(Ie))}}static{this.\u0275dir=it({type:t,selectors:[["","matTabContent",""]],standalone:!0,features:[Pe([{provide:Rb,useExisting:t}])]})}}return t})(),Ob=new Z("MatTabLabel"),$h=new Z("MAT_TAB"),kb=(()=>{class t extends Jh{constructor(e,n,r){super(e,n),this._closestTab=r}static{this.\u0275fac=function(n){return new(n||t)(F(Ie),F(Ue),F($h,8))}}static{this.\u0275dir=it({type:t,selectors:[["","mat-tab-label",""],["","matTabLabel",""]],standalone:!0,features:[Pe([{provide:Ob,useExisting:t}]),de]})}}return t})(),tf=new Z("MAT_TAB_GROUP"),nu=(()=>{class t{get templateLabel(){return this._templateLabel}set templateLabel(e){this._setTemplateLabelInput(e)}get content(){return this._contentPortal}constructor(e,n){this._viewContainerRef=e,this._closestTabGroup=n,this.disabled=!1,this._explicitContent=void 0,this.textLabel="",this._contentPortal=null,this._stateChanges=new tt,this.position=null,this.origin=null,this.isActive=!1}ngOnChanges(e){(e.hasOwnProperty("textLabel")||e.hasOwnProperty("disabled"))&&this._stateChanges.next()}ngOnDestroy(){this._stateChanges.complete()}ngOnInit(){this._contentPortal=new Er(this._explicitContent||this._implicitContent,this._viewContainerRef)}_setTemplateLabelInput(e){e&&e._closestTab===this&&(this._templateLabel=e)}static{this.\u0275fac=function(n){return new(n||t)(F(Ue),F(tf,8))}}static{this.\u0275cmp=ot({type:t,selectors:[["mat-tab"]],contentQueries:function(n,r,o){if(n&1&&(Ei(o,kb,5),Ei(o,yb,7,Ie)),n&2){let s;Pt(s=Bt())&&(r.templateLabel=s.first),Pt(s=Bt())&&(r._explicitContent=s.first)}},viewQuery:function(n,r){if(n&1&&Ne(Ie,7),n&2){let o;Pt(o=Bt())&&(r._implicitContent=o.first)}},hostAttrs:["hidden",""],inputs:{disabled:[2,"disabled","disabled",Ft],textLabel:[0,"label","textLabel"],ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],labelClass:"labelClass",bodyClass:"bodyClass"},exportAs:["matTab"],standalone:!0,features:[Pe([{provide:$h,useExisting:t}]),Ae,je,st],ngContentSelectors:iu,decls:1,vars:0,template:function(n,r){n&1&&(zi(),Et(0,hb,1,0,"ng-template"))},encapsulation:2})}}return t})(),$l="mdc-tab-indicator--active",Gh="mdc-tab-indicator--no-transition",tu=class{constructor(i){this._items=i}hide(){this._items.forEach(i=>i.deactivateInkBar())}alignToElement(i){let e=this._items.find(r=>r.elementRef.nativeElement===i),n=this._currentItem;if(e!==n&&(n?.deactivateInkBar(),e)){let r=n?.elementRef.nativeElement.getBoundingClientRect?.();e.activateInkBar(r),this._currentItem=e}}},Ib=(()=>{class t{constructor(){this._elementRef=R(ft),this._fitToContent=!1}get fitInkBarToContent(){return this._fitToContent}set fitInkBarToContent(e){this._fitToContent!==e&&(this._fitToContent=e,this._inkBarElement&&this._appendInkBarElement())}activateInkBar(e){let n=this._elementRef.nativeElement;if(!e||!n.getBoundingClientRect||!this._inkBarContentElement){n.classList.add($l);return}let r=n.getBoundingClientRect(),o=e.width/r.width,s=e.left-r.left;n.classList.add(Gh),this._inkBarContentElement.style.setProperty("transform",`translateX(${s}px) scaleX(${o})`),n.getBoundingClientRect(),n.classList.remove(Gh),n.classList.add($l),this._inkBarContentElement.style.setProperty("transform","")}deactivateInkBar(){this._elementRef.nativeElement.classList.remove($l)}ngOnInit(){this._createInkBarElement()}ngOnDestroy(){this._inkBarElement?.remove(),this._inkBarElement=this._inkBarContentElement=null}_createInkBarElement(){let e=this._elementRef.nativeElement.ownerDocument||document,n=this._inkBarElement=e.createElement("span"),r=this._inkBarContentElement=e.createElement("span");n.className="mdc-tab-indicator",r.className="mdc-tab-indicator__content mdc-tab-indicator__content--underline",n.appendChild(this._inkBarContentElement),this._appendInkBarElement()}_appendInkBarElement(){this._inkBarElement;let e=this._fitToContent?this._elementRef.nativeElement.querySelector(".mdc-tab__content"):this._elementRef.nativeElement;e.appendChild(this._inkBarElement)}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275dir=it({type:t,inputs:{fitInkBarToContent:[2,"fitInkBarToContent","fitInkBarToContent",Ft]},features:[Ae]})}}return t})();var ef=(()=>{class t extends Ib{constructor(e){super(),this.elementRef=e,this.disabled=!1}focus(){this.elementRef.nativeElement.focus()}getOffsetLeft(){return this.elementRef.nativeElement.offsetLeft}getOffsetWidth(){return this.elementRef.nativeElement.offsetWidth}static{this.\u0275fac=function(n){return new(n||t)(F(ft))}}static{this.\u0275dir=it({type:t,selectors:[["","matTabLabelWrapper",""]],hostVars:3,hostBindings:function(n,r){n&2&&(Ee("aria-disabled",!!r.disabled),zt("mat-mdc-tab-disabled",r.disabled))},inputs:{disabled:[2,"disabled","disabled",Ft]},standalone:!0,features:[Ae,de]})}}return t})(),_h=$i({passive:!0}),Pb=650,Bb=100,Fb=(()=>{class t{get selectedIndex(){return this._selectedIndex}set selectedIndex(e){let n=isNaN(e)?0:e;this._selectedIndex!=n&&(this._selectedIndexChanged=!0,this._selectedIndex=n,this._keyManager&&this._keyManager.updateActiveItem(n))}constructor(e,n,r,o,s,a,c){this._elementRef=e,this._changeDetectorRef=n,this._viewportRuler=r,this._dir=o,this._ngZone=s,this._platform=a,this._animationMode=c,this._scrollDistance=0,this._selectedIndexChanged=!1,this._destroyed=new tt,this._showPaginationControls=!1,this._disableScrollAfter=!0,this._disableScrollBefore=!0,this._stopScrolling=new tt,this.disablePagination=!1,this._selectedIndex=0,this.selectFocusedIndex=new Y,this.indexFocused=new Y,this._sharedResizeObserver=R(Kh),this._injector=R(ei),s.runOutsideAngular(()=>{He(e.nativeElement,"mouseleave").pipe(Ct(this._destroyed)).subscribe(()=>{this._stopInterval()})})}ngAfterViewInit(){He(this._previousPaginator.nativeElement,"touchstart",_h).pipe(Ct(this._destroyed)).subscribe(()=>{this._handlePaginatorPress("before")}),He(this._nextPaginator.nativeElement,"touchstart",_h).pipe(Ct(this._destroyed)).subscribe(()=>{this._handlePaginatorPress("after")})}ngAfterContentInit(){let e=this._dir?this._dir.change:j("ltr"),n=this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(Vi(32),Ct(this._destroyed)),r=this._viewportRuler.change(150).pipe(Ct(this._destroyed)),o=()=>{this.updatePagination(),this._alignInkBarToSelectedTab()};this._keyManager=new da(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap().skipPredicate(()=>!1),this._keyManager.updateActiveItem(this._selectedIndex),tr(o,{injector:this._injector}),$r(e,r,n,this._items.changes,this._itemsResized()).pipe(Ct(this._destroyed)).subscribe(()=>{this._ngZone.run(()=>{Promise.resolve().then(()=>{this._scrollDistance=Math.max(0,Math.min(this._getMaxScrollDistance(),this._scrollDistance)),o()})}),this._keyManager.withHorizontalOrientation(this._getLayoutDirection())}),this._keyManager.change.subscribe(s=>{this.indexFocused.emit(s),this._setTabFocus(s)})}_itemsResized(){return typeof ResizeObserver!="function"?Ve:this._items.changes.pipe($e(this._items),ue(e=>new Kt(n=>this._ngZone.runOutsideAngular(()=>{let r=new ResizeObserver(o=>n.next(o));return e.forEach(o=>r.observe(o.elementRef.nativeElement)),()=>{r.disconnect()}}))),ji(1),kt(e=>e.some(n=>n.contentRect.width>0&&n.contentRect.height>0)))}ngAfterContentChecked(){this._tabLabelCount!=this._items.length&&(this.updatePagination(),this._tabLabelCount=this._items.length,this._changeDetectorRef.markForCheck()),this._selectedIndexChanged&&(this._scrollToLabel(this._selectedIndex),this._checkScrollingControls(),this._alignInkBarToSelectedTab(),this._selectedIndexChanged=!1,this._changeDetectorRef.markForCheck()),this._scrollDistanceChanged&&(this._updateTabScrollPosition(),this._scrollDistanceChanged=!1,this._changeDetectorRef.markForCheck())}ngOnDestroy(){this._keyManager?.destroy(),this._destroyed.next(),this._destroyed.complete(),this._stopScrolling.complete()}_handleKeydown(e){if(!aa(e))switch(e.keyCode){case 13:case 32:if(this.focusIndex!==this.selectedIndex){let n=this._items.get(this.focusIndex);n&&!n.disabled&&(this.selectFocusedIndex.emit(this.focusIndex),this._itemSelected(e))}break;default:this._keyManager.onKeydown(e)}}_onContentChanges(){let e=this._elementRef.nativeElement.textContent;e!==this._currentTextContent&&(this._currentTextContent=e||"",this._ngZone.run(()=>{this.updatePagination(),this._alignInkBarToSelectedTab(),this._changeDetectorRef.markForCheck()}))}updatePagination(){this._checkPaginationEnabled(),this._checkScrollingControls(),this._updateTabScrollPosition()}get focusIndex(){return this._keyManager?this._keyManager.activeItemIndex:0}set focusIndex(e){!this._isValidIndex(e)||this.focusIndex===e||!this._keyManager||this._keyManager.setActiveItem(e)}_isValidIndex(e){return this._items?!!this._items.toArray()[e]:!0}_setTabFocus(e){if(this._showPaginationControls&&this._scrollToLabel(e),this._items&&this._items.length){this._items.toArray()[e].focus();let n=this._tabListContainer.nativeElement;this._getLayoutDirection()=="ltr"?n.scrollLeft=0:n.scrollLeft=n.scrollWidth-n.offsetWidth}}_getLayoutDirection(){return this._dir&&this._dir.value==="rtl"?"rtl":"ltr"}_updateTabScrollPosition(){if(this.disablePagination)return;let e=this.scrollDistance,n=this._getLayoutDirection()==="ltr"?-e:e;this._tabList.nativeElement.style.transform=`translateX(${Math.round(n)}px)`,(this._platform.TRIDENT||this._platform.EDGE)&&(this._tabListContainer.nativeElement.scrollLeft=0)}get scrollDistance(){return this._scrollDistance}set scrollDistance(e){this._scrollTo(e)}_scrollHeader(e){let n=this._tabListContainer.nativeElement.offsetWidth,r=(e=="before"?-1:1)*n/3;return this._scrollTo(this._scrollDistance+r)}_handlePaginatorClick(e){this._stopInterval(),this._scrollHeader(e)}_scrollToLabel(e){if(this.disablePagination)return;let n=this._items?this._items.toArray()[e]:null;if(!n)return;let r=this._tabListContainer.nativeElement.offsetWidth,{offsetLeft:o,offsetWidth:s}=n.elementRef.nativeElement,a,c;this._getLayoutDirection()=="ltr"?(a=o,c=a+s):(c=this._tabListInner.nativeElement.offsetWidth-o,a=c-s);let l=this.scrollDistance,u=this.scrollDistance+r;a<l?this.scrollDistance-=l-a:c>u&&(this.scrollDistance+=Math.min(c-u,a-l))}_checkPaginationEnabled(){if(this.disablePagination)this._showPaginationControls=!1;else{let e=this._tabListInner.nativeElement.scrollWidth,n=this._elementRef.nativeElement.offsetWidth,r=e-n>=5;r||(this.scrollDistance=0),r!==this._showPaginationControls&&(this._showPaginationControls=r,this._changeDetectorRef.markForCheck())}}_checkScrollingControls(){this.disablePagination?this._disableScrollAfter=this._disableScrollBefore=!0:(this._disableScrollBefore=this.scrollDistance==0,this._disableScrollAfter=this.scrollDistance==this._getMaxScrollDistance(),this._changeDetectorRef.markForCheck())}_getMaxScrollDistance(){let e=this._tabListInner.nativeElement.scrollWidth,n=this._tabListContainer.nativeElement.offsetWidth;return e-n||0}_alignInkBarToSelectedTab(){let e=this._items&&this._items.length?this._items.toArray()[this.selectedIndex]:null,n=e?e.elementRef.nativeElement:null;n?this._inkBar.alignToElement(n):this._inkBar.hide()}_stopInterval(){this._stopScrolling.next()}_handlePaginatorPress(e,n){n&&n.button!=null&&n.button!==0||(this._stopInterval(),vs(Pb,Bb).pipe(Ct($r(this._stopScrolling,this._destroyed))).subscribe(()=>{let{maxScrollDistance:r,distance:o}=this._scrollHeader(e);(o===0||o>=r)&&this._stopInterval()}))}_scrollTo(e){if(this.disablePagination)return{maxScrollDistance:0,distance:0};let n=this._getMaxScrollDistance();return this._scrollDistance=Math.max(0,Math.min(n,e)),this._scrollDistanceChanged=!0,this._checkScrollingControls(),{maxScrollDistance:n,distance:this._scrollDistance}}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(oe),F(Gl),F(vr,8),F(lt),F(qt),F(Wi,8))}}static{this.\u0275dir=it({type:t,inputs:{disablePagination:[2,"disablePagination","disablePagination",Ft],selectedIndex:[2,"selectedIndex","selectedIndex",Ns]},outputs:{selectFocusedIndex:"selectFocusedIndex",indexFocused:"indexFocused"},features:[Ae]})}}return t})(),Lb=(()=>{class t extends Fb{constructor(e,n,r,o,s,a,c){super(e,n,r,o,s,a,c),this.disableRipple=!1}ngAfterContentInit(){this._inkBar=new tu(this._items),super.ngAfterContentInit()}_itemSelected(e){e.preventDefault()}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(oe),F(Gl),F(vr,8),F(lt),F(qt),F(Wi,8))}}static{this.\u0275cmp=ot({type:t,selectors:[["mat-tab-header"]],contentQueries:function(n,r,o){if(n&1&&Ei(o,ef,4),n&2){let s;Pt(s=Bt())&&(r._items=s)}},viewQuery:function(n,r){if(n&1&&(Ne(fb,7),Ne(mb,7),Ne(pb,7),Ne(gb,5),Ne(bb,5)),n&2){let o;Pt(o=Bt())&&(r._tabListContainer=o.first),Pt(o=Bt())&&(r._tabList=o.first),Pt(o=Bt())&&(r._tabListInner=o.first),Pt(o=Bt())&&(r._nextPaginator=o.first),Pt(o=Bt())&&(r._previousPaginator=o.first)}},hostAttrs:[1,"mat-mdc-tab-header"],hostVars:4,hostBindings:function(n,r){n&2&&zt("mat-mdc-tab-header-pagination-controls-enabled",r._showPaginationControls)("mat-mdc-tab-header-rtl",r._getLayoutDirection()=="rtl")},inputs:{ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],disableRipple:[2,"disableRipple","disableRipple",Ft]},standalone:!0,features:[Ae,de,st],ngContentSelectors:iu,decls:13,vars:10,consts:[["previousPaginator",""],["tabListContainer",""],["tabList",""],["tabListInner",""],["nextPaginator",""],["mat-ripple","",1,"mat-mdc-tab-header-pagination","mat-mdc-tab-header-pagination-before",3,"click","mousedown","touchend","matRippleDisabled"],[1,"mat-mdc-tab-header-pagination-chevron"],[1,"mat-mdc-tab-label-container",3,"keydown"],["role","tablist",1,"mat-mdc-tab-list",3,"cdkObserveContent"],[1,"mat-mdc-tab-labels"],["mat-ripple","",1,"mat-mdc-tab-header-pagination","mat-mdc-tab-header-pagination-after",3,"mousedown","click","touchend","matRippleDisabled"]],template:function(n,r){if(n&1){let o=Gt();zi(),N(0,"div",5,0),_("click",function(){return dt(o),ht(r._handlePaginatorClick("before"))})("mousedown",function(a){return dt(o),ht(r._handlePaginatorPress("before",a))})("touchend",function(){return dt(o),ht(r._stopInterval())}),Rt(2,"div",6),A(),N(3,"div",7,1),_("keydown",function(a){return dt(o),ht(r._handleKeydown(a))}),N(5,"div",8,2),_("cdkObserveContent",function(){return dt(o),ht(r._onContentChanges())}),N(7,"div",9,3),Xi(9),A()()(),N(10,"div",10,4),_("mousedown",function(a){return dt(o),ht(r._handlePaginatorPress("after",a))})("click",function(){return dt(o),ht(r._handlePaginatorClick("after"))})("touchend",function(){return dt(o),ht(r._stopInterval())}),Rt(12,"div",6),A()}n&2&&(zt("mat-mdc-tab-header-pagination-disabled",r._disableScrollBefore),Q("matRippleDisabled",r._disableScrollBefore||r.disableRipple),W(3),zt("_mat-animation-noopable",r._animationMode==="NoopAnimations"),W(2),Ee("aria-label",r.ariaLabel||null)("aria-labelledby",r.ariaLabelledby||null),W(5),zt("mat-mdc-tab-header-pagination-disabled",r._disableScrollAfter),Q("matRippleDisabled",r._disableScrollAfter||r.disableRipple))},dependencies:[Zl,kh],styles:[".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}"],encapsulation:2})}}return t})(),Vb=new Z("MAT_TABS_CONFIG"),Hb={translateTab:Ad("translateTab",[Ps("center, void, left-origin-center, right-origin-center",sr({transform:"none",visibility:"visible"})),Ps("left",sr({transform:"translate3d(-100%, 0, 0)",minHeight:"1px",visibility:"hidden"})),Ps("right",sr({transform:"translate3d(100%, 0, 0)",minHeight:"1px",visibility:"hidden"})),Bs("* => left, * => right, left => center, right => center",Is("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")),Bs("void => left-origin-center",[sr({transform:"translate3d(-100%, 0, 0)",visibility:"hidden"}),Is("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")]),Bs("void => right-origin-center",[sr({transform:"translate3d(100%, 0, 0)",visibility:"hidden"}),Is("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")])])},jb=(()=>{class t extends ha{constructor(e,n,r,o){super(e,n,o),this._host=r,this._centeringSub=_e.EMPTY,this._leavingSub=_e.EMPTY}ngOnInit(){super.ngOnInit(),this._centeringSub=this._host._beforeCentering.pipe($e(this._host._isCenterPosition(this._host._position))).subscribe(e=>{this._host._content&&e&&!this.hasAttached()&&this.attach(this._host._content)}),this._leavingSub=this._host._afterLeavingCenter.subscribe(()=>{this._host.preserveContent||this.detach()})}ngOnDestroy(){super.ngOnDestroy(),this._centeringSub.unsubscribe(),this._leavingSub.unsubscribe()}static{this.\u0275fac=function(n){return new(n||t)(F(ws),F(Ue),F($n(()=>nf)),F(at))}}static{this.\u0275dir=it({type:t,selectors:[["","matTabBodyHost",""]],standalone:!0,features:[de]})}}return t})(),nf=(()=>{class t{set position(e){this._positionIndex=e,this._computePositionAnimationState()}constructor(e,n,r){this._elementRef=e,this._dir=n,this._dirChangeSubscription=_e.EMPTY,this._translateTabComplete=new tt,this._onCentering=new Y,this._beforeCentering=new Y,this._afterLeavingCenter=new Y,this._onCentered=new Y(!0),this.animationDuration="500ms",this.preserveContent=!1,n&&(this._dirChangeSubscription=n.change.subscribe(o=>{this._computePositionAnimationState(o),r.markForCheck()})),this._translateTabComplete.subscribe(o=>{this._isCenterPosition(o.toState)&&this._isCenterPosition(this._position)&&this._onCentered.emit(),this._isCenterPosition(o.fromState)&&!this._isCenterPosition(this._position)&&this._afterLeavingCenter.emit()})}ngOnInit(){this._position=="center"&&this.origin!=null&&(this._position=this._computePositionFromOrigin(this.origin))}ngOnDestroy(){this._dirChangeSubscription.unsubscribe(),this._translateTabComplete.complete()}_onTranslateTabStarted(e){let n=this._isCenterPosition(e.toState);this._beforeCentering.emit(n),n&&this._onCentering.emit(this._elementRef.nativeElement.clientHeight)}_getLayoutDirection(){return this._dir&&this._dir.value==="rtl"?"rtl":"ltr"}_isCenterPosition(e){return e=="center"||e=="left-origin-center"||e=="right-origin-center"}_computePositionAnimationState(e=this._getLayoutDirection()){this._positionIndex<0?this._position=e=="ltr"?"left":"right":this._positionIndex>0?this._position=e=="ltr"?"right":"left":this._position="center"}_computePositionFromOrigin(e){let n=this._getLayoutDirection();return n=="ltr"&&e<=0||n=="rtl"&&e>0?"left-origin-center":"right-origin-center"}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(vr,8),F(oe))}}static{this.\u0275cmp=ot({type:t,selectors:[["mat-tab-body"]],viewQuery:function(n,r){if(n&1&&Ne(ha,5),n&2){let o;Pt(o=Bt())&&(r._portalHost=o.first)}},hostAttrs:[1,"mat-mdc-tab-body"],inputs:{_content:[0,"content","_content"],origin:"origin",animationDuration:"animationDuration",preserveContent:"preserveContent",position:"position"},outputs:{_onCentering:"_onCentering",_beforeCentering:"_beforeCentering",_afterLeavingCenter:"_afterLeavingCenter",_onCentered:"_onCentered"},standalone:!0,features:[st],decls:3,vars:6,consts:[["content",""],["cdkScrollable","",1,"mat-mdc-tab-body-content"],["matTabBodyHost",""]],template:function(n,r){if(n&1){let o=Gt();N(0,"div",1,0),_("@translateTab.start",function(a){return dt(o),ht(r._onTranslateTabStarted(a))})("@translateTab.done",function(a){return dt(o),ht(r._translateTabComplete.next(a))}),Et(2,Sb,0,0,"ng-template",2),A()}n&2&&Q("@translateTab",Ac(3,Eb,r._position,nr(1,vb,r.animationDuration)))},dependencies:[jb,Qh],styles:['.mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*="visibility: hidden"]{display:none}'],encapsulation:2,data:{animation:[Hb.translateTab]}})}}return t})(),Ub=0,Wb=!0,rf=(()=>{class t{get fitInkBarToContent(){return this._fitInkBarToContent}set fitInkBarToContent(e){this._fitInkBarToContent=e,this._changeDetectorRef.markForCheck()}get selectedIndex(){return this._selectedIndex}set selectedIndex(e){this._indexToSelect=isNaN(e)?null:e}get animationDuration(){return this._animationDuration}set animationDuration(e){let n=e+"";this._animationDuration=/^\d+$/.test(n)?e+"ms":n}get contentTabIndex(){return this._contentTabIndex}set contentTabIndex(e){this._contentTabIndex=isNaN(e)?null:e}get backgroundColor(){return this._backgroundColor}set backgroundColor(e){if(!Wb)throw new Error("mat-tab-group background color must be set through the Sass theming API");let n=this._elementRef.nativeElement.classList;n.remove("mat-tabs-with-background",`mat-background-${this.backgroundColor}`),e&&n.add("mat-tabs-with-background",`mat-background-${e}`),this._backgroundColor=e}constructor(e,n,r,o){this._elementRef=e,this._changeDetectorRef=n,this._animationMode=o,this._tabs=new io,this._indexToSelect=0,this._lastFocusedTabIndex=null,this._tabBodyWrapperHeight=0,this._tabsSubscription=_e.EMPTY,this._tabLabelSubscription=_e.EMPTY,this._fitInkBarToContent=!1,this.stretchTabs=!0,this.dynamicHeight=!1,this._selectedIndex=null,this.headerPosition="above",this.disablePagination=!1,this.disableRipple=!1,this.preserveContent=!1,this.selectedIndexChange=new Y,this.focusChange=new Y,this.animationDone=new Y,this.selectedTabChange=new Y(!0),this._isServer=!R(qt).isBrowser,this._groupId=Ub++,this.animationDuration=r&&r.animationDuration?r.animationDuration:"500ms",this.disablePagination=r&&r.disablePagination!=null?r.disablePagination:!1,this.dynamicHeight=r&&r.dynamicHeight!=null?r.dynamicHeight:!1,r?.contentTabIndex!=null&&(this.contentTabIndex=r.contentTabIndex),this.preserveContent=!!r?.preserveContent,this.fitInkBarToContent=r&&r.fitInkBarToContent!=null?r.fitInkBarToContent:!1,this.stretchTabs=r&&r.stretchTabs!=null?r.stretchTabs:!0}ngAfterContentChecked(){let e=this._indexToSelect=this._clampTabIndex(this._indexToSelect);if(this._selectedIndex!=e){let n=this._selectedIndex==null;if(!n){this.selectedTabChange.emit(this._createChangeEvent(e));let r=this._tabBodyWrapper.nativeElement;r.style.minHeight=r.clientHeight+"px"}Promise.resolve().then(()=>{this._tabs.forEach((r,o)=>r.isActive=o===e),n||(this.selectedIndexChange.emit(e),this._tabBodyWrapper.nativeElement.style.minHeight="")})}this._tabs.forEach((n,r)=>{n.position=r-e,this._selectedIndex!=null&&n.position==0&&!n.origin&&(n.origin=e-this._selectedIndex)}),this._selectedIndex!==e&&(this._selectedIndex=e,this._lastFocusedTabIndex=null,this._changeDetectorRef.markForCheck())}ngAfterContentInit(){this._subscribeToAllTabChanges(),this._subscribeToTabLabels(),this._tabsSubscription=this._tabs.changes.subscribe(()=>{let e=this._clampTabIndex(this._indexToSelect);if(e===this._selectedIndex){let n=this._tabs.toArray(),r;for(let o=0;o<n.length;o++)if(n[o].isActive){this._indexToSelect=this._selectedIndex=o,this._lastFocusedTabIndex=null,r=n[o];break}!r&&n[e]&&Promise.resolve().then(()=>{n[e].isActive=!0,this.selectedTabChange.emit(this._createChangeEvent(e))})}this._changeDetectorRef.markForCheck()})}_subscribeToAllTabChanges(){this._allTabs.changes.pipe($e(this._allTabs)).subscribe(e=>{this._tabs.reset(e.filter(n=>n._closestTabGroup===this||!n._closestTabGroup)),this._tabs.notifyOnChanges()})}ngOnDestroy(){this._tabs.destroy(),this._tabsSubscription.unsubscribe(),this._tabLabelSubscription.unsubscribe()}realignInkBar(){this._tabHeader&&this._tabHeader._alignInkBarToSelectedTab()}updatePagination(){this._tabHeader&&this._tabHeader.updatePagination()}focusTab(e){let n=this._tabHeader;n&&(n.focusIndex=e)}_focusChanged(e){this._lastFocusedTabIndex=e,this.focusChange.emit(this._createChangeEvent(e))}_createChangeEvent(e){let n=new eu;return n.index=e,this._tabs&&this._tabs.length&&(n.tab=this._tabs.toArray()[e]),n}_subscribeToTabLabels(){this._tabLabelSubscription&&this._tabLabelSubscription.unsubscribe(),this._tabLabelSubscription=$r(...this._tabs.map(e=>e._stateChanges)).subscribe(()=>this._changeDetectorRef.markForCheck())}_clampTabIndex(e){return Math.min(this._tabs.length-1,Math.max(e||0,0))}_getTabLabelId(e){return`mat-tab-label-${this._groupId}-${e}`}_getTabContentId(e){return`mat-tab-content-${this._groupId}-${e}`}_setTabBodyWrapperHeight(e){if(!this.dynamicHeight||!this._tabBodyWrapperHeight)return;let n=this._tabBodyWrapper.nativeElement;n.style.height=this._tabBodyWrapperHeight+"px",this._tabBodyWrapper.nativeElement.offsetHeight&&(n.style.height=e+"px")}_removeTabBodyWrapperHeight(){let e=this._tabBodyWrapper.nativeElement;this._tabBodyWrapperHeight=e.clientHeight,e.style.height="",this.animationDone.emit()}_handleClick(e,n,r){n.focusIndex=r,e.disabled||(this.selectedIndex=r)}_getTabIndex(e){let n=this._lastFocusedTabIndex??this.selectedIndex;return e===n?0:-1}_tabFocusChanged(e,n){e&&e!=="mouse"&&e!=="touch"&&(this._tabHeader.focusIndex=n)}static{this.\u0275fac=function(n){return new(n||t)(F(ft),F(oe),F(Vb,8),F(Wi,8))}}static{this.\u0275cmp=ot({type:t,selectors:[["mat-tab-group"]],contentQueries:function(n,r,o){if(n&1&&Ei(o,nu,5),n&2){let s;Pt(s=Bt())&&(r._allTabs=s)}},viewQuery:function(n,r){if(n&1&&(Ne(Cb,5),Ne(wb,5)),n&2){let o;Pt(o=Bt())&&(r._tabBodyWrapper=o.first),Pt(o=Bt())&&(r._tabHeader=o.first)}},hostAttrs:[1,"mat-mdc-tab-group"],hostVars:10,hostBindings:function(n,r){n&2&&(er("mat-"+(r.color||"primary")),Ds("--mat-tab-animation-duration",r.animationDuration),zt("mat-mdc-tab-group-dynamic-height",r.dynamicHeight)("mat-mdc-tab-group-inverted-header",r.headerPosition==="below")("mat-mdc-tab-group-stretch-tabs",r.stretchTabs))},inputs:{color:"color",fitInkBarToContent:[2,"fitInkBarToContent","fitInkBarToContent",Ft],stretchTabs:[2,"mat-stretch-tabs","stretchTabs",Ft],dynamicHeight:[2,"dynamicHeight","dynamicHeight",Ft],selectedIndex:[2,"selectedIndex","selectedIndex",Ns],headerPosition:"headerPosition",animationDuration:"animationDuration",contentTabIndex:[2,"contentTabIndex","contentTabIndex",Ns],disablePagination:[2,"disablePagination","disablePagination",Ft],disableRipple:[2,"disableRipple","disableRipple",Ft],preserveContent:[2,"preserveContent","preserveContent",Ft],backgroundColor:"backgroundColor",ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"]},outputs:{selectedIndexChange:"selectedIndexChange",focusChange:"focusChange",animationDone:"animationDone",selectedTabChange:"selectedTabChange"},exportAs:["matTabGroup"],standalone:!0,features:[Pe([{provide:tf,useExisting:t}]),Ae,st],ngContentSelectors:iu,decls:9,vars:8,consts:[["tabHeader",""],["tabBodyWrapper",""],["tabNode",""],[3,"indexFocused","selectFocusedIndex","selectedIndex","disableRipple","disablePagination","aria-label","aria-labelledby"],["role","tab","matTabLabelWrapper","","cdkMonitorElementFocus","",1,"mdc-tab","mat-mdc-tab","mat-mdc-focus-indicator",3,"id","mdc-tab--active","class","disabled","fitInkBarToContent"],[1,"mat-mdc-tab-body-wrapper"],["role","tabpanel",3,"id","mat-mdc-tab-body-active","class","content","position","origin","animationDuration","preserveContent"],["role","tab","matTabLabelWrapper","","cdkMonitorElementFocus","",1,"mdc-tab","mat-mdc-tab","mat-mdc-focus-indicator",3,"click","cdkFocusChange","id","disabled","fitInkBarToContent"],[1,"mdc-tab__ripple"],["mat-ripple","",1,"mat-mdc-tab-ripple",3,"matRippleTrigger","matRippleDisabled"],[1,"mdc-tab__content"],[1,"mdc-tab__text-label"],[3,"cdkPortalOutlet"],["role","tabpanel",3,"_onCentered","_onCentering","id","content","position","origin","animationDuration","preserveContent"]],template:function(n,r){if(n&1){let o=Gt();zi(),N(0,"mat-tab-header",3,0),_("indexFocused",function(a){return dt(o),ht(r._focusChanged(a))})("selectFocusedIndex",function(a){return dt(o),ht(r.selectedIndex=a)}),ao(2,Ab,8,17,"div",4,so),A(),Et(4,Nb,1,0),N(5,"div",5,1),ao(7,Mb,1,13,"mat-tab-body",6,so),A()}n&2&&(Q("selectedIndex",r.selectedIndex||0)("disableRipple",r.disableRipple)("disablePagination",r.disablePagination)("aria-label",r.ariaLabel)("aria-labelledby",r.ariaLabelledby),W(2),co(r._tabs),W(2),Nn(r._isServer?4:-1),W(),zt("_mat-animation-noopable",r._animationMode==="NoopAnimations"),W(2),co(r._tabs))},dependencies:[Lb,ef,Hh,Zl,ha,nf],styles:['.mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-app-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-app-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-app-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-app-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-app-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-app-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-app-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}'],encapsulation:2})}}return t})(),eu=class{};var of=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275mod=Wt({type:t})}static{this.\u0275inj=Ut({imports:[ql,ql]})}}return t})();var Sr=class t{back=new Y;static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-armonia"]],outputs:{back:"back"},standalone:!0,features:[st],decls:2,vars:0,consts:[[3,"click"]],template:function(e,n){e&1&&(N(0,"button",0),_("click",function(){return n.back.emit()}),I(1,"\u2B05 Back to the list"),A())}})};function fa(t){t||(dd(fa),t=R(Es));let i=new Kt(e=>t.onDestroy(e.next.bind(e)));return e=>e.pipe(Ct(i))}var ff=(()=>{class t{constructor(e,n){this._renderer=e,this._elementRef=n,this.onChange=r=>{},this.onTouched=()=>{}}setProperty(e,n){this._renderer.setProperty(this._elementRef.nativeElement,e,n)}registerOnTouched(e){this.onTouched=e}registerOnChange(e){this.onChange=e}setDisabledState(e){this.setProperty("disabled",e)}static{this.\u0275fac=function(n){return new(n||t)(F(oo),F(ft))}}static{this.\u0275dir=it({type:t})}}return t})(),Xb=(()=>{class t extends ff{static{this.\u0275fac=(()=>{let e;return function(r){return(e||(e=Ui(t)))(r||t)}})()}static{this.\u0275dir=it({type:t,features:[de]})}}return t})(),mf=new Z("");var Yb={provide:mf,useExisting:$n(()=>va),multi:!0};function qb(){let t=or()?or().getUserAgent():"";return/android (\d+)/.test(t.toLowerCase())}var Zb=new Z(""),va=(()=>{class t extends ff{constructor(e,n,r){super(e,n),this._compositionMode=r,this._composing=!1,this._compositionMode==null&&(this._compositionMode=!qb())}writeValue(e){let n=e??"";this.setProperty("value",n)}_handleInput(e){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(e)}_compositionStart(){this._composing=!0}_compositionEnd(e){this._composing=!1,this._compositionMode&&this.onChange(e)}static{this.\u0275fac=function(n){return new(n||t)(F(oo),F(ft),F(Zb,8))}}static{this.\u0275dir=it({type:t,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(n,r){n&1&&_("input",function(s){return r._handleInput(s.target.value)})("blur",function(){return r.onTouched()})("compositionstart",function(){return r._compositionStart()})("compositionend",function(s){return r._compositionEnd(s.target.value)})},features:[Pe([Yb]),de]})}}return t})();var Jb=new Z(""),Qb=new Z("");function pf(t){return t!=null}function gf(t){return As(t)?ve(t):t}function bf(t){let i={};return t.forEach(e=>{i=e!=null?P(P({},i),e):i}),Object.keys(i).length===0?null:i}function vf(t,i){return i.map(e=>e(t))}function Kb(t){return!t.validate}function Ef(t){return t.map(i=>Kb(i)?i:e=>i.validate(e))}function Gb(t){if(!t)return null;let i=t.filter(pf);return i.length==0?null:function(e){return bf(vf(e,i))}}function Sf(t){return t!=null?Gb(Ef(t)):null}function _b(t){if(!t)return null;let i=t.filter(pf);return i.length==0?null:function(e){let n=vf(e,i).map(gf);return id(n).pipe(q(bf))}}function Cf(t){return t!=null?_b(Ef(t)):null}function sf(t,i){return t===null?[i]:Array.isArray(t)?[...t,i]:[t,i]}function $b(t){return t._rawValidators}function tv(t){return t._rawAsyncValidators}function ru(t){return t?Array.isArray(t)?t:[t]:[]}function pa(t,i){return Array.isArray(t)?t.includes(i):t===i}function af(t,i){let e=ru(i);return ru(t).forEach(r=>{pa(e,r)||e.push(r)}),e}function cf(t,i){return ru(i).filter(e=>!pa(t,e))}var ga=class{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(i){this._rawValidators=i||[],this._composedValidatorFn=Sf(this._rawValidators)}_setAsyncValidators(i){this._rawAsyncValidators=i||[],this._composedAsyncValidatorFn=Cf(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(i){this._onDestroyCallbacks.push(i)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(i=>i()),this._onDestroyCallbacks=[]}reset(i=void 0){this.control&&this.control.reset(i)}hasError(i,e){return this.control?this.control.hasError(i,e):!1}getError(i,e){return this.control?this.control.getError(i,e):null}},ou=class extends ga{get formDirective(){return null}get path(){return null}},Zo=class extends ga{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}},su=class{constructor(i){this._cd=i}get isTouched(){return this._cd?.control?._touched?.(),!!this._cd?.control?.touched}get isUntouched(){return!!this._cd?.control?.untouched}get isPristine(){return this._cd?.control?._pristine?.(),!!this._cd?.control?.pristine}get isDirty(){return!!this._cd?.control?.dirty}get isValid(){return this._cd?.control?._status?.(),!!this._cd?.control?.valid}get isInvalid(){return!!this._cd?.control?.invalid}get isPending(){return!!this._cd?.control?.pending}get isSubmitted(){return this._cd?._submitted?.(),!!this._cd?.submitted}},ev={"[class.ng-untouched]":"isUntouched","[class.ng-touched]":"isTouched","[class.ng-pristine]":"isPristine","[class.ng-dirty]":"isDirty","[class.ng-valid]":"isValid","[class.ng-invalid]":"isInvalid","[class.ng-pending]":"isPending"},uD=vt(P({},ev),{"[class.ng-submitted]":"isSubmitted"}),wf=(()=>{class t extends su{constructor(e){super(e)}static{this.\u0275fac=function(n){return new(n||t)(F(Zo,2))}}static{this.\u0275dir=it({type:t,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(n,r){n&2&&zt("ng-untouched",r.isUntouched)("ng-touched",r.isTouched)("ng-pristine",r.isPristine)("ng-dirty",r.isDirty)("ng-valid",r.isValid)("ng-invalid",r.isInvalid)("ng-pending",r.isPending)},features:[de]})}}return t})();var zo="VALID",ma="INVALID",Cr="PENDING",Xo="DISABLED",Tr=class{},ba=class extends Tr{constructor(i,e){super(),this.value=i,this.source=e}},Yo=class extends Tr{constructor(i,e){super(),this.pristine=i,this.source=e}},qo=class extends Tr{constructor(i,e){super(),this.touched=i,this.source=e}},wr=class extends Tr{constructor(i,e){super(),this.status=i,this.source=e}};function iv(t){return(Ea(t)?t.validators:t)||null}function nv(t){return Array.isArray(t)?Sf(t):t||null}function rv(t,i){return(Ea(i)?i.asyncValidators:t)||null}function ov(t){return Array.isArray(t)?Cf(t):t||null}function Ea(t){return t!=null&&!Array.isArray(t)&&typeof t=="object"}var au=class{constructor(i,e){this._pendingDirty=!1,this._hasOwnPendingAsyncValidator=null,this._pendingTouched=!1,this._onCollectionChange=()=>{},this._parent=null,this._status=fo(()=>this.statusReactive()),this.statusReactive=An(void 0),this._pristine=fo(()=>this.pristineReactive()),this.pristineReactive=An(!0),this._touched=fo(()=>this.touchedReactive()),this.touchedReactive=An(!1),this._events=new tt,this.events=this._events.asObservable(),this._onDisabledChange=[],this._assignValidators(i),this._assignAsyncValidators(e)}get validator(){return this._composedValidatorFn}set validator(i){this._rawValidators=this._composedValidatorFn=i}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(i){this._rawAsyncValidators=this._composedAsyncValidatorFn=i}get parent(){return this._parent}get status(){return qi(this.statusReactive)}set status(i){qi(()=>this.statusReactive.set(i))}get valid(){return this.status===zo}get invalid(){return this.status===ma}get pending(){return this.status==Cr}get disabled(){return this.status===Xo}get enabled(){return this.status!==Xo}get pristine(){return qi(this.pristineReactive)}set pristine(i){qi(()=>this.pristineReactive.set(i))}get dirty(){return!this.pristine}get touched(){return qi(this.touchedReactive)}set touched(i){qi(()=>this.touchedReactive.set(i))}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(i){this._assignValidators(i)}setAsyncValidators(i){this._assignAsyncValidators(i)}addValidators(i){this.setValidators(af(i,this._rawValidators))}addAsyncValidators(i){this.setAsyncValidators(af(i,this._rawAsyncValidators))}removeValidators(i){this.setValidators(cf(i,this._rawValidators))}removeAsyncValidators(i){this.setAsyncValidators(cf(i,this._rawAsyncValidators))}hasValidator(i){return pa(this._rawValidators,i)}hasAsyncValidator(i){return pa(this._rawAsyncValidators,i)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(i={}){let e=this.touched===!1;this.touched=!0;let n=i.sourceControl??this;this._parent&&!i.onlySelf&&this._parent.markAsTouched(vt(P({},i),{sourceControl:n})),e&&i.emitEvent!==!1&&this._events.next(new qo(!0,n))}markAllAsTouched(i={}){this.markAsTouched({onlySelf:!0,emitEvent:i.emitEvent,sourceControl:this}),this._forEachChild(e=>e.markAllAsTouched(i))}markAsUntouched(i={}){let e=this.touched===!0;this.touched=!1,this._pendingTouched=!1;let n=i.sourceControl??this;this._forEachChild(r=>{r.markAsUntouched({onlySelf:!0,emitEvent:i.emitEvent,sourceControl:n})}),this._parent&&!i.onlySelf&&this._parent._updateTouched(i,n),e&&i.emitEvent!==!1&&this._events.next(new qo(!1,n))}markAsDirty(i={}){let e=this.pristine===!0;this.pristine=!1;let n=i.sourceControl??this;this._parent&&!i.onlySelf&&this._parent.markAsDirty(vt(P({},i),{sourceControl:n})),e&&i.emitEvent!==!1&&this._events.next(new Yo(!1,n))}markAsPristine(i={}){let e=this.pristine===!1;this.pristine=!0,this._pendingDirty=!1;let n=i.sourceControl??this;this._forEachChild(r=>{r.markAsPristine({onlySelf:!0,emitEvent:i.emitEvent})}),this._parent&&!i.onlySelf&&this._parent._updatePristine(i,n),e&&i.emitEvent!==!1&&this._events.next(new Yo(!0,n))}markAsPending(i={}){this.status=Cr;let e=i.sourceControl??this;i.emitEvent!==!1&&(this._events.next(new wr(this.status,e)),this.statusChanges.emit(this.status)),this._parent&&!i.onlySelf&&this._parent.markAsPending(vt(P({},i),{sourceControl:e}))}disable(i={}){let e=this._parentMarkedDirty(i.onlySelf);this.status=Xo,this.errors=null,this._forEachChild(r=>{r.disable(vt(P({},i),{onlySelf:!0}))}),this._updateValue();let n=i.sourceControl??this;i.emitEvent!==!1&&(this._events.next(new ba(this.value,n)),this._events.next(new wr(this.status,n)),this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(vt(P({},i),{skipPristineCheck:e}),this),this._onDisabledChange.forEach(r=>r(!0))}enable(i={}){let e=this._parentMarkedDirty(i.onlySelf);this.status=zo,this._forEachChild(n=>{n.enable(vt(P({},i),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:i.emitEvent}),this._updateAncestors(vt(P({},i),{skipPristineCheck:e}),this),this._onDisabledChange.forEach(n=>n(!1))}_updateAncestors(i,e){this._parent&&!i.onlySelf&&(this._parent.updateValueAndValidity(i),i.skipPristineCheck||this._parent._updatePristine({},e),this._parent._updateTouched({},e))}setParent(i){this._parent=i}getRawValue(){return this.value}updateValueAndValidity(i={}){if(this._setInitialStatus(),this._updateValue(),this.enabled){let n=this._cancelExistingSubscription();this.errors=this._runValidator(),this.status=this._calculateStatus(),(this.status===zo||this.status===Cr)&&this._runAsyncValidator(n,i.emitEvent)}let e=i.sourceControl??this;i.emitEvent!==!1&&(this._events.next(new ba(this.value,e)),this._events.next(new wr(this.status,e)),this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!i.onlySelf&&this._parent.updateValueAndValidity(vt(P({},i),{sourceControl:e}))}_updateTreeValidity(i={emitEvent:!0}){this._forEachChild(e=>e._updateTreeValidity(i)),this.updateValueAndValidity({onlySelf:!0,emitEvent:i.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?Xo:zo}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(i,e){if(this.asyncValidator){this.status=Cr,this._hasOwnPendingAsyncValidator={emitEvent:e!==!1};let n=gf(this.asyncValidator(this));this._asyncValidationSubscription=n.subscribe(r=>{this._hasOwnPendingAsyncValidator=null,this.setErrors(r,{emitEvent:e,shouldHaveEmitted:i})})}}_cancelExistingSubscription(){if(this._asyncValidationSubscription){this._asyncValidationSubscription.unsubscribe();let i=this._hasOwnPendingAsyncValidator?.emitEvent??!1;return this._hasOwnPendingAsyncValidator=null,i}return!1}setErrors(i,e={}){this.errors=i,this._updateControlsErrors(e.emitEvent!==!1,this,e.shouldHaveEmitted)}get(i){let e=i;return e==null||(Array.isArray(e)||(e=e.split(".")),e.length===0)?null:e.reduce((n,r)=>n&&n._find(r),this)}getError(i,e){let n=e?this.get(e):this;return n&&n.errors?n.errors[i]:null}hasError(i,e){return!!this.getError(i,e)}get root(){let i=this;for(;i._parent;)i=i._parent;return i}_updateControlsErrors(i,e,n){this.status=this._calculateStatus(),i&&this.statusChanges.emit(this.status),(i||n)&&this._events.next(new wr(this.status,e)),this._parent&&this._parent._updateControlsErrors(i,e,n)}_initObservables(){this.valueChanges=new Y,this.statusChanges=new Y}_calculateStatus(){return this._allControlsDisabled()?Xo:this.errors?ma:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(Cr)?Cr:this._anyControlsHaveStatus(ma)?ma:zo}_anyControlsHaveStatus(i){return this._anyControls(e=>e.status===i)}_anyControlsDirty(){return this._anyControls(i=>i.dirty)}_anyControlsTouched(){return this._anyControls(i=>i.touched)}_updatePristine(i,e){let n=!this._anyControlsDirty(),r=this.pristine!==n;this.pristine=n,this._parent&&!i.onlySelf&&this._parent._updatePristine(i,e),r&&this._events.next(new Yo(this.pristine,e))}_updateTouched(i={},e){this.touched=this._anyControlsTouched(),this._events.next(new qo(this.touched,e)),this._parent&&!i.onlySelf&&this._parent._updateTouched(i,e)}_registerOnCollectionChange(i){this._onCollectionChange=i}_setUpdateStrategy(i){Ea(i)&&i.updateOn!=null&&(this._updateOn=i.updateOn)}_parentMarkedDirty(i){let e=this._parent&&this._parent.dirty;return!i&&!!e&&!this._parent._anyControlsDirty()}_find(i){return null}_assignValidators(i){this._rawValidators=Array.isArray(i)?i.slice():i,this._composedValidatorFn=nv(this._rawValidators)}_assignAsyncValidators(i){this._rawAsyncValidators=Array.isArray(i)?i.slice():i,this._composedAsyncValidatorFn=ov(this._rawAsyncValidators)}};var Tf=new Z("CallSetDisabledState",{providedIn:"root",factory:()=>cu}),cu="always";function sv(t,i){return[...i.path,t]}function av(t,i,e=cu){lv(t,i),i.valueAccessor.writeValue(t.value),(t.disabled||e==="always")&&i.valueAccessor.setDisabledState?.(t.disabled),uv(t,i),hv(t,i),dv(t,i),cv(t,i)}function lf(t,i){t.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(i)})}function cv(t,i){if(i.valueAccessor.setDisabledState){let e=n=>{i.valueAccessor.setDisabledState(n)};t.registerOnDisabledChange(e),i._registerOnDestroy(()=>{t._unregisterOnDisabledChange(e)})}}function lv(t,i){let e=$b(t);i.validator!==null?t.setValidators(sf(e,i.validator)):typeof e=="function"&&t.setValidators([e]);let n=tv(t);i.asyncValidator!==null?t.setAsyncValidators(sf(n,i.asyncValidator)):typeof n=="function"&&t.setAsyncValidators([n]);let r=()=>t.updateValueAndValidity();lf(i._rawValidators,r),lf(i._rawAsyncValidators,r)}function uv(t,i){i.valueAccessor.registerOnChange(e=>{t._pendingValue=e,t._pendingChange=!0,t._pendingDirty=!0,t.updateOn==="change"&&Df(t,i)})}function dv(t,i){i.valueAccessor.registerOnTouched(()=>{t._pendingTouched=!0,t.updateOn==="blur"&&t._pendingChange&&Df(t,i),t.updateOn!=="submit"&&t.markAsTouched()})}function Df(t,i){t._pendingDirty&&t.markAsDirty(),t.setValue(t._pendingValue,{emitModelToViewChange:!1}),i.viewToModelUpdate(t._pendingValue),t._pendingChange=!1}function hv(t,i){let e=(n,r)=>{i.valueAccessor.writeValue(n),r&&i.viewToModelUpdate(n)};t.registerOnChange(e),i._registerOnDestroy(()=>{t._unregisterOnChange(e)})}function fv(t,i){if(!t.hasOwnProperty("model"))return!1;let e=t.model;return e.isFirstChange()?!0:!Object.is(i,e.currentValue)}function mv(t){return Object.getPrototypeOf(t.constructor)===Xb}function pv(t,i){if(!i)return null;Array.isArray(i);let e,n,r;return i.forEach(o=>{o.constructor===va?e=o:mv(o)?n=o:r=o}),r||n||e||null}function uf(t,i){let e=t.indexOf(i);e>-1&&t.splice(e,1)}function df(t){return typeof t=="object"&&t!==null&&Object.keys(t).length===2&&"value"in t&&"disabled"in t}var gv=class extends au{constructor(i=null,e,n){super(iv(e),rv(n,e)),this.defaultValue=null,this._onChange=[],this._pendingChange=!1,this._applyFormState(i),this._setUpdateStrategy(e),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator}),Ea(e)&&(e.nonNullable||e.initialValueIsDefault)&&(df(i)?this.defaultValue=i.value:this.defaultValue=i)}setValue(i,e={}){this.value=this._pendingValue=i,this._onChange.length&&e.emitModelToViewChange!==!1&&this._onChange.forEach(n=>n(this.value,e.emitViewToModelChange!==!1)),this.updateValueAndValidity(e)}patchValue(i,e={}){this.setValue(i,e)}reset(i=this.defaultValue,e={}){this._applyFormState(i),this.markAsPristine(e),this.markAsUntouched(e),this.setValue(this.value,e),this._pendingChange=!1}_updateValue(){}_anyControls(i){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(i){this._onChange.push(i)}_unregisterOnChange(i){uf(this._onChange,i)}registerOnDisabledChange(i){this._onDisabledChange.push(i)}_unregisterOnDisabledChange(i){uf(this._onDisabledChange,i)}_forEachChild(i){}_syncPendingControls(){return this.updateOn==="submit"&&(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),this._pendingChange)?(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),!0):!1}_applyFormState(i){df(i)?(this.value=this._pendingValue=i.value,i.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=i}};var bv={provide:Zo,useExisting:$n(()=>lu)},hf=Promise.resolve(),lu=(()=>{class t extends Zo{constructor(e,n,r,o,s,a){super(),this._changeDetectorRef=s,this.callSetDisabledState=a,this.control=new gv,this._registered=!1,this.name="",this.update=new Y,this._parent=e,this._setValidators(n),this._setAsyncValidators(r),this.valueAccessor=pv(this,o)}ngOnChanges(e){if(this._checkForErrors(),!this._registered||"name"in e){if(this._registered&&(this._checkName(),this.formDirective)){let n=e.name.previousValue;this.formDirective.removeControl({name:n,path:this._getPath(n)})}this._setUpControl()}"isDisabled"in e&&this._updateDisabled(e),fv(e,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._getPath(this.name)}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(e){this.viewModel=e,this.update.emit(e)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&this.options.updateOn!=null&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!!(this.options&&this.options.standalone)}_setUpStandalone(){av(this.control,this,this.callSetDisabledState),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),!this._isStandalone()&&this.name}_updateValue(e){hf.then(()=>{this.control.setValue(e,{emitViewToModelChange:!1}),this._changeDetectorRef?.markForCheck()})}_updateDisabled(e){let n=e.isDisabled.currentValue,r=n!==0&&Ft(n);hf.then(()=>{r&&!this.control.disabled?this.control.disable():!r&&this.control.disabled&&this.control.enable(),this._changeDetectorRef?.markForCheck()})}_getPath(e){return this._parent?sv(e,this._parent):[e]}static{this.\u0275fac=function(n){return new(n||t)(F(ou,9),F(Jb,10),F(Qb,10),F(mf,10),F(oe,8),F(Tf,8))}}static{this.\u0275dir=it({type:t,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:[0,"disabled","isDisabled"],model:[0,"ngModel","model"],options:[0,"ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[Pe([bv]),de,je]})}}return t})();var vv=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275mod=Wt({type:t})}static{this.\u0275inj=Ut({})}}return t})();var xf=(()=>{class t{static withConfig(e){return{ngModule:t,providers:[{provide:Tf,useValue:e.callSetDisabledState??cu}]}}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275mod=Wt({type:t})}static{this.\u0275inj=Ut({imports:[vv]})}}return t})();var Xt="top",ae="bottom",_t="right",Zt="left",Sa="auto",en=[Xt,ae,_t,Zt],yi="start",Fn="end",Af="clippingParents",Ca="viewport",Dr="popper",Nf="reference",uu=en.reduce(function(t,i){return t.concat([i+"-"+yi,i+"-"+Fn])},[]),wa=[].concat(en,[Sa]).reduce(function(t,i){return t.concat([i,i+"-"+yi,i+"-"+Fn])},[]),Sv="beforeRead",Cv="read",wv="afterRead",Tv="beforeMain",Dv="main",xv="afterMain",Av="beforeWrite",Nv="write",Mv="afterWrite",Mf=[Sv,Cv,wv,Tv,Dv,xv,Av,Nv,Mv];function $t(t){return t?(t.nodeName||"").toLowerCase():null}function At(t){if(t==null)return window;if(t.toString()!=="[object Window]"){var i=t.ownerDocument;return i&&i.defaultView||window}return t}function Xe(t){var i=At(t).Element;return t instanceof i||t instanceof Element}function Jt(t){var i=At(t).HTMLElement;return t instanceof i||t instanceof HTMLElement}function xr(t){if(typeof ShadowRoot>"u")return!1;var i=At(t).ShadowRoot;return t instanceof i||t instanceof ShadowRoot}function Rv(t){var i=t.state;Object.keys(i.elements).forEach(function(e){var n=i.styles[e]||{},r=i.attributes[e]||{},o=i.elements[e];!Jt(o)||!$t(o)||(Object.assign(o.style,n),Object.keys(r).forEach(function(s){var a=r[s];a===!1?o.removeAttribute(s):o.setAttribute(s,a===!0?"":a)}))})}function yv(t){var i=t.state,e={popper:{position:i.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(i.elements.popper.style,e.popper),i.styles=e,i.elements.arrow&&Object.assign(i.elements.arrow.style,e.arrow),function(){Object.keys(i.elements).forEach(function(n){var r=i.elements[n],o=i.attributes[n]||{},s=Object.keys(i.styles.hasOwnProperty(n)?i.styles[n]:e[n]),a=s.reduce(function(c,l){return c[l]="",c},{});!Jt(r)||!$t(r)||(Object.assign(r.style,a),Object.keys(o).forEach(function(c){r.removeAttribute(c)}))})}}var Rf={name:"applyStyles",enabled:!0,phase:"write",fn:Rv,effect:yv,requires:["computeStyles"]};function te(t){return t.split("-")[0]}var oi=Math.max,Ln=Math.min,Oi=Math.round;function Ar(){var t=navigator.userAgentData;return t!=null&&t.brands&&Array.isArray(t.brands)?t.brands.map(function(i){return i.brand+"/"+i.version}).join(" "):navigator.userAgent}function Jo(){return!/^((?!chrome|android).)*safari/i.test(Ar())}function Ye(t,i,e){i===void 0&&(i=!1),e===void 0&&(e=!1);var n=t.getBoundingClientRect(),r=1,o=1;i&&Jt(t)&&(r=t.offsetWidth>0&&Oi(n.width)/t.offsetWidth||1,o=t.offsetHeight>0&&Oi(n.height)/t.offsetHeight||1);var s=Xe(t)?At(t):window,a=s.visualViewport,c=!Jo()&&e,l=(n.left+(c&&a?a.offsetLeft:0))/r,u=(n.top+(c&&a?a.offsetTop:0))/o,h=n.width/r,f=n.height/o;return{width:h,height:f,top:u,right:l+h,bottom:u+f,left:l,x:l,y:u}}function Vn(t){var i=Ye(t),e=t.offsetWidth,n=t.offsetHeight;return Math.abs(i.width-e)<=1&&(e=i.width),Math.abs(i.height-n)<=1&&(n=i.height),{x:t.offsetLeft,y:t.offsetTop,width:e,height:n}}function Qo(t,i){var e=i.getRootNode&&i.getRootNode();if(t.contains(i))return!0;if(e&&xr(e)){var n=i;do{if(n&&t.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function Se(t){return At(t).getComputedStyle(t)}function du(t){return["table","td","th"].indexOf($t(t))>=0}function ce(t){return((Xe(t)?t.ownerDocument:t.document)||window.document).documentElement}function ki(t){return $t(t)==="html"?t:t.assignedSlot||t.parentNode||(xr(t)?t.host:null)||ce(t)}function yf(t){return!Jt(t)||Se(t).position==="fixed"?null:t.offsetParent}function Ov(t){var i=/firefox/i.test(Ar()),e=/Trident/i.test(Ar());if(e&&Jt(t)){var n=Se(t);if(n.position==="fixed")return null}var r=ki(t);for(xr(r)&&(r=r.host);Jt(r)&&["html","body"].indexOf($t(r))<0;){var o=Se(r);if(o.transform!=="none"||o.perspective!=="none"||o.contain==="paint"||["transform","perspective"].indexOf(o.willChange)!==-1||i&&o.willChange==="filter"||i&&o.filter&&o.filter!=="none")return r;r=r.parentNode}return null}function si(t){for(var i=At(t),e=yf(t);e&&du(e)&&Se(e).position==="static";)e=yf(e);return e&&($t(e)==="html"||$t(e)==="body"&&Se(e).position==="static")?i:e||Ov(t)||i}function Hn(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function jn(t,i,e){return oi(t,Ln(i,e))}function Of(t,i,e){var n=jn(t,i,e);return n>e?e:n}function Ko(){return{top:0,right:0,bottom:0,left:0}}function Go(t){return Object.assign({},Ko(),t)}function _o(t,i){return i.reduce(function(e,n){return e[n]=t,e},{})}var kv=function(i,e){return i=typeof i=="function"?i(Object.assign({},e.rects,{placement:e.placement})):i,Go(typeof i!="number"?i:_o(i,en))};function Iv(t){var i,e=t.state,n=t.name,r=t.options,o=e.elements.arrow,s=e.modifiersData.popperOffsets,a=te(e.placement),c=Hn(a),l=[Zt,_t].indexOf(a)>=0,u=l?"height":"width";if(!(!o||!s)){var h=kv(r.padding,e),f=Vn(o),d=c==="y"?Xt:Zt,p=c==="y"?ae:_t,g=e.rects.reference[u]+e.rects.reference[c]-s[c]-e.rects.popper[u],b=s[c]-e.rects.reference[c],E=si(o),v=E?c==="y"?E.clientHeight||0:E.clientWidth||0:0,w=g/2-b/2,C=h[d],D=v-f[u]-h[p],x=v/2-f[u]/2+w,k=jn(C,x,D),U=c;e.modifiersData[n]=(i={},i[U]=k,i.centerOffset=k-x,i)}}function Pv(t){var i=t.state,e=t.options,n=e.element,r=n===void 0?"[data-popper-arrow]":n;r!=null&&(typeof r=="string"&&(r=i.elements.popper.querySelector(r),!r)||Qo(i.elements.popper,r)&&(i.elements.arrow=r))}var hu={name:"arrow",enabled:!0,phase:"main",fn:Iv,effect:Pv,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function qe(t){return t.split("-")[1]}var Bv={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Fv(t,i){var e=t.x,n=t.y,r=i.devicePixelRatio||1;return{x:Oi(e*r)/r||0,y:Oi(n*r)/r||0}}function kf(t){var i,e=t.popper,n=t.popperRect,r=t.placement,o=t.variation,s=t.offsets,a=t.position,c=t.gpuAcceleration,l=t.adaptive,u=t.roundOffsets,h=t.isFixed,f=s.x,d=f===void 0?0:f,p=s.y,g=p===void 0?0:p,b=typeof u=="function"?u({x:d,y:g}):{x:d,y:g};d=b.x,g=b.y;var E=s.hasOwnProperty("x"),v=s.hasOwnProperty("y"),w=Zt,C=Xt,D=window;if(l){var x=si(e),k="clientHeight",U="clientWidth";if(x===At(e)&&(x=ce(e),Se(x).position!=="static"&&a==="absolute"&&(k="scrollHeight",U="scrollWidth")),x=x,r===Xt||(r===Zt||r===_t)&&o===Fn){C=ae;var X=h&&x===D&&D.visualViewport?D.visualViewport.height:x[k];g-=X-n.height,g*=c?1:-1}if(r===Zt||(r===Xt||r===ae)&&o===Fn){w=_t;var nt=h&&x===D&&D.visualViewport?D.visualViewport.width:x[U];d-=nt-n.width,d*=c?1:-1}}var et=Object.assign({position:a},l&&Bv),St=u===!0?Fv({x:d,y:g},At(e)):{x:d,y:g};if(d=St.x,g=St.y,c){var mt;return Object.assign({},et,(mt={},mt[C]=v?"0":"",mt[w]=E?"0":"",mt.transform=(D.devicePixelRatio||1)<=1?"translate("+d+"px, "+g+"px)":"translate3d("+d+"px, "+g+"px, 0)",mt))}return Object.assign({},et,(i={},i[C]=v?g+"px":"",i[w]=E?d+"px":"",i.transform="",i))}function Lv(t){var i=t.state,e=t.options,n=e.gpuAcceleration,r=n===void 0?!0:n,o=e.adaptive,s=o===void 0?!0:o,a=e.roundOffsets,c=a===void 0?!0:a,l={placement:te(i.placement),variation:qe(i.placement),popper:i.elements.popper,popperRect:i.rects.popper,gpuAcceleration:r,isFixed:i.options.strategy==="fixed"};i.modifiersData.popperOffsets!=null&&(i.styles.popper=Object.assign({},i.styles.popper,kf(Object.assign({},l,{offsets:i.modifiersData.popperOffsets,position:i.options.strategy,adaptive:s,roundOffsets:c})))),i.modifiersData.arrow!=null&&(i.styles.arrow=Object.assign({},i.styles.arrow,kf(Object.assign({},l,{offsets:i.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:c})))),i.attributes.popper=Object.assign({},i.attributes.popper,{"data-popper-placement":i.placement})}var If={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Lv,data:{}};var Ta={passive:!0};function Vv(t){var i=t.state,e=t.instance,n=t.options,r=n.scroll,o=r===void 0?!0:r,s=n.resize,a=s===void 0?!0:s,c=At(i.elements.popper),l=[].concat(i.scrollParents.reference,i.scrollParents.popper);return o&&l.forEach(function(u){u.addEventListener("scroll",e.update,Ta)}),a&&c.addEventListener("resize",e.update,Ta),function(){o&&l.forEach(function(u){u.removeEventListener("scroll",e.update,Ta)}),a&&c.removeEventListener("resize",e.update,Ta)}}var Pf={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:Vv,data:{}};var Hv={left:"right",right:"left",bottom:"top",top:"bottom"};function Nr(t){return t.replace(/left|right|bottom|top/g,function(i){return Hv[i]})}var jv={start:"end",end:"start"};function Da(t){return t.replace(/start|end/g,function(i){return jv[i]})}function Un(t){var i=At(t),e=i.pageXOffset,n=i.pageYOffset;return{scrollLeft:e,scrollTop:n}}function Wn(t){return Ye(ce(t)).left+Un(t).scrollLeft}function fu(t,i){var e=At(t),n=ce(t),r=e.visualViewport,o=n.clientWidth,s=n.clientHeight,a=0,c=0;if(r){o=r.width,s=r.height;var l=Jo();(l||!l&&i==="fixed")&&(a=r.offsetLeft,c=r.offsetTop)}return{width:o,height:s,x:a+Wn(t),y:c}}function mu(t){var i,e=ce(t),n=Un(t),r=(i=t.ownerDocument)==null?void 0:i.body,o=oi(e.scrollWidth,e.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),s=oi(e.scrollHeight,e.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0),a=-n.scrollLeft+Wn(t),c=-n.scrollTop;return Se(r||e).direction==="rtl"&&(a+=oi(e.clientWidth,r?r.clientWidth:0)-o),{width:o,height:s,x:a,y:c}}function zn(t){var i=Se(t),e=i.overflow,n=i.overflowX,r=i.overflowY;return/auto|scroll|overlay|hidden/.test(e+r+n)}function xa(t){return["html","body","#document"].indexOf($t(t))>=0?t.ownerDocument.body:Jt(t)&&zn(t)?t:xa(ki(t))}function nn(t,i){var e;i===void 0&&(i=[]);var n=xa(t),r=n===((e=t.ownerDocument)==null?void 0:e.body),o=At(n),s=r?[o].concat(o.visualViewport||[],zn(n)?n:[]):n,a=i.concat(s);return r?a:a.concat(nn(ki(s)))}function Mr(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function Uv(t,i){var e=Ye(t,!1,i==="fixed");return e.top=e.top+t.clientTop,e.left=e.left+t.clientLeft,e.bottom=e.top+t.clientHeight,e.right=e.left+t.clientWidth,e.width=t.clientWidth,e.height=t.clientHeight,e.x=e.left,e.y=e.top,e}function Bf(t,i,e){return i===Ca?Mr(fu(t,e)):Xe(i)?Uv(i,e):Mr(mu(ce(t)))}function Wv(t){var i=nn(ki(t)),e=["absolute","fixed"].indexOf(Se(t).position)>=0,n=e&&Jt(t)?si(t):t;return Xe(n)?i.filter(function(r){return Xe(r)&&Qo(r,n)&&$t(r)!=="body"}):[]}function pu(t,i,e,n){var r=i==="clippingParents"?Wv(t):[].concat(i),o=[].concat(r,[e]),s=o[0],a=o.reduce(function(c,l){var u=Bf(t,l,n);return c.top=oi(u.top,c.top),c.right=Ln(u.right,c.right),c.bottom=Ln(u.bottom,c.bottom),c.left=oi(u.left,c.left),c},Bf(t,s,n));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function $o(t){var i=t.reference,e=t.element,n=t.placement,r=n?te(n):null,o=n?qe(n):null,s=i.x+i.width/2-e.width/2,a=i.y+i.height/2-e.height/2,c;switch(r){case Xt:c={x:s,y:i.y-e.height};break;case ae:c={x:s,y:i.y+i.height};break;case _t:c={x:i.x+i.width,y:a};break;case Zt:c={x:i.x-e.width,y:a};break;default:c={x:i.x,y:i.y}}var l=r?Hn(r):null;if(l!=null){var u=l==="y"?"height":"width";switch(o){case yi:c[l]=c[l]-(i[u]/2-e[u]/2);break;case Fn:c[l]=c[l]+(i[u]/2-e[u]/2);break;default:}}return c}function rn(t,i){i===void 0&&(i={});var e=i,n=e.placement,r=n===void 0?t.placement:n,o=e.strategy,s=o===void 0?t.strategy:o,a=e.boundary,c=a===void 0?Af:a,l=e.rootBoundary,u=l===void 0?Ca:l,h=e.elementContext,f=h===void 0?Dr:h,d=e.altBoundary,p=d===void 0?!1:d,g=e.padding,b=g===void 0?0:g,E=Go(typeof b!="number"?b:_o(b,en)),v=f===Dr?Nf:Dr,w=t.rects.popper,C=t.elements[p?v:f],D=pu(Xe(C)?C:C.contextElement||ce(t.elements.popper),c,u,s),x=Ye(t.elements.reference),k=$o({reference:x,element:w,strategy:"absolute",placement:r}),U=Mr(Object.assign({},w,k)),X=f===Dr?U:x,nt={top:D.top-X.top+E.top,bottom:X.bottom-D.bottom+E.bottom,left:D.left-X.left+E.left,right:X.right-D.right+E.right},et=t.modifiersData.offset;if(f===Dr&&et){var St=et[r];Object.keys(nt).forEach(function(mt){var bt=[_t,ae].indexOf(mt)>=0?1:-1,Ot=[Xt,ae].indexOf(mt)>=0?"y":"x";nt[mt]+=St[Ot]*bt})}return nt}function gu(t,i){i===void 0&&(i={});var e=i,n=e.placement,r=e.boundary,o=e.rootBoundary,s=e.padding,a=e.flipVariations,c=e.allowedAutoPlacements,l=c===void 0?wa:c,u=qe(n),h=u?a?uu:uu.filter(function(p){return qe(p)===u}):en,f=h.filter(function(p){return l.indexOf(p)>=0});f.length===0&&(f=h);var d=f.reduce(function(p,g){return p[g]=rn(t,{placement:g,boundary:r,rootBoundary:o,padding:s})[te(g)],p},{});return Object.keys(d).sort(function(p,g){return d[p]-d[g]})}function zv(t){if(te(t)===Sa)return[];var i=Nr(t);return[Da(t),i,Da(i)]}function Xv(t){var i=t.state,e=t.options,n=t.name;if(!i.modifiersData[n]._skip){for(var r=e.mainAxis,o=r===void 0?!0:r,s=e.altAxis,a=s===void 0?!0:s,c=e.fallbackPlacements,l=e.padding,u=e.boundary,h=e.rootBoundary,f=e.altBoundary,d=e.flipVariations,p=d===void 0?!0:d,g=e.allowedAutoPlacements,b=i.options.placement,E=te(b),v=E===b,w=c||(v||!p?[Nr(b)]:zv(b)),C=[b].concat(w).reduce(function(De,Qt){return De.concat(te(Qt)===Sa?gu(i,{placement:Qt,boundary:u,rootBoundary:h,padding:l,flipVariations:p,allowedAutoPlacements:g}):Qt)},[]),D=i.rects.reference,x=i.rects.popper,k=new Map,U=!0,X=C[0],nt=0;nt<C.length;nt++){var et=C[nt],St=te(et),mt=qe(et)===yi,bt=[Xt,ae].indexOf(St)>=0,Ot=bt?"width":"height",Tt=rn(i,{placement:et,boundary:u,rootBoundary:h,altBoundary:f,padding:l}),Yt=bt?mt?_t:Zt:mt?ae:Xt;D[Ot]>x[Ot]&&(Yt=Nr(Yt));var Je=Nr(Yt),Mt=[];if(o&&Mt.push(Tt[St]<=0),a&&Mt.push(Tt[Yt]<=0,Tt[Je]<=0),Mt.every(function(De){return De})){X=et,U=!1;break}k.set(et,Mt)}if(U)for(var Vt=p?3:1,Ht=function(Qt){var Qe=C.find(function(ke){var Ke=k.get(ke);if(Ke)return Ke.slice(0,Qt).every(function(Ai){return Ai})});if(Qe)return X=Qe,"break"},jt=Vt;jt>0;jt--){var be=Ht(jt);if(be==="break")break}i.placement!==X&&(i.modifiersData[n]._skip=!0,i.placement=X,i.reset=!0)}}var bu={name:"flip",enabled:!0,phase:"main",fn:Xv,requiresIfExists:["offset"],data:{_skip:!1}};function Yv(t,i,e){var n=te(t),r=[Zt,Xt].indexOf(n)>=0?-1:1,o=typeof e=="function"?e(Object.assign({},i,{placement:t})):e,s=o[0],a=o[1];return s=s||0,a=(a||0)*r,[Zt,_t].indexOf(n)>=0?{x:a,y:s}:{x:s,y:a}}function qv(t){var i=t.state,e=t.options,n=t.name,r=e.offset,o=r===void 0?[0,0]:r,s=wa.reduce(function(u,h){return u[h]=Yv(h,i.rects,o),u},{}),a=s[i.placement],c=a.x,l=a.y;i.modifiersData.popperOffsets!=null&&(i.modifiersData.popperOffsets.x+=c,i.modifiersData.popperOffsets.y+=l),i.modifiersData[n]=s}var vu={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:qv};function Zv(t){var i=t.state,e=t.name;i.modifiersData[e]=$o({reference:i.rects.reference,element:i.rects.popper,strategy:"absolute",placement:i.placement})}var Ff={name:"popperOffsets",enabled:!0,phase:"read",fn:Zv,data:{}};function Eu(t){return t==="x"?"y":"x"}function Jv(t){var i=t.state,e=t.options,n=t.name,r=e.mainAxis,o=r===void 0?!0:r,s=e.altAxis,a=s===void 0?!1:s,c=e.boundary,l=e.rootBoundary,u=e.altBoundary,h=e.padding,f=e.tether,d=f===void 0?!0:f,p=e.tetherOffset,g=p===void 0?0:p,b=rn(i,{boundary:c,rootBoundary:l,padding:h,altBoundary:u}),E=te(i.placement),v=qe(i.placement),w=!v,C=Hn(E),D=Eu(C),x=i.modifiersData.popperOffsets,k=i.rects.reference,U=i.rects.popper,X=typeof g=="function"?g(Object.assign({},i.rects,{placement:i.placement})):g,nt=typeof X=="number"?{mainAxis:X,altAxis:X}:Object.assign({mainAxis:0,altAxis:0},X),et=i.modifiersData.offset?i.modifiersData.offset[i.placement]:null,St={x:0,y:0};if(x){if(o){var mt,bt=C==="y"?Xt:Zt,Ot=C==="y"?ae:_t,Tt=C==="y"?"height":"width",Yt=x[C],Je=Yt+b[bt],Mt=Yt-b[Ot],Vt=d?-U[Tt]/2:0,Ht=v===yi?k[Tt]:U[Tt],jt=v===yi?-U[Tt]:-k[Tt],be=i.elements.arrow,De=d&&be?Vn(be):{width:0,height:0},Qt=i.modifiersData["arrow#persistent"]?i.modifiersData["arrow#persistent"].padding:Ko(),Qe=Qt[bt],ke=Qt[Ot],Ke=jn(0,k[Tt],De[Tt]),Ai=w?k[Tt]/2-Vt-Ke-Qe-nt.mainAxis:Ht-Ke-Qe-nt.mainAxis,Kr=w?-k[Tt]/2+Vt+Ke+ke+nt.mainAxis:jt+Ke+ke+nt.mainAxis,Ge=i.elements.arrow&&si(i.elements.arrow),En=Ge?C==="y"?Ge.clientTop||0:Ge.clientLeft||0:0,Qn=(mt=et?.[C])!=null?mt:0,Li=Yt+Ai-Qn-En,fs=Yt+Kr-Qn,Kn=jn(d?Ln(Je,Li):Je,Yt,d?oi(Mt,fs):Mt);x[C]=Kn,St[C]=Kn-Yt}if(a){var ms,Gr=C==="x"?Xt:Zt,lc=C==="x"?ae:_t,Sn=x[D],ps=D==="y"?"height":"width",Ju=Sn+b[Gr],Qu=Sn-b[lc],uc=[Xt,Zt].indexOf(E)!==-1,Ku=(ms=et?.[D])!=null?ms:0,Gu=uc?Ju:Sn-k[ps]-U[ps]-Ku+nt.altAxis,_u=uc?Sn+k[ps]+U[ps]-Ku-nt.altAxis:Qu,$u=d&&uc?Of(Gu,Sn,_u):jn(d?Gu:Ju,Sn,d?_u:Qu);x[D]=$u,St[D]=$u-Sn}i.modifiersData[n]=St}}var Su={name:"preventOverflow",enabled:!0,phase:"main",fn:Jv,requiresIfExists:["offset"]};function Cu(t){return{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}}function wu(t){return t===At(t)||!Jt(t)?Un(t):Cu(t)}function Qv(t){var i=t.getBoundingClientRect(),e=Oi(i.width)/t.offsetWidth||1,n=Oi(i.height)/t.offsetHeight||1;return e!==1||n!==1}function Tu(t,i,e){e===void 0&&(e=!1);var n=Jt(i),r=Jt(i)&&Qv(i),o=ce(i),s=Ye(t,r,e),a={scrollLeft:0,scrollTop:0},c={x:0,y:0};return(n||!n&&!e)&&(($t(i)!=="body"||zn(o))&&(a=wu(i)),Jt(i)?(c=Ye(i,!0),c.x+=i.clientLeft,c.y+=i.clientTop):o&&(c.x=Wn(o))),{x:s.left+a.scrollLeft-c.x,y:s.top+a.scrollTop-c.y,width:s.width,height:s.height}}function Kv(t){var i=new Map,e=new Set,n=[];t.forEach(function(o){i.set(o.name,o)});function r(o){e.add(o.name);var s=[].concat(o.requires||[],o.requiresIfExists||[]);s.forEach(function(a){if(!e.has(a)){var c=i.get(a);c&&r(c)}}),n.push(o)}return t.forEach(function(o){e.has(o.name)||r(o)}),n}function Du(t){var i=Kv(t);return Mf.reduce(function(e,n){return e.concat(i.filter(function(r){return r.phase===n}))},[])}function xu(t){var i;return function(){return i||(i=new Promise(function(e){Promise.resolve().then(function(){i=void 0,e(t())})})),i}}function Au(t){var i=t.reduce(function(e,n){var r=e[n.name];return e[n.name]=r?Object.assign({},r,n,{options:Object.assign({},r.options,n.options),data:Object.assign({},r.data,n.data)}):n,e},{});return Object.keys(i).map(function(e){return i[e]})}var Lf={placement:"bottom",modifiers:[],strategy:"absolute"};function Vf(){for(var t=arguments.length,i=new Array(t),e=0;e<t;e++)i[e]=arguments[e];return!i.some(function(n){return!(n&&typeof n.getBoundingClientRect=="function")})}function Hf(t){t===void 0&&(t={});var i=t,e=i.defaultModifiers,n=e===void 0?[]:e,r=i.defaultOptions,o=r===void 0?Lf:r;return function(a,c,l){l===void 0&&(l=o);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},Lf,o),modifiersData:{},elements:{reference:a,popper:c},attributes:{},styles:{}},h=[],f=!1,d={state:u,setOptions:function(E){var v=typeof E=="function"?E(u.options):E;g(),u.options=Object.assign({},o,u.options,v),u.scrollParents={reference:Xe(a)?nn(a):a.contextElement?nn(a.contextElement):[],popper:nn(c)};var w=Du(Au([].concat(n,u.options.modifiers)));return u.orderedModifiers=w.filter(function(C){return C.enabled}),p(),d.update()},forceUpdate:function(){if(!f){var E=u.elements,v=E.reference,w=E.popper;if(Vf(v,w)){u.rects={reference:Tu(v,si(w),u.options.strategy==="fixed"),popper:Vn(w)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(nt){return u.modifiersData[nt.name]=Object.assign({},nt.data)});for(var C=0;C<u.orderedModifiers.length;C++){if(u.reset===!0){u.reset=!1,C=-1;continue}var D=u.orderedModifiers[C],x=D.fn,k=D.options,U=k===void 0?{}:k,X=D.name;typeof x=="function"&&(u=x({state:u,options:U,name:X,instance:d})||u)}}}},update:xu(function(){return new Promise(function(b){d.forceUpdate(),b(u)})}),destroy:function(){g(),f=!0}};if(!Vf(a,c))return d;d.setOptions(l).then(function(b){!f&&l.onFirstUpdate&&l.onFirstUpdate(b)});function p(){u.orderedModifiers.forEach(function(b){var E=b.name,v=b.options,w=v===void 0?{}:v,C=b.effect;if(typeof C=="function"){var D=C({state:u,name:E,instance:d,options:w}),x=function(){};h.push(D||x)}})}function g(){h.forEach(function(b){return b()}),h=[]}return d}}var Gv=[Pf,Ff,If,Rf],Nu=Hf({defaultModifiers:Gv});var _v=["*"];var $v=t=>({$implicit:t});var tE=["ngbNavOutlet",""];function eE(t,i){}function iE(t,i){if(t&1&&(N(0,"div",0),Et(1,eE,0,0,"ng-template",1),A()),t&2){let e=wt().$implicit,n=wt();Q("item",e)("nav",n.nav)("role",n.paneRole),W(),Q("ngTemplateOutlet",(e.contentTpl==null?null:e.contentTpl.templateRef)||null)("ngTemplateOutletContext",nr(5,$v,e.active||n.isPanelTransitioning(e)))}}function nE(t,i){if(t&1&&Et(0,iE,2,7,"div",0),t&2){let e=i.$implicit,n=wt();Nn(e.isPanelInDom()||n.isPanelTransitioning(e)?0:-1)}}function rE(t,i){if(t&1&&I(0),t&2){let e=wt(2);re(e.title)}}function oE(t,i){}function sE(t,i){if(t&1&&(N(0,"h3",2),Et(1,rE,1,1,"ng-template",null,0,Ed)(3,oE,0,0,"ng-template",4),A()),t&2){let e=Yi(2),n=wt();W(3),Q("ngTemplateOutlet",n.isTitleTemplate()?n.title:e)("ngTemplateOutletContext",n.context)}}var Xf={animation:!0,transitionTimerDelayMs:5},Yf=(()=>{class t{constructor(){this.animation=Xf.animation}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();function aE(t){let{transitionDelay:i,transitionDuration:e}=window.getComputedStyle(t),n=parseFloat(i),r=parseFloat(e);return(n+r)*1e3}function cE(t){return typeof t=="string"}function Ma(t){return t!=null}function lE(t,i){return!i||typeof t.closest>"u"?null:t.closest(i)}function uE(t){return(t||document.body).getBoundingClientRect()}function dE(t){return i=>new Kt(e=>{let n=s=>t.run(()=>e.next(s)),r=s=>t.run(()=>e.error(s)),o=()=>t.run(()=>e.complete());return i.subscribe({next:n,error:r,complete:o})})}var hE=()=>{},{transitionTimerDelayMs:fE}=Xf,Aa=new Map,Ra=(t,i,e,n)=>{let r=n.context||{},o=Aa.get(i);if(o)switch(n.runningTransition){case"continue":return Ve;case"stop":t.run(()=>o.transition$.complete()),r=Object.assign(o.context,r),Aa.delete(i)}let s=e(i,n.animation,r)||hE;if(!n.animation||window.getComputedStyle(i).transitionProperty==="none")return t.run(()=>s()),j(void 0).pipe(dE(t));let a=new tt,c=new tt,l=a.pipe(od(!0));Aa.set(i,{transition$:a,complete:()=>{c.next(),c.complete()},context:r});let u=aE(i);return t.runOutsideAngular(()=>{let h=He(i,"transitionend").pipe(Ct(l),kt(({target:d})=>d===i)),f=vs(u+fE).pipe(Ct(l));pc(f,h,c).pipe(Ct(l)).subscribe(()=>{Aa.delete(i),t.run(()=>{s(),a.next(),a.complete()})})}),a.asObservable()};var Na=(t,i)=>i?i.some(e=>e.contains(t)):!1,jf=(t,i)=>!i||lE(t,i)!=null,mE=(()=>{let t=()=>/iPad|iPhone|iPod/.test(navigator.userAgent)||/Macintosh/.test(navigator.userAgent)&&navigator.maxTouchPoints&&navigator.maxTouchPoints>2,i=()=>/Android/.test(navigator.userAgent);return typeof navigator<"u"?!!navigator.userAgent&&(t()||i()):!1})(),pE=t=>mE?()=>setTimeout(()=>t(),100):t;function gE(t,i,e,n,r,o,s,a){e&&t.runOutsideAngular(pE(()=>{let c=f=>{let d=f.target;return f.button===2||Na(d,s)?!1:e==="inside"?Na(d,o)&&jf(d,a):e==="outside"?!Na(d,o):jf(d,a)||!Na(d,o)},l=He(i,"keydown").pipe(Ct(r),kt(f=>f.key==="Escape"),It(f=>f.preventDefault())),u=He(i,"mousedown").pipe(q(c),Ct(r)),h=He(i,"mouseup").pipe(cd(u),kt(([f,d])=>d),rd(0),Ct(r));pc([l.pipe(q(f=>0)),h.pipe(q(f=>1))]).subscribe(f=>t.run(()=>n(f)))}))}var LM=["a[href]","button:not([disabled])",'input:not([disabled]):not([type="hidden"])',"select:not([disabled])","textarea:not([disabled])","[contenteditable]",'[tabindex]:not([tabindex="-1"])'].join(", ");var bE=(()=>{class t{constructor(){this._element=R(at).documentElement}isRTL(){return(this._element.getAttribute("dir")||"").toLowerCase()==="rtl"}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),vE=/\s+/,EE=/  +/gi,SE={top:["top"],bottom:["bottom"],start:["left","right"],left:["left"],end:["right","left"],right:["right"],"top-start":["top-start","top-end"],"top-left":["top-start"],"top-end":["top-end","top-start"],"top-right":["top-end"],"bottom-start":["bottom-start","bottom-end"],"bottom-left":["bottom-start"],"bottom-end":["bottom-end","bottom-start"],"bottom-right":["bottom-end"],"start-top":["left-start","right-start"],"left-top":["left-start"],"start-bottom":["left-end","right-end"],"left-bottom":["left-end"],"end-top":["right-start","left-start"],"right-top":["right-start"],"end-bottom":["right-end","left-end"],"right-bottom":["right-end"]};function CE(t,i){let[e,n]=SE[t];return i&&n||e}var wE=/^left/,TE=/^right/,DE=/^start/,xE=/^end/;function AE(t,i){let[e,n]=i.split("-"),r=e.replace(wE,"start").replace(TE,"end"),o=[r];if(n){let s=n;(e==="left"||e==="right")&&(s=s.replace(DE,"top").replace(xE,"bottom")),o.push(`${r}-${s}`)}return t&&(o=o.map(s=>`${t}-${s}`)),o.join(" ")}function Uf({placement:t,baseClass:i},e){let n=Array.isArray(t)?t:t.split(vE),r=["top","bottom","start","end","top-start","top-end","bottom-start","bottom-end","start-top","start-bottom","end-top","end-bottom"],o=n.findIndex(l=>l==="auto");o>=0&&r.forEach(function(l){n.find(u=>u.search("^"+l)!==-1)==null&&n.splice(o++,1,l)});let s=n.map(l=>CE(l,e.isRTL()));return{placement:s.shift(),modifiers:[{name:"bootstrapClasses",enabled:!!i,phase:"write",fn({state:l}){let u=new RegExp(i+"(-[a-z]+)*","gi"),h=l.elements.popper,f=l.placement,d=h.className;d=d.replace(u,""),d+=` ${AE(i,f)}`,d=d.trim().replace(EE," "),h.className=d}},bu,Su,hu,{enabled:!0,name:"flip",options:{fallbackPlacements:s}},{enabled:!0,name:"preventOverflow",phase:"main",fn:function(){}}]}}function Wf(t){return t}function NE(){let t=R(bE),i=null;return{createPopper(e){if(!i){let r=(e.updatePopperOptions||Wf)(Uf(e,t));i=Nu(e.hostElement,e.targetElement,r)}},update(){i&&i.update()},setOptions(e){if(i){let r=(e.updatePopperOptions||Wf)(Uf(e,t));i.setOptions(r)}},destroy(){i&&(i.destroy(),i=null)}}}function ME(t){return i=>(i.modifiers.push(vu,{name:"offset",options:{offset:()=>t}}),i)}var VM=new Date(1882,10,12),HM=new Date(2174,10,25);var jM=1e3*60*60*24;var Ru=1080,RE=24*Ru,yE=12*Ru+793,UM=29*RE+yE,WM=11*Ru+204;var ts=class{constructor(i,e,n){this.nodes=i,this.viewRef=e,this.componentRef=n}},Mu=class{constructor(i){this._componentType=i,this._windowRef=null,this._contentRef=null,this._document=R(at),this._applicationRef=R(rr),this._injector=R(ei),this._viewContainerRef=R(Ue),this._ngZone=R(lt)}open(i,e,n=!1){this._windowRef||(this._contentRef=this._getContentRef(i,e),this._windowRef=this._viewContainerRef.createComponent(this._componentType,{injector:this._injector,projectableNodes:this._contentRef.nodes}));let{nativeElement:r}=this._windowRef.location,o=new tt;tr(()=>{o.next(),o.complete()},{injector:this._injector,phase:xc.MixedReadWrite});let s=o.pipe(xe(()=>Ra(this._ngZone,r,({classList:a})=>a.add("show"),{animation:n,runningTransition:"continue"})));return{windowRef:this._windowRef,transition$:s}}close(i=!1){return this._windowRef?Ra(this._ngZone,this._windowRef.location.nativeElement,({classList:e})=>e.remove("show"),{animation:i,runningTransition:"stop"}).pipe(It(()=>{this._windowRef?.destroy(),this._contentRef?.viewRef?.destroy(),this._windowRef=null,this._contentRef=null})):j(void 0)}_getContentRef(i,e){if(i)if(i instanceof Ie){let n=i.createEmbeddedView(e);return this._applicationRef.attachView(n),new ts([n.rootNodes],n)}else return new ts([[this._document.createTextNode(`${i}`)]]);else return new ts([])}};var OE=(()=>{class t{constructor(){this._ngbConfig=R(Yf),this.destroyOnHide=!0,this.orientation="horizontal",this.roles="tablist",this.keyboard=!0}get animation(){return this._animation??this._ngbConfig.animation}set animation(e){this._animation=e}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),qf=t=>Ma(t)&&t!=="",kE=0,yu=(()=>{class t{constructor(){this.templateRef=R(Ie)}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275dir=it({type:t,selectors:[["ng-template","ngbNavContent",""]],standalone:!0})}}return t})(),Zf=(()=>{class t{constructor(e){this.role=e,this.nav=R(es)}static{this.\u0275fac=function(n){return new(n||t)(xn("role"))}}static{this.\u0275dir=it({type:t,selectors:[["","ngbNavItem","",5,"ng-container"]],hostVars:1,hostBindings:function(n,r){n&2&&Ee("role",r.role?r.role:r.nav.roles?"presentation":void 0)},standalone:!0})}}return t})(),ya=(()=>{class t{constructor(){this._nav=R(es),this._nativeElement=R(ft).nativeElement,this.disabled=!1,this.shown=new Y,this.hidden=new Y}ngOnInit(){Ma(this.domId)||(this.domId=`ngb-nav-${kE++}`)}get active(){return this._nav.activeId===this.id}get id(){return qf(this._id)?this._id:this.domId}get panelDomId(){return`${this.domId}-panel`}isPanelInDom(){return(Ma(this.destroyOnHide)?!this.destroyOnHide:!this._nav.destroyOnHide)||this.active}isNgContainer(){return this._nativeElement.nodeType===Node.COMMENT_NODE}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275dir=it({type:t,selectors:[["","ngbNavItem",""]],contentQueries:function(n,r,o){if(n&1&&Ei(o,yu,4),n&2){let s;Pt(s=Bt())&&(r.contentTpl=s.first)}},hostAttrs:[1,"nav-item"],inputs:{destroyOnHide:"destroyOnHide",disabled:"disabled",domId:"domId",_id:[0,"ngbNavItem","_id"]},outputs:{shown:"shown",hidden:"hidden"},exportAs:["ngbNavItem"],standalone:!0})}}return t})(),es=(()=>{class t{constructor(e){this.role=e,this._config=R(OE),this._cd=R(oe),this._document=R(at),this._nativeElement=R(ft).nativeElement,this.destroyRef=R(Es),this._navigatingWithKeyboard=!1,this.activeIdChange=new Y,this.animation=this._config.animation,this.destroyOnHide=this._config.destroyOnHide,this.orientation=this._config.orientation,this.roles=this._config.roles,this.keyboard=this._config.keyboard,this.shown=new Y,this.hidden=new Y,this.navItemChange$=new tt,this.navChange=new Y}click(e){e.disabled||this._updateActiveId(e.id)}onFocusout({relatedTarget:e}){this._nativeElement.contains(e)||(this._navigatingWithKeyboard=!1)}onKeyDown(e){if(this.roles!=="tablist"||!this.keyboard)return;let n=this.links.filter(s=>!s.navItem.disabled),{length:r}=n,o=-1;if(n.forEach((s,a)=>{s.nativeElement===this._document.activeElement&&(o=a)}),r){switch(e.key){case"ArrowUp":case"ArrowLeft":o=(o-1+r)%r;break;case"ArrowRight":case"ArrowDown":o=(o+1)%r;break;case"Home":o=0;break;case"End":o=r-1;break}this.keyboard==="changeWithArrows"&&this.select(n[o].navItem.id),n[o].nativeElement.focus(),this._navigatingWithKeyboard=!0,e.preventDefault()}}select(e){this._updateActiveId(e,!1)}ngAfterContentInit(){if(!Ma(this.activeId)){let e=this.items.first?this.items.first.id:null;qf(e)&&(this._updateActiveId(e,!1),this._cd.detectChanges())}this.items.changes.pipe(fa(this.destroyRef)).subscribe(()=>this._notifyItemChanged(this.activeId))}ngOnChanges({activeId:e}){e&&!e.firstChange&&this._notifyItemChanged(e.currentValue)}_updateActiveId(e,n=!0){if(this.activeId!==e){let r=!1;n&&this.navChange.emit({activeId:this.activeId,nextId:e,preventDefault:()=>{r=!0}}),r||(this.activeId=e,this.activeIdChange.emit(e),this._notifyItemChanged(e))}}_notifyItemChanged(e){this.navItemChange$.next(this._getItemById(e))}_getItemById(e){return this.items&&this.items.find(n=>n.id===e)||null}static{this.\u0275fac=function(n){return new(n||t)(xn("role"))}}static{this.\u0275dir=it({type:t,selectors:[["","ngbNav",""]],contentQueries:function(n,r,o){if(n&1&&(Ei(o,ya,4),Ei(o,Oa,5)),n&2){let s;Pt(s=Bt())&&(r.items=s),Pt(s=Bt())&&(r.links=s)}},hostAttrs:[1,"nav"],hostVars:4,hostBindings:function(n,r){n&1&&_("keydown.arrowLeft",function(s){return r.onKeyDown(s)})("keydown.arrowRight",function(s){return r.onKeyDown(s)})("keydown.arrowDown",function(s){return r.onKeyDown(s)})("keydown.arrowUp",function(s){return r.onKeyDown(s)})("keydown.Home",function(s){return r.onKeyDown(s)})("keydown.End",function(s){return r.onKeyDown(s)})("focusout",function(s){return r.onFocusout(s)}),n&2&&(Ee("aria-orientation",r.orientation==="vertical"&&r.roles==="tablist"?"vertical":void 0)("role",r.role?r.role:r.roles?"tablist":void 0),zt("flex-column",r.orientation==="vertical"))},inputs:{activeId:"activeId",animation:"animation",destroyOnHide:"destroyOnHide",orientation:"orientation",roles:"roles",keyboard:"keyboard"},outputs:{activeIdChange:"activeIdChange",shown:"shown",hidden:"hidden",navChange:"navChange"},exportAs:["ngbNav"],standalone:!0,features:[je]})}}return t})(),Oa=(()=>{class t{constructor(e){this.role=e,this.navItem=R(ya),this.nav=R(es),this.nativeElement=R(ft).nativeElement}get tabindex(){return this.nav.keyboard===!1?this.navItem.disabled?-1:void 0:this.nav._navigatingWithKeyboard||this.navItem.disabled||!this.navItem.active?-1:void 0}static{this.\u0275fac=function(n){return new(n||t)(xn("role"))}}static{this.\u0275dir=it({type:t,selectors:[["","ngbNavLink",""]],hostAttrs:[1,"nav-link"],hostVars:12,hostBindings:function(n,r){n&2&&(ir("id",r.navItem.domId),Ee("role",r.role?r.role:r.nav.roles?"tab":void 0)("tabindex",r.tabindex)("aria-controls",r.navItem.isPanelInDom()?r.navItem.panelDomId:null)("aria-selected",r.navItem.active)("aria-disabled",r.navItem.disabled),zt("nav-item",r.navItem.isNgContainer())("active",r.navItem.active)("disabled",r.navItem.disabled))},standalone:!0})}}return t})(),Jf=(()=>{class t extends Oa{static{this.\u0275fac=(()=>{let e;return function(r){return(e||(e=Ui(t)))(r||t)}})()}static{this.\u0275dir=it({type:t,selectors:[["button","ngbNavLink",""]],hostAttrs:["type","button"],hostVars:1,hostBindings:function(n,r){n&1&&_("click",function(){return r.nav.click(r.navItem)}),n&2&&ir("disabled",r.navItem.disabled)},standalone:!0,features:[de]})}}return t})();var IE=({classList:t})=>(t.remove("show"),()=>t.remove("active")),PE=(t,i)=>{i&&uE(t),t.classList.add("show")},zf=(()=>{class t{constructor(){this.nativeElement=R(ft).nativeElement}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275dir=it({type:t,selectors:[["","ngbNavPane",""]],hostAttrs:[1,"tab-pane"],hostVars:5,hostBindings:function(n,r){n&2&&(ir("id",r.item.panelDomId),Ee("role",r.role?r.role:r.nav.roles?"tabpanel":void 0)("aria-labelledby",r.item.domId),zt("fade",r.nav.animation))},inputs:{item:"item",nav:"nav",role:"role"},standalone:!0})}}return t})(),Qf=(()=>{class t{constructor(){this._cd=R(oe),this._ngZone=R(lt),this._activePane=null}isPanelTransitioning(e){return this._activePane?.item===e}ngAfterViewInit(){this._updateActivePane(),this.nav.navItemChange$.pipe(fa(this.nav.destroyRef),$e(this._activePane?.item||null),to(),ji(1)).subscribe(e=>{let n={animation:this.nav.animation,runningTransition:"stop"};this._cd.detectChanges(),this._activePane?Ra(this._ngZone,this._activePane.nativeElement,IE,n).subscribe(()=>{let r=this._activePane?.item;this._activePane=this._getPaneForItem(e),this._cd.markForCheck(),this._activePane&&(this._activePane.nativeElement.classList.add("active"),Ra(this._ngZone,this._activePane.nativeElement,PE,n).subscribe(()=>{e&&(e.shown.emit(),this.nav.shown.emit(e.id))})),r&&(r.hidden.emit(),this.nav.hidden.emit(r.id))}):this._updateActivePane()})}_updateActivePane(){this._activePane=this._getActivePane(),this._activePane?.nativeElement.classList.add("show","active")}_getPaneForItem(e){return this._panes&&this._panes.find(n=>n.item===e)||null}_getActivePane(){return this._panes&&this._panes.find(e=>e.item.active)||null}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275cmp=ot({type:t,selectors:[["","ngbNavOutlet",""]],viewQuery:function(n,r){if(n&1&&Ne(zf,5),n&2){let o;Pt(o=Bt())&&(r._panes=o)}},hostAttrs:[1,"tab-content"],inputs:{paneRole:"paneRole",nav:[0,"ngbNavOutlet","nav"]},standalone:!0,features:[st],attrs:tE,decls:2,vars:0,consts:[["ngbNavPane","",3,"item","nav","role"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(n,r){n&1&&ao(0,nE,1,1,null,null,so),n&2&&co(r.nav.items)},dependencies:[zf,Oc],encapsulation:2,changeDetection:0})}}return t})();var Kf=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275mod=Wt({type:t})}static{this.\u0275inj=Ut({})}}return t})();var BE={hover:["mouseenter","mouseleave"],focus:["focusin","focusout"]};function FE(t){let i=(t||"").trim();if(i.length===0)return[];let e=i.split(/\s+/).map(r=>r.split(":")).map(r=>BE[r[0]]||r),n=e.filter(r=>r.includes("manual"));if(n.length>1)throw"Triggers parse error: only one manual trigger is allowed";if(n.length===1&&e.length>1)throw"Triggers parse error: manual trigger can't be mixed with other triggers";return n.length?[]:e}function LE(t,i,e,n,r,o=0,s=0){let a=FE(i);if(a.length===0)return()=>{};let c=new Set,l=[],u;function h(d,p){t.addEventListener(d,p),l.push(()=>t.removeEventListener(d,p))}function f(d,p){clearTimeout(u),p>0?u=setTimeout(d,p):d()}for(let[d,p]of a)p?(h(d,()=>{c.add(d),f(()=>c.size>0&&n(),o)}),h(p,()=>{c.delete(d),f(()=>c.size===0&&r(),s)})):h(d,()=>e()?f(r,s):f(n,o));return()=>l.forEach(d=>d())}var VE=(()=>{class t{constructor(){this._ngbConfig=R(Yf),this.autoClose=!0,this.placement="auto",this.popperOptions=e=>e,this.triggers="click",this.disablePopover=!1,this.openDelay=0,this.closeDelay=0}get animation(){return this._animation??this._ngbConfig.animation}set animation(e){this._animation=e}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),HE=0,jE=(()=>{class t{isTitleTemplate(){return this.title instanceof Ie}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275cmp=ot({type:t,selectors:[["ngb-popover-window"]],hostAttrs:["role","tooltip",2,"position","absolute"],hostVars:5,hostBindings:function(n,r){n&2&&(ir("id",r.id),er("popover"+(r.popoverClass?" "+r.popoverClass:"")),zt("fade",r.animation))},inputs:{animation:"animation",title:"title",id:"id",popoverClass:"popoverClass",context:"context"},standalone:!0,features:[st],ngContentSelectors:_v,decls:4,vars:1,consts:[["simpleTitle",""],["data-popper-arrow","",1,"popover-arrow"],[1,"popover-header"],[1,"popover-body"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(n,r){n&1&&(zi(),Rt(0,"div",1),Et(1,sE,4,2,"h3",2),N(2,"div",3),Xi(3),A()),n&2&&(W(),Nn(r.title?1:-1))},dependencies:[Oc],encapsulation:2,changeDetection:0})}}return t})(),Gf=(()=>{class t{constructor(){this._config=R(VE),this.animation=this._config.animation,this.autoClose=this._config.autoClose,this.placement=this._config.placement,this.popperOptions=this._config.popperOptions,this.triggers=this._config.triggers,this.container=this._config.container,this.disablePopover=this._config.disablePopover,this.popoverClass=this._config.popoverClass,this.openDelay=this._config.openDelay,this.closeDelay=this._config.closeDelay,this.shown=new Y,this.hidden=new Y,this._nativeElement=R(ft).nativeElement,this._ngZone=R(lt),this._document=R(at),this._changeDetector=R(oe),this._injector=R(ei),this._ngbPopoverWindowId=`ngb-popover-${HE++}`,this._popupService=new Mu(jE),this._windowRef=null,this._positioning=NE()}open(e){if(!this._windowRef&&!this._isDisabled()){let{windowRef:n,transition$:r}=this._popupService.open(this.ngbPopover,e??this.popoverContext,this.animation);this._windowRef=n,this._windowRef.setInput("animation",this.animation),this._windowRef.setInput("title",this.popoverTitle),this._windowRef.setInput("context",e??this.popoverContext),this._windowRef.setInput("popoverClass",this.popoverClass),this._windowRef.setInput("id",this._ngbPopoverWindowId),this._getPositionTargetElement().setAttribute("aria-describedby",this._ngbPopoverWindowId),this.container==="body"&&this._document.body.appendChild(this._windowRef.location.nativeElement),this._windowRef.changeDetectorRef.detectChanges(),this._windowRef.changeDetectorRef.markForCheck(),this._ngZone.runOutsideAngular(()=>{this._positioning.createPopper({hostElement:this._getPositionTargetElement(),targetElement:this._windowRef.location.nativeElement,placement:this.placement,baseClass:"bs-popover",updatePopperOptions:o=>this.popperOptions(ME([0,8])(o))}),Promise.resolve().then(()=>{this._positioning.update()}),this._afterRenderRef=vd(()=>{this._positioning.update()},{phase:xc.MixedReadWrite,injector:this._injector})}),gE(this._ngZone,this._document,this.autoClose,()=>this.close(),this.hidden,[this._windowRef.location.nativeElement]),r.subscribe(()=>this.shown.emit())}}close(e=this.animation){this._windowRef&&(this._getPositionTargetElement().removeAttribute("aria-describedby"),this._popupService.close(e).subscribe(()=>{this._windowRef=null,this._positioning.destroy(),this._afterRenderRef?.destroy(),this.hidden.emit(),this._changeDetector.markForCheck()}))}toggle(){this._windowRef?this.close():this.open()}isOpen(){return this._windowRef!=null}ngOnInit(){this._unregisterListenersFn=LE(this._nativeElement,this.triggers,this.isOpen.bind(this),this.open.bind(this),this.close.bind(this),+this.openDelay,+this.closeDelay)}ngOnChanges({ngbPopover:e,popoverTitle:n,disablePopover:r,popoverClass:o}){o&&this.isOpen()&&this._windowRef.setInput("popoverClass",o.currentValue),(e||n||r)&&this._isDisabled()&&this.close()}ngOnDestroy(){this.close(!1),this._unregisterListenersFn?.()}_isDisabled(){return this.disablePopover?!0:!this.ngbPopover&&!this.popoverTitle}_getPositionTargetElement(){return(cE(this.positionTarget)?this._document.querySelector(this.positionTarget):this.positionTarget)||this._nativeElement}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275dir=it({type:t,selectors:[["","ngbPopover",""]],inputs:{animation:"animation",autoClose:"autoClose",ngbPopover:"ngbPopover",popoverTitle:"popoverTitle",placement:"placement",popperOptions:"popperOptions",triggers:"triggers",positionTarget:"positionTarget",container:"container",disablePopover:"disablePopover",popoverClass:"popoverClass",popoverContext:"popoverContext",openDelay:"openDelay",closeDelay:"closeDelay"},outputs:{shown:"shown",hidden:"hidden"},exportAs:["ngbPopover"],standalone:!0,features:[je]})}}return t})();var zM=new Z("live announcer delay",{providedIn:"root",factory:()=>100});var S=class extends Error{constructor(i,e=""){super("[RuntimeError] "+i+": "+e),this.code=i}};function Xn(){return typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:Function("return this")()}function $(t,i="undefined",e=""){if(t===void 0)throw new S(i,e);return t}function J(t,...i){if(!i)return;let e=Array.prototype.slice.call(i).join(" ");Xn().console.log(t+": "+e)}function _f(...t){let i=t.join(" "),e=new Error;Xn().console.log("Warning: ",i,e.stack)}function WE(t,i){return t%i>=i/2?parseInt(`${t/i}`,10)*i+i:parseInt(`${t/i}`,10)*i}function is(t,i){let e=i+(t-i)/2;return e%2>0&&(e=WE(e*10,5)/10),e}function ns(t){return`vf-${t}`}function Ou(t){return t=t%(2*Math.PI),t<0&&(t+=2*Math.PI),t}function on(t){return t.reduce((i,e)=>i+e,0)}var rt=class t{static get CATEGORY(){return"Fraction"}static GCD(i,e){if(typeof i!="number"||Number.isNaN(i)||typeof e!="number"||Number.isNaN(e))throw new S("BadArgument",`Invalid numbers: ${i}, ${e}`);let n;for(;e!==0;)n=e,e=i%e,i=n;return i}static LCM(i,e){return i*e/t.GCD(i,e)}static LCMM(i){return i.length===0?0:i.length===1?i[0]:i.length===2?t.LCM(i[0],i[1]):t.LCM(i.shift(),t.LCMM(i))}constructor(i,e){this.numerator=1,this.denominator=1,this.set(i,e)}set(i=1,e=1){return this.numerator=i,this.denominator=e,this}value(){return this.numerator/this.denominator}simplify(){let i=this.numerator,e=this.denominator,n=t.GCD(i,e);return i/=n,e/=n,e<0&&(e=-e,i=-i),this.set(i,e)}add(i=0,e=1){let[n,r]=ka(i,e),o=t.LCM(this.denominator,r),s=o/this.denominator,a=o/r,c=this.numerator*s+n*a;return this.set(c,o)}subtract(i=0,e=1){let[n,r]=ka(i,e),o=t.LCM(this.denominator,r),s=o/this.denominator,a=o/r,c=this.numerator*s-n*a;return this.set(c,o)}multiply(i=1,e=1){let[n,r]=ka(i,e);return this.set(this.numerator*n,this.denominator*r)}divide(i=1,e=1){let[n,r]=ka(i,e);return this.set(this.numerator*r,this.denominator*n)}equals(i){let e=t.fractionA.copy(i).simplify(),n=t.fractionB.copy(this).simplify();return e.numerator===n.numerator&&e.denominator===n.denominator}greaterThan(i){let e=t.fractionA.copy(this);return e.subtract(i),e.numerator>0}greaterThanEquals(i){let e=t.fractionA.copy(this);return e.subtract(i),e.numerator>=0}lessThan(i){return!this.greaterThanEquals(i)}lessThanEquals(i){return!this.greaterThan(i)}clone(){return new t(this.numerator,this.denominator)}copy(i){return typeof i=="number"?this.set(i):this.set(i.numerator,i.denominator)}quotient(){return Math.floor(this.numerator/this.denominator)}remainder(){return this.numerator%this.denominator}makeAbs(){return this.denominator=Math.abs(this.denominator),this.numerator=Math.abs(this.numerator),this}toString(){return`${this.numerator}/${this.denominator}`}toSimplifiedString(){return t.fractionA.copy(this).simplify().toString()}toMixedString(){let i="",e=this.quotient(),n=t.fractionA.copy(this);return e<0&&n.makeAbs(),e!==0?(i+=e,n.numerator!==0&&(i+=` ${n.toSimplifiedString()}`)):n.numerator===0?i="0":i=n.toSimplifiedString(),i}parse(i){let e=i.split("/"),n=parseInt(e[0],10),r=e[1]?parseInt(e[1],10):1;return this.set(n,r)}};rt.fractionA=new rt;rt.fractionB=new rt;function ka(t,i=1){return typeof t=="number"?[t,i]:[t.numerator,t.denominator]}var O=class t{static clear(i){i?(this.cacheFont.delete(i),this.cacheStyle.delete(i)):(this.cacheFont.clear(),this.cacheStyle.clear())}static getFontInfo(i){let e=this.cacheFont.get(i);return e||(e={family:t.get(`${i}.fontFamily`),size:t.get(`${i}.fontSize`)*t.get(`${i}.fontScale`),weight:t.get(`${i}.fontWeight`),style:t.get(`${i}.fontStyle`)},this.cacheFont.set(i,e)),structuredClone(e)}static getStyle(i){let e=this.cacheStyle.get(i);return e||(e={fillStyle:t.get(`${i}.fillStyle`),strokeStyle:t.get(`${i}.strokeStyle`),lineWidth:t.get(`${i}.lineWidth`),lineDash:t.get(`${i}.lineDash`),shadowBlur:t.get(`${i}.shadowBlur`),shadowColor:t.get(`${i}.shadowColor`)},this.cacheStyle.set(i,e)),structuredClone(e)}static get(i,e){var n;let r=i.split("."),o=r.pop(),s=Rr,a=e;for(;s;){a=(n=s[o])!==null&&n!==void 0?n:a;let c=r.shift();if(c)s=s[c];else break}return a}};O.cacheStyle=new Map;O.cacheFont=new Map;var Rr={fontFamily:"Bravura,Academico",fontSize:30,fontScale:1,fontWeight:"normal",fontStyle:"normal",Accidental:{cautionary:{fontSize:20},grace:{fontSize:20},noteheadAccidentalPadding:1,leftPadding:2,accidentalSpacing:3},Annotation:{fontSize:10},Bend:{fontSize:10,line:{strokeStyle:"#777777",lineWidth:1}},ChordSymbol:{fontSize:12,spacing:.05,subscriptOffset:.2,superscriptOffset:-.4,superSubRatio:.6},FretHandFinger:{fontSize:9,fontWeight:"bold"},GraceNote:{fontScale:2/3},GraceTabNote:{fontScale:2/3},NoteHead:{minPadding:2},PedalMarking:{text:{fontSize:12,fontStyle:"italic"}},Repetition:{text:{fontSize:12,fontWeight:"bold",offsetX:12,offsetY:25,spacing:5},coda:{offsetY:25},segno:{offsetY:10}},Stave:{strokeStyle:"#999999",fontSize:8,padding:12,endPaddingMax:10,endPaddingMin:5,unalignedNotePadding:10},StaveConnector:{text:{fontSize:16}},StaveLine:{fontSize:10},StaveSection:{fontSize:10,fontWeight:"bold",lineWidth:2,padding:2,strokeStyle:"black"},StaveTempo:{fontSize:14,glyph:{fontSize:25},name:{fontWeight:"bold"}},StaveText:{fontSize:16},StaveTie:{fontSize:10},Stem:{strokeStyle:"black"},StringNumber:{fontSize:10,fontWeight:"bold",verticalPadding:8,stemPadding:2,leftPadding:5,rightPadding:6},Stroke:{text:{fontSize:10,fontStyle:"italic",fontWeight:"bold"}},TabNote:{text:{fontSize:9}},TabSlide:{fontSize:10,fontStyle:"italic",fontWeight:"bold"},TabStave:{strokeStyle:"#999999",fontSize:8},TabTie:{fontSize:10},TextBracket:{fontSize:15,fontStyle:"italic"},TextNote:{text:{fontSize:12}},Tremolo:{spacing:7},Tuplet:{yOffset:0,textYOffset:2},Volta:{fontSize:9,fontWeight:"bold"}};var Ce=class t{static copy(i){return new t(i.x,i.y,i.w,i.h)}constructor(i,e,n,r){this.x=i,this.y=e,this.w=n,this.h=r}getX(){return this.x}getY(){return this.y}getW(){return this.w}getH(){return this.h}setX(i){return this.x=i,this}setY(i){return this.y=i,this}setW(i){return this.w=i,this}setH(i){return this.h=i,this}move(i,e){return this.x+=i,this.y+=e,this}clone(){return t.copy(this)}mergeWith(i){let e=i,n=this.x<e.x?this.x:e.x,r=this.y<e.y?this.y:e.y,o=Math.max(this.x+this.w,e.x+e.w)-n,s=Math.max(this.y+this.h,e.y+e.h)-r;return this.x=n,this.y=r,this.w=o,this.h=s,this}};var zE=function(t,i,e,n){function r(o){return o instanceof e?o:new e(function(s){s(o)})}return new(e||(e=Promise))(function(o,s){function a(u){try{l(n.next(u))}catch(h){s(h)}}function c(u){try{l(n.throw(u))}catch(h){s(h)}}function l(u){u.done?o(u.value):r(u.value).then(a,c)}l((n=n.apply(t,i||[])).next())})},sn=function(t){return t.NORMAL="normal",t.BOLD="bold",t}(sn||{}),Ii=function(t){return t.NORMAL="normal",t.ITALIC="italic",t}(Ii||{}),Ia,G=(()=>{class t{static convertSizeToPixelValue(e){var n;if(typeof e=="number")return e*t.scaleToPxFrom.pt;{let r=parseFloat(e);if(isNaN(r))return 0;let o=e.replace(/[\d.\s]/g,"").toLowerCase(),s=(n=t.scaleToPxFrom[o])!==null&&n!==void 0?n:1;return r*s}}static convertSizeToPointValue(e){var n;if(typeof e=="number")return e;{let r=parseFloat(e);if(isNaN(r))return 0;let o=e.replace(/[\d.\s]/g,"").toLowerCase(),s=((n=t.scaleToPxFrom[o])!==null&&n!==void 0?n:1)/t.scaleToPxFrom.pt;return r*s}}static validate(e,n,r,o){if(typeof e=="string"&&n===void 0&&r===void 0&&o===void 0)return t.fromCSSString(e);let s;return typeof e=="object"?(s=e.family,n=e.size,r=e.weight,o=e.style):s=e,s=s??O.get("fontFamily"),n=n??O.get("fontSize")+"pt",r=r??sn.NORMAL,o=o??Ii.NORMAL,r===""&&(r=sn.NORMAL),o===""&&(o=Ii.NORMAL),typeof n=="number"&&(n=`${n}pt`),typeof r=="number"&&(r=r.toString()),{family:s,size:n,weight:r,style:o}}static fromCSSString(e){Ia||(Ia=document.createElement("span")),Ia.style.font=e;let{fontFamily:n,fontSize:r,fontWeight:o,fontStyle:s}=Ia.style;return{family:n,size:r,weight:o,style:s}}static toCSSString(e){var n;if(!e)return"";let r,o=e.style;o===Ii.NORMAL||o===""||o===void 0?r="":r=o.trim()+" ";let s,a=e.weight;a===sn.NORMAL||a===""||a===void 0?s="":typeof a=="number"?s=a+" ":s=a.trim()+" ";let c,l=e.size;l===void 0?c=O.get("fontSize")+"pt":typeof l=="number"?c=l+"pt ":c=l.trim()+" ";let u=(n=e.family)!==null&&n!==void 0?n:O.get("fontFamily");return`${r}${s}${c}${u}`}static scaleSize(e,n){if(typeof e=="number")return e*n;{let r=parseFloat(e),o=e.replace(/[\d.\s]/g,"");return`${r*n}${o}`}}static isBold(e){if(e){if(typeof e=="number")return e>=600;{let n=parseInt(e,10);return isNaN(n)?e.toLowerCase()==="bold":n>=600}}else return!1}static isItalic(e){return e?e.toLowerCase()===Ii.ITALIC:!1}static load(e,n,r){return zE(this,void 0,void 0,function*(){if(typeof FontFace>"u")return Promise.reject(new Error("FontFace API is not available in this environment. Cannot load fonts."));if(n===void 0){let c=t.FILES;if(!(e in c))return Promise.reject(new Error(`Font ${e} not found in Font.FILES`));n=t.HOST_URL+c[e]}let o=new FontFace(e,`url(${n})`,r),s=o.load(),a;return typeof document<"u"?a=document.fonts:typeof self<"u"&&"fonts"in self&&(a=self.fonts),a?.add(o),s})}static getURLForFont(e){let n=t.FILES;if(e in n)return t.HOST_URL+n[e]}}return t.scaleToPxFrom={pt:4/3,px:1,em:16,"%":4/25,in:96,mm:96/25.4,cm:96/2.54},t.HOST_URL="https://cdn.jsdelivr.net/npm/@vexflow-fonts/",t.FILES={Academico:"academico/academico.woff2",Bravura:"bravura/bravura.woff2","Bravura Text":"bravuratext/bravuratext.woff2",Edwin:"edwin/edwin-roman.woff2","Finale Ash":"finaleash/finaleash.woff2","Finale Ash Text":"finaleashtext/finaleashtext.woff2","Finale Broadway":"finalebroadway/finalebroadway.woff2","Finale Broadway Text":"finalebroadwaytext/finalebroadwaytext.woff2","Finale Jazz":"finalejazz/finalejazz.woff2","Finale Jazz Text":"finalejazztext/finalejazztext.woff2","Finale Maestro":"finalemaestro/finalemaestro.woff2","Finale Maestro Text":"finalemaestrotext/finalemaestrotext-regular.woff2",Gonville:"gonville/gonville.woff2",Gootville:"gootville/gootville.woff2","Gootville Text":"gootvilletext/gootvilletext.woff2",Leipzig:"leipzig/leipzig.woff2",Leland:"leland/leland.woff2","Leland Text":"lelandtext/lelandtext.woff2",MuseJazz:"musejazz/musejazz.woff2","MuseJazz Text":"musejazztext/musejazztext.woff2",Nepomuk:"nepomuk/nepomuk.woff2",Petaluma:"petaluma/petaluma.woff2","Petaluma Script":"petalumascript/petalumascript.woff2","Petaluma Text":"petalumatext/petalumatext.woff2","Roboto Slab":"robotoslab/robotoslab-regular-400.woff2",Sebastian:"sebastian/sebastian.woff2","Sebastian Text":"sebastiantext/sebastiantext.woff2"},t})();var Pa=class{constructor(){this.id={},this.type={},this.class={}}},yr=class t{static getDefaultRegistry(){return t.defaultRegistry}static enableDefaultRegistry(i){t.defaultRegistry=i}static disableDefaultRegistry(){t.defaultRegistry=void 0}constructor(){this.index=new Pa}clear(){return this.index=new Pa,this}setIndexValue(i,e,n,r){let o=this.index;o[i][e]||(o[i][e]={}),o[i][e][n]=r}updateIndex({id:i,name:e,value:n,oldValue:r}){let o=this.getElementById(i);r!==void 0&&this.index[e][r]&&delete this.index[e][r][i],n&&o&&this.setIndexValue(e,n,o.getAttribute("id"),o)}register(i,e){if(e=e||i.getAttribute("id"),!e)throw new S("Can't add element without `id` attribute to registry");return i.setAttribute("id",e),this.setIndexValue("id",e,e,i),this.updateIndex({id:e,name:"type",value:i.getAttribute("type"),oldValue:void 0}),i.onRegister(this),this}getElementById(i){var e,n;return(n=(e=this.index.id)===null||e===void 0?void 0:e[i])===null||n===void 0?void 0:n[i]}getElementsByAttribute(i,e){let n=this.index[i];if(n){let r=n[e];if(r)return Object.keys(r).map(s=>r[s])}return[]}getElementsByType(i){return this.getElementsByAttribute("type",i)}getElementsByClass(i){return this.getElementsByAttribute("class",i)}onUpdate(i){return["id","type","class"].includes(i.name)&&this.updateIndex(i),this}};var L=(()=>{class t{static get CATEGORY(){return"Element"}static newID(){return`auto${t.ID++}`}static setTextMeasurementCanvas(e){t.txtCanvas=e}static getTextMeasurementCanvas(){let e=t.txtCanvas;return e||(typeof document<"u"?e=document.createElement("canvas"):typeof OffscreenCanvas<"u"&&(e=new OffscreenCanvas(300,150)),t.txtCanvas=e),e}constructor(e){var n;this.children=[],this.style={},this._text="",this.metricsValid=!1,this._textMetrics={fontBoundingBoxAscent:0,fontBoundingBoxDescent:0,actualBoundingBoxAscent:0,actualBoundingBoxDescent:0,actualBoundingBoxLeft:0,actualBoundingBoxRight:0,width:0,alphabeticBaseline:0,emHeightAscent:0,emHeightDescent:0,hangingBaseline:0,ideographicBaseline:0},this._height=0,this._width=0,this.xShift=0,this.yShift=0,this.x=0,this.y=0,this.attrs={id:t.newID(),type:e??this.constructor.CATEGORY,class:""},this.rendered=!1,this._fontInfo=O.getFontInfo(this.attrs.type),this.style=O.getStyle(this.attrs.type),this.fontScale=O.get(`${this.attrs.type}.fontScale`),(n=yr.getDefaultRegistry())===null||n===void 0||n.register(this)}addChild(e){if(e.parent)throw new S("Element","Parent already defined");return e.parent=this,this.children.push(e),this}getCategory(){return this.attrs.type}setStyle(e){return this.style=e,this}setGroupStyle(e){return this.style=e,this.children.forEach(n=>n.setGroupStyle(e)),this}getStyle(){return this.style}applyStyle(e=this.context,n=this.getStyle()){return e?(n.shadowColor&&e.setShadowColor(n.shadowColor),n.shadowBlur&&e.setShadowBlur(n.shadowBlur),n.fillStyle&&e.setFillStyle(n.fillStyle),n.strokeStyle&&e.setStrokeStyle(n.strokeStyle),n.lineWidth&&e.setLineWidth(n.lineWidth),n.lineDash&&e.setLineDash(n.lineDash.split(" ").map(Number)),this):this}drawWithStyle(){let e=this.checkContext();return e.save(),this.applyStyle(e),this.draw(),e.restore(),this}draw(){throw new S("Element","Draw not defined")}hasClass(e){var n;return this.attrs.class?((n=this.attrs.class)===null||n===void 0?void 0:n.split(" ").indexOf(e))!==-1:!1}addClass(e){var n;return this.hasClass(e)?this:(this.attrs.class?this.attrs.class=`${this.attrs.class} ${e}`:this.attrs.class=`${e}`,(n=this.registry)===null||n===void 0||n.onUpdate({id:this.attrs.id,name:"class",value:e,oldValue:void 0}),this)}removeClass(e){var n,r;if(!this.hasClass(e))return this;let o=(n=this.attrs.class)===null||n===void 0?void 0:n.split(" ");return o&&(o.splice(o.indexOf(e)),this.attrs.class=o.join(" ")),(r=this.registry)===null||r===void 0||r.onUpdate({id:this.attrs.id,name:"class",value:void 0,oldValue:e}),this}onRegister(e){return this.registry=e,this}isRendered(){return this.rendered}setRendered(e=!0){return this.rendered=e,this}getAttributes(){return this.attrs}getAttribute(e){return this.attrs[e]}getSVGElement(e=""){let n=ns(this.attrs.id+e),r=document.getElementById(n);if(r)return r}setAttribute(e,n){var r;let o=this.attrs.id,s=this.attrs[e];return this.attrs[e]=n,(r=this.registry)===null||r===void 0||r.onUpdate({id:o,name:e,value:n,oldValue:s}),this}getBoundingBox(){return new Ce(this.x+this.xShift,this.y+this.yShift-this.textMetrics.actualBoundingBoxAscent,this.width,this.height)}getContext(){return this.context}setContext(e){return this.context=e,this}checkContext(){return $(this.context,"NoContext","No rendering context attached to instance.")}set font(e){this.setFont(e)}get font(){return G.toCSSString(this._fontInfo)}setFont(e,n,r,o){let s=O.getFontInfo(this.attrs.type),a=typeof e=="object",c=typeof e=="string",l=n===void 0&&r===void 0&&o===void 0;return this.metricsValid=!1,a?this._fontInfo=Object.assign(Object.assign({},s),e):c&&l?this._fontInfo=G.fromCSSString(e):this._fontInfo=G.validate(e??s.family,n??s.size,r??s.weight,o??s.style),this}getFont(){return G.toCSSString(this._fontInfo)}get fontInfo(){return this._fontInfo}set fontInfo(e){this.setFont(e)}setFontSize(e){let n=this.fontInfo;return this.setFont(n.family,e,n.weight,n.style),this}getFontSize(){return this.fontSize}getFontScale(){return this.fontScale}set fontSize(e){this.setFontSize(e)}get fontSize(){let e=this.fontInfo.size;return typeof e=="number"&&(e=`${e}pt`),e}get fontSizeInPoints(){return G.convertSizeToPointValue(this.fontSize)}get fontSizeInPixels(){return G.convertSizeToPixelValue(this.fontSize)}get fontStyle(){return this.fontInfo.style}set fontStyle(e){let n=this.fontInfo;this.setFont(n.family,n.size,n.weight,e)}get fontWeight(){return this.fontInfo.weight+""}set fontWeight(e){let n=this.fontInfo;this.setFont(n.family,n.size,e,n.style)}getWidth(){return this.width}get width(){return this.metricsValid||this.measureText(),this._width}setWidth(e){return this.width=e,this}set width(e){this.metricsValid||this.measureText(),this._width=e}setX(e){return this.x=e,this}getX(){return this.x}getY(){return this.y}setY(e){return this.y=e,this}setYShift(e){return this.yShift=e,this}getYShift(){return this.yShift}setXShift(e){return this.xShift=e,this}getXShift(){return this.xShift}setText(e){return this.text=e,this}set text(e){this.metricsValid=!1,this._text=e}getText(){return this._text}get text(){return this._text}renderText(e,n,r){e.setFont(this._fontInfo),e.fillText(this._text,n+this.x+this.xShift,r+this.y+this.yShift),this.children.forEach(o=>{e.setFont(o.fontInfo),e.fillText(o.text,n+o.x+o.xShift,r+o.y+o.yShift)})}measureText(){var e;let n=(e=t.getTextMeasurementCanvas())===null||e===void 0?void 0:e.getContext("2d");return n?(n.font=G.toCSSString(G.validate(this.fontInfo)),this._textMetrics=n.measureText(this.text),this._height=this._textMetrics.actualBoundingBoxAscent+this._textMetrics.actualBoundingBoxDescent,this._width=this._textMetrics.width,this.metricsValid=!0,this._textMetrics):(console.warn("Element: No context for txtCanvas. Returning empty text metrics."),this._textMetrics)}static measureWidth(e,n=""){var r;let o=(r=t.getTextMeasurementCanvas())===null||r===void 0?void 0:r.getContext("2d");return o?(o.font=G.toCSSString(O.getFontInfo(n)),o.measureText(e).width):(console.warn("Element: No context for txtCanvas. Returning empty text metrics."),0)}getTextMetrics(){return this.textMetrics}get textMetrics(){return this.metricsValid||this.measureText(),this._textMetrics}getHeight(){return this.height}get height(){return this.metricsValid||this.measureText(),this._height}set height(e){this.metricsValid||this.measureText(),this._height=e}setOriginX(e){let n=this.getBoundingBox(),r=Math.abs((n.getX()-this.xShift)/n.getW()),o=(e-r)*n.getW();this.xShift=-o}setOriginY(e){let n=this.getBoundingBox(),r=Math.abs((n.getY()-this.yShift)/n.getH()),o=(e-r)*n.getH();this.yShift=-o}setOrigin(e,n){this.setOriginX(e),this.setOriginY(n)}}return t.ID=1e3,t})();var ut=function(t){return t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t[t.ABOVE=3]="ABOVE",t[t.BELOW=4]="BELOW",t}(ut||{}),B=class t extends L{static get CATEGORY(){return"Modifier"}static get Position(){return ut}static get PositionString(){return{center:ut.CENTER,above:ut.ABOVE,below:ut.BELOW,left:ut.LEFT,right:ut.RIGHT}}constructor(){super(),this.width=0,this.textLine=0,this.position=t.Position.LEFT,this.spacingFromNextModifier=0}reset(){}getNote(){return $(this.note,"NoNote","Modifier has no note.")}checkAttachedNote(){let i=this.getCategory();return $(this.index,"NoIndex",`Can't draw ${i} without an index.`),$(this.note,"NoNote",`Can't draw ${i} without a note.`)}setNote(i){return this.note=i,this}getIndex(){return this.index}checkIndex(){return $(this.index,"NoIndex","Modifier has an invalid index.")}setIndex(i){return this.index=i,this}getModifierContext(){return this.modifierContext}checkModifierContext(){return $(this.modifierContext,"NoModifierContext","Modifier Context Required")}setModifierContext(i){return this.modifierContext=i,this}getPosition(){return this.position}setPosition(i){return this.position=typeof i=="string"?t.PositionString[i]:i,this.reset(),this}setTextLine(i){return this.textLine=i,this}setYShift(i){return this.yShift=i,this}setSpacingFromNextModifier(i){this.spacingFromNextModifier=i}getSpacingFromNextModifier(){return this.spacingFromNextModifier}setXShift(i){return this.xShift=0,this.position===t.Position.LEFT?this.xShift-=i:this.xShift+=i,this}getXShift(){return this.xShift}draw(){throw this.checkContext(),new S("NotImplemented","draw() not implemented for this modifier.")}alignSubNotesWithNote(i,e,n=t.Position.LEFT){let r=e.getTickContext(),o=r.getMetrics(),s=e.getStave(),a=n===t.Position.RIGHT?r.getX()+this.getSpacingFromNextModifier()*i.length+10:r.getX()-o.modLeftPx-o.modRightPx+this.getSpacingFromNextModifier();i.forEach(c=>{let l=c.getTickContext();s&&c.setStave(s),l.setXOffset(a)})}};var he=class t{static get NUM_TONES(){return this.canonicalNotes.length}static get roots(){return["c","d","e","f","g","a","b"]}static get rootValues(){return[0,2,4,5,7,9,11]}static get rootIndexes(){return{c:0,d:1,e:2,f:3,g:4,a:5,b:6}}static get canonicalNotes(){return["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"]}static get diatonicIntervals(){return["unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave"]}static get diatonicAccidentals(){return{unison:{note:0,accidental:0},m2:{note:1,accidental:-1},M2:{note:1,accidental:0},m3:{note:2,accidental:-1},M3:{note:2,accidental:0},p4:{note:3,accidental:0},dim5:{note:4,accidental:-1},p5:{note:4,accidental:0},m6:{note:5,accidental:-1},M6:{note:5,accidental:0},b7:{note:6,accidental:-1},M7:{note:6,accidental:0},octave:{note:7,accidental:0}}}static get intervals(){return{u:0,unison:0,m2:1,b2:1,min2:1,S:1,H:1,2:2,M2:2,maj2:2,T:2,W:2,m3:3,b3:3,min3:3,M3:4,3:4,maj3:4,4:5,p4:5,"#4":6,b5:6,aug4:6,dim5:6,5:7,p5:7,"#5":8,b6:8,aug5:8,6:9,M6:9,maj6:9,b7:10,m7:10,min7:10,dom7:10,M7:11,maj7:11,8:12,octave:12}}static get scales(){return{major:[2,2,1,2,2,2,1],minor:[2,1,2,2,1,2,2],ionian:[2,2,1,2,2,2,1],dorian:[2,1,2,2,2,1,2],phyrgian:[1,2,2,2,1,2,2],lydian:[2,2,2,1,2,2,1],mixolydian:[2,2,1,2,2,1,2],aeolian:[2,1,2,2,1,2,2],locrian:[1,2,2,1,2,2,2]}}static get scaleTypes(){return{M:t.scales.major,m:t.scales.minor}}static get accidentals(){return["bb","b","n","#","##"]}static get noteValues(){return{c:{rootIndex:0,intVal:0},cn:{rootIndex:0,intVal:0},"c#":{rootIndex:0,intVal:1},"c##":{rootIndex:0,intVal:2},cb:{rootIndex:0,intVal:11},cbb:{rootIndex:0,intVal:10},d:{rootIndex:1,intVal:2},dn:{rootIndex:1,intVal:2},"d#":{rootIndex:1,intVal:3},"d##":{rootIndex:1,intVal:4},db:{rootIndex:1,intVal:1},dbb:{rootIndex:1,intVal:0},e:{rootIndex:2,intVal:4},en:{rootIndex:2,intVal:4},"e#":{rootIndex:2,intVal:5},"e##":{rootIndex:2,intVal:6},eb:{rootIndex:2,intVal:3},ebb:{rootIndex:2,intVal:2},f:{rootIndex:3,intVal:5},fn:{rootIndex:3,intVal:5},"f#":{rootIndex:3,intVal:6},"f##":{rootIndex:3,intVal:7},fb:{rootIndex:3,intVal:4},fbb:{rootIndex:3,intVal:3},g:{rootIndex:4,intVal:7},gn:{rootIndex:4,intVal:7},"g#":{rootIndex:4,intVal:8},"g##":{rootIndex:4,intVal:9},gb:{rootIndex:4,intVal:6},gbb:{rootIndex:4,intVal:5},a:{rootIndex:5,intVal:9},an:{rootIndex:5,intVal:9},"a#":{rootIndex:5,intVal:10},"a##":{rootIndex:5,intVal:11},ab:{rootIndex:5,intVal:8},abb:{rootIndex:5,intVal:7},b:{rootIndex:6,intVal:11},bn:{rootIndex:6,intVal:11},"b#":{rootIndex:6,intVal:0},"b##":{rootIndex:6,intVal:1},bb:{rootIndex:6,intVal:10},bbb:{rootIndex:6,intVal:9}}}isValidNoteValue(i){return i>=0&&i<t.canonicalNotes.length}isValidIntervalValue(i){return i>=0&&i<t.diatonicIntervals.length}getNoteParts(i){if(!i||i.length<1)throw new S("BadArguments","Invalid note name: "+i);if(i.length>3)throw new S("BadArguments","Invalid note name: "+i);let e=i.toLowerCase(),r=/^([cdefgab])(b|bb|n|#|##)?$/.exec(e);if(r!==null){let o=r[1],s=r[2];return{root:o,accidental:s}}else throw new S("BadArguments","Invalid note name: "+i)}getKeyParts(i){if(!i||i.length<1)throw new S("BadArguments","Invalid key: "+i);let e=i.toLowerCase(),r=/^([cdefgab])(b|#)?(mel|harm|m|M)?$/.exec(e);if(r!==null){let o=r[1],s=r[2],a=r[3];return a||(a="M"),{root:o,accidental:s,type:a}}else throw new S("BadArguments",`Invalid key: ${i}`)}getNoteValue(i){let e=t.noteValues[i];if(e===void 0)throw new S("BadArguments",`Invalid note name: ${i}`);return e.intVal}getIntervalValue(i){let e=t.intervals[i];if(e===void 0)throw new S("BadArguments",`Invalid interval name: ${i}`);return e}getCanonicalNoteName(i){if(!this.isValidNoteValue(i))throw new S("BadArguments",`Invalid note value: ${i}`);return t.canonicalNotes[i]}getCanonicalIntervalName(i){if(!this.isValidIntervalValue(i))throw new S("BadArguments",`Invalid interval value: ${i}`);return t.diatonicIntervals[i]}getRelativeNoteValue(i,e,n=1){if(n!==1&&n!==-1)throw new S("BadArguments",`Invalid direction: ${n}`);let r=(i+n*e)%t.NUM_TONES;return r<0&&(r+=t.NUM_TONES),r}getRelativeNoteName(i,e){let n=this.getNoteParts(i),r=this.getNoteValue(n.root),o=e-r;if(Math.abs(o)>t.NUM_TONES-3){let a=1;o>0&&(a=-1);let c=(e+1+(r+1))%t.NUM_TONES*a;if(Math.abs(c)>2)throw new S("BadArguments",`Notes not related: ${i}, ${e})`);o=c}if(Math.abs(o)>2)throw new S("BadArguments",`Notes not related: ${i}, ${e})`);let s=n.root;if(o>0)for(let a=1;a<=o;++a)s+="#";else if(o<0)for(let a=-1;a>=o;--a)s+="b";return s}getScaleTones(i,e){let n=[i],r=i;for(let o=0;o<e.length;o++)r=this.getRelativeNoteValue(r,e[o]),r!==i&&n.push(r);return n}getIntervalBetween(i,e,n=1){if(n!==1&&n!==-1)throw new S("BadArguments",`Invalid direction: ${n}`);if(!this.isValidNoteValue(i)||!this.isValidNoteValue(e))throw new S("BadArguments",`Invalid notes: ${i}, ${e}`);let r=n===1?e-i:i-e;return r<0&&(r+=t.NUM_TONES),r}createScaleMap(i){let e=this.getKeyParts(i);if(!e.type)throw new S("BadArguments","Unsupported key type: undefined");let n=t.scaleTypes[e.type],r=e.root;if(e.accidental&&(r+=e.accidental),!n)throw new S("BadArguments","Unsupported key type: "+i);let o=this.getScaleTones(this.getNoteValue(r),n),s=t.rootIndexes[e.root],a={};for(let c=0;c<t.roots.length;++c){let l=(s+c)%t.roots.length,u=t.roots[l],h=this.getRelativeNoteName(u,o[c]);h.length===1&&(h+="n"),a[u]=h}return a}};var m=function(t){return t.null="\0",t.fourStringTabClef="\uE06E",t.sixStringTabClef="\uE06D",t.accSagittal11LargeDiesisDown="\uE30D",t.accSagittal11LargeDiesisUp="\uE30C",t.accSagittal11MediumDiesisDown="\uE30B",t.accSagittal11MediumDiesisUp="\uE30A",t.accSagittal11v19LargeDiesisDown="\uE3AB",t.accSagittal11v19LargeDiesisUp="\uE3AA",t.accSagittal11v19MediumDiesisDown="\uE3A3",t.accSagittal11v19MediumDiesisUp="\uE3A2",t.accSagittal11v49CommaDown="\uE397",t.accSagittal11v49CommaUp="\uE396",t.accSagittal143CommaDown="\uE395",t.accSagittal143CommaUp="\uE394",t.accSagittal17CommaDown="\uE343",t.accSagittal17CommaUp="\uE342",t.accSagittal17KleismaDown="\uE393",t.accSagittal17KleismaUp="\uE392",t.accSagittal19CommaDown="\uE399",t.accSagittal19CommaUp="\uE398",t.accSagittal19SchismaDown="\uE391",t.accSagittal19SchismaUp="\uE390",t.accSagittal1MinaDown="\uE3F5",t.accSagittal1MinaUp="\uE3F4",t.accSagittal1TinaDown="\uE3F9",t.accSagittal1TinaUp="\uE3F8",t.accSagittal23CommaDown="\uE371",t.accSagittal23CommaUp="\uE370",t.accSagittal23SmallDiesisDown="\uE39F",t.accSagittal23SmallDiesisUp="\uE39E",t.accSagittal25SmallDiesisDown="\uE307",t.accSagittal25SmallDiesisUp="\uE306",t.accSagittal2MinasDown="\uE3F7",t.accSagittal2MinasUp="\uE3F6",t.accSagittal2TinasDown="\uE3FB",t.accSagittal2TinasUp="\uE3FA",t.accSagittal35LargeDiesisDown="\uE30F",t.accSagittal35LargeDiesisUp="\uE30E",t.accSagittal35MediumDiesisDown="\uE309",t.accSagittal35MediumDiesisUp="\uE308",t.accSagittal3TinasDown="\uE3FD",t.accSagittal3TinasUp="\uE3FC",t.accSagittal49LargeDiesisDown="\uE3A9",t.accSagittal49LargeDiesisUp="\uE3A8",t.accSagittal49MediumDiesisDown="\uE3A5",t.accSagittal49MediumDiesisUp="\uE3A4",t.accSagittal49SmallDiesisDown="\uE39D",t.accSagittal49SmallDiesisUp="\uE39C",t.accSagittal4TinasDown="\uE3FF",t.accSagittal4TinasUp="\uE3FE",t.accSagittal55CommaDown="\uE345",t.accSagittal55CommaUp="\uE344",t.accSagittal5CommaDown="\uE303",t.accSagittal5CommaUp="\uE302",t.accSagittal5TinasDown="\uE401",t.accSagittal5TinasUp="\uE400",t.accSagittal5v11SmallDiesisDown="\uE349",t.accSagittal5v11SmallDiesisUp="\uE348",t.accSagittal5v13LargeDiesisDown="\uE3AD",t.accSagittal5v13LargeDiesisUp="\uE3AC",t.accSagittal5v13MediumDiesisDown="\uE3A1",t.accSagittal5v13MediumDiesisUp="\uE3A0",t.accSagittal5v19CommaDown="\uE373",t.accSagittal5v19CommaUp="\uE372",t.accSagittal5v23SmallDiesisDown="\uE375",t.accSagittal5v23SmallDiesisUp="\uE374",t.accSagittal5v49MediumDiesisDown="\uE3A7",t.accSagittal5v49MediumDiesisUp="\uE3A6",t.accSagittal5v7KleismaDown="\uE301",t.accSagittal5v7KleismaUp="\uE300",t.accSagittal6TinasDown="\uE403",t.accSagittal6TinasUp="\uE402",t.accSagittal7CommaDown="\uE305",t.accSagittal7CommaUp="\uE304",t.accSagittal7TinasDown="\uE405",t.accSagittal7TinasUp="\uE404",t.accSagittal7v11CommaDown="\uE347",t.accSagittal7v11CommaUp="\uE346",t.accSagittal7v11KleismaDown="\uE341",t.accSagittal7v11KleismaUp="\uE340",t.accSagittal7v19CommaDown="\uE39B",t.accSagittal7v19CommaUp="\uE39A",t.accSagittal8TinasDown="\uE407",t.accSagittal8TinasUp="\uE406",t.accSagittal9TinasDown="\uE409",t.accSagittal9TinasUp="\uE408",t.accSagittalAcute="\uE3F2",t.accSagittalDoubleFlat="\uE335",t.accSagittalDoubleFlat11v49CUp="\uE3E9",t.accSagittalDoubleFlat143CUp="\uE3EB",t.accSagittalDoubleFlat17CUp="\uE365",t.accSagittalDoubleFlat17kUp="\uE3ED",t.accSagittalDoubleFlat19CUp="\uE3E7",t.accSagittalDoubleFlat19sUp="\uE3EF",t.accSagittalDoubleFlat23CUp="\uE387",t.accSagittalDoubleFlat23SUp="\uE3E1",t.accSagittalDoubleFlat25SUp="\uE32D",t.accSagittalDoubleFlat49SUp="\uE3E3",t.accSagittalDoubleFlat55CUp="\uE363",t.accSagittalDoubleFlat5CUp="\uE331",t.accSagittalDoubleFlat5v11SUp="\uE35F",t.accSagittalDoubleFlat5v19CUp="\uE385",t.accSagittalDoubleFlat5v23SUp="\uE383",t.accSagittalDoubleFlat5v7kUp="\uE333",t.accSagittalDoubleFlat7CUp="\uE32F",t.accSagittalDoubleFlat7v11CUp="\uE361",t.accSagittalDoubleFlat7v11kUp="\uE367",t.accSagittalDoubleFlat7v19CUp="\uE3E5",t.accSagittalDoubleSharp="\uE334",t.accSagittalDoubleSharp11v49CDown="\uE3E8",t.accSagittalDoubleSharp143CDown="\uE3EA",t.accSagittalDoubleSharp17CDown="\uE364",t.accSagittalDoubleSharp17kDown="\uE3EC",t.accSagittalDoubleSharp19CDown="\uE3E6",t.accSagittalDoubleSharp19sDown="\uE3EE",t.accSagittalDoubleSharp23CDown="\uE386",t.accSagittalDoubleSharp23SDown="\uE3E0",t.accSagittalDoubleSharp25SDown="\uE32C",t.accSagittalDoubleSharp49SDown="\uE3E2",t.accSagittalDoubleSharp55CDown="\uE362",t.accSagittalDoubleSharp5CDown="\uE330",t.accSagittalDoubleSharp5v11SDown="\uE35E",t.accSagittalDoubleSharp5v19CDown="\uE384",t.accSagittalDoubleSharp5v23SDown="\uE382",t.accSagittalDoubleSharp5v7kDown="\uE332",t.accSagittalDoubleSharp7CDown="\uE32E",t.accSagittalDoubleSharp7v11CDown="\uE360",t.accSagittalDoubleSharp7v11kDown="\uE366",t.accSagittalDoubleSharp7v19CDown="\uE3E4",t.accSagittalFlat="\uE319",t.accSagittalFlat11LDown="\uE329",t.accSagittalFlat11MDown="\uE327",t.accSagittalFlat11v19LDown="\uE3DB",t.accSagittalFlat11v19MDown="\uE3D3",t.accSagittalFlat11v49CDown="\uE3C7",t.accSagittalFlat11v49CUp="\uE3B9",t.accSagittalFlat143CDown="\uE3C5",t.accSagittalFlat143CUp="\uE3BB",t.accSagittalFlat17CDown="\uE357",t.accSagittalFlat17CUp="\uE351",t.accSagittalFlat17kDown="\uE3C3",t.accSagittalFlat17kUp="\uE3BD",t.accSagittalFlat19CDown="\uE3C9",t.accSagittalFlat19CUp="\uE3B7",t.accSagittalFlat19sDown="\uE3C1",t.accSagittalFlat19sUp="\uE3BF",t.accSagittalFlat23CDown="\uE37D",t.accSagittalFlat23CUp="\uE37B",t.accSagittalFlat23SDown="\uE3CF",t.accSagittalFlat23SUp="\uE3B1",t.accSagittalFlat25SDown="\uE323",t.accSagittalFlat25SUp="\uE311",t.accSagittalFlat35LDown="\uE32B",t.accSagittalFlat35MDown="\uE325",t.accSagittalFlat49LDown="\uE3D9",t.accSagittalFlat49MDown="\uE3D5",t.accSagittalFlat49SDown="\uE3CD",t.accSagittalFlat49SUp="\uE3B3",t.accSagittalFlat55CDown="\uE359",t.accSagittalFlat55CUp="\uE34F",t.accSagittalFlat5CDown="\uE31F",t.accSagittalFlat5CUp="\uE315",t.accSagittalFlat5v11SDown="\uE35D",t.accSagittalFlat5v11SUp="\uE34B",t.accSagittalFlat5v13LDown="\uE3DD",t.accSagittalFlat5v13MDown="\uE3D1",t.accSagittalFlat5v19CDown="\uE37F",t.accSagittalFlat5v19CUp="\uE379",t.accSagittalFlat5v23SDown="\uE381",t.accSagittalFlat5v23SUp="\uE377",t.accSagittalFlat5v49MDown="\uE3D7",t.accSagittalFlat5v7kDown="\uE31D",t.accSagittalFlat5v7kUp="\uE317",t.accSagittalFlat7CDown="\uE321",t.accSagittalFlat7CUp="\uE313",t.accSagittalFlat7v11CDown="\uE35B",t.accSagittalFlat7v11CUp="\uE34D",t.accSagittalFlat7v11kDown="\uE355",t.accSagittalFlat7v11kUp="\uE353",t.accSagittalFlat7v19CDown="\uE3CB",t.accSagittalFlat7v19CUp="\uE3B5",t.accSagittalFractionalTinaDown="\uE40B",t.accSagittalFractionalTinaUp="\uE40A",t.accSagittalGrave="\uE3F3",t.accSagittalShaftDown="\uE3F1",t.accSagittalShaftUp="\uE3F0",t.accSagittalSharp="\uE318",t.accSagittalSharp11LUp="\uE328",t.accSagittalSharp11MUp="\uE326",t.accSagittalSharp11v19LUp="\uE3DA",t.accSagittalSharp11v19MUp="\uE3D2",t.accSagittalSharp11v49CDown="\uE3B8",t.accSagittalSharp11v49CUp="\uE3C6",t.accSagittalSharp143CDown="\uE3BA",t.accSagittalSharp143CUp="\uE3C4",t.accSagittalSharp17CDown="\uE350",t.accSagittalSharp17CUp="\uE356",t.accSagittalSharp17kDown="\uE3BC",t.accSagittalSharp17kUp="\uE3C2",t.accSagittalSharp19CDown="\uE3B6",t.accSagittalSharp19CUp="\uE3C8",t.accSagittalSharp19sDown="\uE3BE",t.accSagittalSharp19sUp="\uE3C0",t.accSagittalSharp23CDown="\uE37A",t.accSagittalSharp23CUp="\uE37C",t.accSagittalSharp23SDown="\uE3B0",t.accSagittalSharp23SUp="\uE3CE",t.accSagittalSharp25SDown="\uE310",t.accSagittalSharp25SUp="\uE322",t.accSagittalSharp35LUp="\uE32A",t.accSagittalSharp35MUp="\uE324",t.accSagittalSharp49LUp="\uE3D8",t.accSagittalSharp49MUp="\uE3D4",t.accSagittalSharp49SDown="\uE3B2",t.accSagittalSharp49SUp="\uE3CC",t.accSagittalSharp55CDown="\uE34E",t.accSagittalSharp55CUp="\uE358",t.accSagittalSharp5CDown="\uE314",t.accSagittalSharp5CUp="\uE31E",t.accSagittalSharp5v11SDown="\uE34A",t.accSagittalSharp5v11SUp="\uE35C",t.accSagittalSharp5v13LUp="\uE3DC",t.accSagittalSharp5v13MUp="\uE3D0",t.accSagittalSharp5v19CDown="\uE378",t.accSagittalSharp5v19CUp="\uE37E",t.accSagittalSharp5v23SDown="\uE376",t.accSagittalSharp5v23SUp="\uE380",t.accSagittalSharp5v49MUp="\uE3D6",t.accSagittalSharp5v7kDown="\uE316",t.accSagittalSharp5v7kUp="\uE31C",t.accSagittalSharp7CDown="\uE312",t.accSagittalSharp7CUp="\uE320",t.accSagittalSharp7v11CDown="\uE34C",t.accSagittalSharp7v11CUp="\uE35A",t.accSagittalSharp7v11kDown="\uE352",t.accSagittalSharp7v11kUp="\uE354",t.accSagittalSharp7v19CDown="\uE3B4",t.accSagittalSharp7v19CUp="\uE3CA",t.accSagittalUnused1="\uE31A",t.accSagittalUnused2="\uE31B",t.accSagittalUnused3="\uE3DE",t.accSagittalUnused4="\uE3DF",t.accdnCombDot="\uE8CA",t.accdnCombLH2RanksEmpty="\uE8C8",t.accdnCombLH3RanksEmptySquare="\uE8C9",t.accdnCombRH3RanksEmpty="\uE8C6",t.accdnCombRH4RanksEmpty="\uE8C7",t.accdnDiatonicClef="\uE079",t.accdnLH2Ranks16Round="\uE8BC",t.accdnLH2Ranks8Plus16Round="\uE8BD",t.accdnLH2Ranks8Round="\uE8BB",t.accdnLH2RanksFullMasterRound="\uE8C0",t.accdnLH2RanksMasterPlus16Round="\uE8BF",t.accdnLH2RanksMasterRound="\uE8BE",t.accdnLH3Ranks2Plus8Square="\uE8C4",t.accdnLH3Ranks2Square="\uE8C2",t.accdnLH3Ranks8Square="\uE8C1",t.accdnLH3RanksDouble8Square="\uE8C3",t.accdnLH3RanksTuttiSquare="\uE8C5",t.accdnPull="\uE8CC",t.accdnPush="\uE8CB",t.accdnRH3RanksAccordion="\uE8AC",t.accdnRH3RanksAuthenticMusette="\uE8A8",t.accdnRH3RanksBandoneon="\uE8AB",t.accdnRH3RanksBassoon="\uE8A4",t.accdnRH3RanksClarinet="\uE8A1",t.accdnRH3RanksDoubleTremoloLower8ve="\uE8B1",t.accdnRH3RanksDoubleTremoloUpper8ve="\uE8B2",t.accdnRH3RanksFullFactory="\uE8B3",t.accdnRH3RanksHarmonium="\uE8AA",t.accdnRH3RanksImitationMusette="\uE8A7",t.accdnRH3RanksLowerTremolo8="\uE8A3",t.accdnRH3RanksMaster="\uE8AD",t.accdnRH3RanksOboe="\uE8A5",t.accdnRH3RanksOrgan="\uE8A9",t.accdnRH3RanksPiccolo="\uE8A0",t.accdnRH3RanksTremoloLower8ve="\uE8AF",t.accdnRH3RanksTremoloUpper8ve="\uE8B0",t.accdnRH3RanksTwoChoirs="\uE8AE",t.accdnRH3RanksUpperTremolo8="\uE8A2",t.accdnRH3RanksViolin="\uE8A6",t.accdnRH4RanksAlto="\uE8B5",t.accdnRH4RanksBassAlto="\uE8BA",t.accdnRH4RanksMaster="\uE8B7",t.accdnRH4RanksSoftBass="\uE8B8",t.accdnRH4RanksSoftTenor="\uE8B9",t.accdnRH4RanksSoprano="\uE8B4",t.accdnRH4RanksTenor="\uE8B6",t.accdnRicochet2="\uE8CD",t.accdnRicochet3="\uE8CE",t.accdnRicochet4="\uE8CF",t.accdnRicochet5="\uE8D0",t.accdnRicochet6="\uE8D1",t.accdnRicochetStem2="\uE8D2",t.accdnRicochetStem3="\uE8D3",t.accdnRicochetStem4="\uE8D4",t.accdnRicochetStem5="\uE8D5",t.accdnRicochetStem6="\uE8D6",t.accidental1CommaFlat="\uE454",t.accidental1CommaSharp="\uE450",t.accidental2CommaFlat="\uE455",t.accidental2CommaSharp="\uE451",t.accidental3CommaFlat="\uE456",t.accidental3CommaSharp="\uE452",t.accidental4CommaFlat="\uE457",t.accidental5CommaSharp="\uE453",t.accidentalArrowDown="\uE27B",t.accidentalArrowUp="\uE27A",t.accidentalBakiyeFlat="\uE442",t.accidentalBakiyeSharp="\uE445",t.accidentalBracketLeft="\uE26C",t.accidentalBracketRight="\uE26D",t.accidentalBuyukMucennebFlat="\uE440",t.accidentalBuyukMucennebSharp="\uE447",t.accidentalCombiningCloseCurlyBrace="\uE2EF",t.accidentalCombiningLower17Schisma="\uE2E6",t.accidentalCombiningLower19Schisma="\uE2E8",t.accidentalCombiningLower23Limit29LimitComma="\uE2EA",t.accidentalCombiningLower29LimitComma="\uEE50",t.accidentalCombiningLower31Schisma="\uE2EC",t.accidentalCombiningLower37Quartertone="\uEE52",t.accidentalCombiningLower41Comma="\uEE54",t.accidentalCombiningLower43Comma="\uEE56",t.accidentalCombiningLower47Quartertone="\uEE58",t.accidentalCombiningLower53LimitComma="\uE2F7",t.accidentalCombiningOpenCurlyBrace="\uE2EE",t.accidentalCombiningRaise17Schisma="\uE2E7",t.accidentalCombiningRaise19Schisma="\uE2E9",t.accidentalCombiningRaise23Limit29LimitComma="\uE2EB",t.accidentalCombiningRaise29LimitComma="\uEE51",t.accidentalCombiningRaise31Schisma="\uE2ED",t.accidentalCombiningRaise37Quartertone="\uEE53",t.accidentalCombiningRaise41Comma="\uEE55",t.accidentalCombiningRaise43Comma="\uEE57",t.accidentalCombiningRaise47Quartertone="\uEE59",t.accidentalCombiningRaise53LimitComma="\uE2F8",t.accidentalCommaSlashDown="\uE47A",t.accidentalCommaSlashUp="\uE479",t.accidentalDoubleFlat="\uE264",t.accidentalDoubleFlatArabic="\uED30",t.accidentalDoubleFlatEqualTempered="\uE2F0",t.accidentalDoubleFlatOneArrowDown="\uE2C0",t.accidentalDoubleFlatOneArrowUp="\uE2C5",t.accidentalDoubleFlatReversed="\uE483",t.accidentalDoubleFlatThreeArrowsDown="\uE2D4",t.accidentalDoubleFlatThreeArrowsUp="\uE2D9",t.accidentalDoubleFlatTurned="\uE485",t.accidentalDoubleFlatTwoArrowsDown="\uE2CA",t.accidentalDoubleFlatTwoArrowsUp="\uE2CF",t.accidentalDoubleSharp="\uE263",t.accidentalDoubleSharpArabic="\uED38",t.accidentalDoubleSharpEqualTempered="\uE2F4",t.accidentalDoubleSharpOneArrowDown="\uE2C4",t.accidentalDoubleSharpOneArrowUp="\uE2C9",t.accidentalDoubleSharpThreeArrowsDown="\uE2D8",t.accidentalDoubleSharpThreeArrowsUp="\uE2DD",t.accidentalDoubleSharpTwoArrowsDown="\uE2CE",t.accidentalDoubleSharpTwoArrowsUp="\uE2D3",t.accidentalEnharmonicAlmostEqualTo="\uE2FA",t.accidentalEnharmonicEquals="\uE2FB",t.accidentalEnharmonicTilde="\uE2F9",t.accidentalFilledReversedFlatAndFlat="\uE296",t.accidentalFilledReversedFlatAndFlatArrowDown="\uE298",t.accidentalFilledReversedFlatAndFlatArrowUp="\uE297",t.accidentalFilledReversedFlatArrowDown="\uE293",t.accidentalFilledReversedFlatArrowUp="\uE292",t.accidentalFiveQuarterTonesFlatArrowDown="\uE279",t.accidentalFiveQuarterTonesSharpArrowUp="\uE276",t.accidentalFlat="\uE260",t.accidentalFlatArabic="\uED32",t.accidentalFlatEqualTempered="\uE2F1",t.accidentalFlatLoweredStockhausen="\uED53",t.accidentalFlatOneArrowDown="\uE2C1",t.accidentalFlatOneArrowUp="\uE2C6",t.accidentalFlatRaisedStockhausen="\uED52",t.accidentalFlatRepeatedLineStockhausen="\uED5C",t.accidentalFlatRepeatedSpaceStockhausen="\uED5B",t.accidentalFlatThreeArrowsDown="\uE2D5",t.accidentalFlatThreeArrowsUp="\uE2DA",t.accidentalFlatTurned="\uE484",t.accidentalFlatTwoArrowsDown="\uE2CB",t.accidentalFlatTwoArrowsUp="\uE2D0",t.accidentalHabaFlatQuarterToneHigher="\uEE65",t.accidentalHabaFlatThreeQuarterTonesLower="\uEE69",t.accidentalHabaQuarterToneHigher="\uEE64",t.accidentalHabaQuarterToneLower="\uEE67",t.accidentalHabaSharpQuarterToneLower="\uEE68",t.accidentalHabaSharpThreeQuarterTonesHigher="\uEE66",t.accidentalHalfSharpArrowDown="\uE29A",t.accidentalHalfSharpArrowUp="\uE299",t.accidentalJohnston13="\uE2B6",t.accidentalJohnston31="\uE2B7",t.accidentalJohnstonDown="\uE2B5",t.accidentalJohnstonEl="\uE2B2",t.accidentalJohnstonMinus="\uE2B1",t.accidentalJohnstonPlus="\uE2B0",t.accidentalJohnstonSeven="\uE2B3",t.accidentalJohnstonUp="\uE2B4",t.accidentalKomaFlat="\uE443",t.accidentalKomaSharp="\uE444",t.accidentalKoron="\uE460",t.accidentalKucukMucennebFlat="\uE441",t.accidentalKucukMucennebSharp="\uE446",t.accidentalLargeDoubleSharp="\uE47D",t.accidentalLowerOneSeptimalComma="\uE2DE",t.accidentalLowerOneTridecimalQuartertone="\uE2E4",t.accidentalLowerOneUndecimalQuartertone="\uE2E2",t.accidentalLowerTwoSeptimalCommas="\uE2E0",t.accidentalLoweredStockhausen="\uED51",t.accidentalNarrowReversedFlat="\uE284",t.accidentalNarrowReversedFlatAndFlat="\uE285",t.accidentalNatural="\uE261",t.accidentalNaturalArabic="\uED34",t.accidentalNaturalEqualTempered="\uE2F2",t.accidentalNaturalFlat="\uE267",t.accidentalNaturalLoweredStockhausen="\uED55",t.accidentalNaturalOneArrowDown="\uE2C2",t.accidentalNaturalOneArrowUp="\uE2C7",t.accidentalNaturalRaisedStockhausen="\uED54",t.accidentalNaturalReversed="\uE482",t.accidentalNaturalSharp="\uE268",t.accidentalNaturalThreeArrowsDown="\uE2D6",t.accidentalNaturalThreeArrowsUp="\uE2DB",t.accidentalNaturalTwoArrowsDown="\uE2CC",t.accidentalNaturalTwoArrowsUp="\uE2D1",t.accidentalOneAndAHalfSharpsArrowDown="\uE29C",t.accidentalOneAndAHalfSharpsArrowUp="\uE29B",t.accidentalOneQuarterToneFlatFerneyhough="\uE48F",t.accidentalOneQuarterToneFlatStockhausen="\uED59",t.accidentalOneQuarterToneSharpFerneyhough="\uE48E",t.accidentalOneQuarterToneSharpStockhausen="\uED58",t.accidentalOneThirdToneFlatFerneyhough="\uE48B",t.accidentalOneThirdToneSharpFerneyhough="\uE48A",t.accidentalParensLeft="\uE26A",t.accidentalParensRight="\uE26B",t.accidentalQuarterFlatEqualTempered="\uE2F5",t.accidentalQuarterSharpEqualTempered="\uE2F6",t.accidentalQuarterToneFlat4="\uE47F",t.accidentalQuarterToneFlatArabic="\uED33",t.accidentalQuarterToneFlatArrowUp="\uE270",t.accidentalQuarterToneFlatFilledReversed="\uE480",t.accidentalQuarterToneFlatNaturalArrowDown="\uE273",t.accidentalQuarterToneFlatPenderecki="\uE478",t.accidentalQuarterToneFlatStein="\uE280",t.accidentalQuarterToneFlatVanBlankenburg="\uE488",t.accidentalQuarterToneSharp4="\uE47E",t.accidentalQuarterToneSharpArabic="\uED35",t.accidentalQuarterToneSharpArrowDown="\uE275",t.accidentalQuarterToneSharpBusotti="\uE472",t.accidentalQuarterToneSharpNaturalArrowUp="\uE272",t.accidentalQuarterToneSharpStein="\uE282",t.accidentalQuarterToneSharpWiggle="\uE475",t.accidentalRaiseOneSeptimalComma="\uE2DF",t.accidentalRaiseOneTridecimalQuartertone="\uE2E5",t.accidentalRaiseOneUndecimalQuartertone="\uE2E3",t.accidentalRaiseTwoSeptimalCommas="\uE2E1",t.accidentalRaisedStockhausen="\uED50",t.accidentalReversedFlatAndFlatArrowDown="\uE295",t.accidentalReversedFlatAndFlatArrowUp="\uE294",t.accidentalReversedFlatArrowDown="\uE291",t.accidentalReversedFlatArrowUp="\uE290",t.accidentalSharp="\uE262",t.accidentalSharpArabic="\uED36",t.accidentalSharpEqualTempered="\uE2F3",t.accidentalSharpLoweredStockhausen="\uED57",t.accidentalSharpOneArrowDown="\uE2C3",t.accidentalSharpOneArrowUp="\uE2C8",t.accidentalSharpOneHorizontalStroke="\uE473",t.accidentalSharpRaisedStockhausen="\uED56",t.accidentalSharpRepeatedLineStockhausen="\uED5E",t.accidentalSharpRepeatedSpaceStockhausen="\uED5D",t.accidentalSharpReversed="\uE481",t.accidentalSharpSharp="\uE269",t.accidentalSharpThreeArrowsDown="\uE2D7",t.accidentalSharpThreeArrowsUp="\uE2DC",t.accidentalSharpTwoArrowsDown="\uE2CD",t.accidentalSharpTwoArrowsUp="\uE2D2",t.accidentalSims12Down="\uE2A0",t.accidentalSims12Up="\uE2A3",t.accidentalSims4Down="\uE2A2",t.accidentalSims4Up="\uE2A5",t.accidentalSims6Down="\uE2A1",t.accidentalSims6Up="\uE2A4",t.accidentalSori="\uE461",t.accidentalTavenerFlat="\uE477",t.accidentalTavenerSharp="\uE476",t.accidentalThreeQuarterTonesFlatArabic="\uED31",t.accidentalThreeQuarterTonesFlatArrowDown="\uE271",t.accidentalThreeQuarterTonesFlatArrowUp="\uE278",t.accidentalThreeQuarterTonesFlatCouper="\uE489",t.accidentalThreeQuarterTonesFlatGrisey="\uE486",t.accidentalThreeQuarterTonesFlatTartini="\uE487",t.accidentalThreeQuarterTonesFlatZimmermann="\uE281",t.accidentalThreeQuarterTonesSharpArabic="\uED37",t.accidentalThreeQuarterTonesSharpArrowDown="\uE277",t.accidentalThreeQuarterTonesSharpArrowUp="\uE274",t.accidentalThreeQuarterTonesSharpBusotti="\uE474",t.accidentalThreeQuarterTonesSharpStein="\uE283",t.accidentalThreeQuarterTonesSharpStockhausen="\uED5A",t.accidentalTripleFlat="\uE266",t.accidentalTripleSharp="\uE265",t.accidentalTwoThirdTonesFlatFerneyhough="\uE48D",t.accidentalTwoThirdTonesSharpFerneyhough="\uE48C",t.accidentalUpsAndDownsDown="\uEE61",t.accidentalUpsAndDownsLess="\uEE63",t.accidentalUpsAndDownsMore="\uEE62",t.accidentalUpsAndDownsUp="\uEE60",t.accidentalWilsonMinus="\uE47C",t.accidentalWilsonPlus="\uE47B",t.accidentalWyschnegradsky10TwelfthsFlat="\uE434",t.accidentalWyschnegradsky10TwelfthsSharp="\uE429",t.accidentalWyschnegradsky11TwelfthsFlat="\uE435",t.accidentalWyschnegradsky11TwelfthsSharp="\uE42A",t.accidentalWyschnegradsky1TwelfthsFlat="\uE42B",t.accidentalWyschnegradsky1TwelfthsSharp="\uE420",t.accidentalWyschnegradsky2TwelfthsFlat="\uE42C",t.accidentalWyschnegradsky2TwelfthsSharp="\uE421",t.accidentalWyschnegradsky3TwelfthsFlat="\uE42D",t.accidentalWyschnegradsky3TwelfthsSharp="\uE422",t.accidentalWyschnegradsky4TwelfthsFlat="\uE42E",t.accidentalWyschnegradsky4TwelfthsSharp="\uE423",t.accidentalWyschnegradsky5TwelfthsFlat="\uE42F",t.accidentalWyschnegradsky5TwelfthsSharp="\uE424",t.accidentalWyschnegradsky6TwelfthsFlat="\uE430",t.accidentalWyschnegradsky6TwelfthsSharp="\uE425",t.accidentalWyschnegradsky7TwelfthsFlat="\uE431",t.accidentalWyschnegradsky7TwelfthsSharp="\uE426",t.accidentalWyschnegradsky8TwelfthsFlat="\uE432",t.accidentalWyschnegradsky8TwelfthsSharp="\uE427",t.accidentalWyschnegradsky9TwelfthsFlat="\uE433",t.accidentalWyschnegradsky9TwelfthsSharp="\uE428",t.accidentalXenakisOneThirdToneSharp="\uE470",t.accidentalXenakisTwoThirdTonesSharp="\uE471",t.analyticsChoralmelodie="\uE86A",t.analyticsEndStimme="\uE863",t.analyticsHauptrhythmus="\uE86B",t.analyticsHauptstimme="\uE860",t.analyticsInversion1="\uE869",t.analyticsNebenstimme="\uE861",t.analyticsStartStimme="\uE862",t.analyticsTheme="\uE864",t.analyticsTheme1="\uE868",t.analyticsThemeInversion="\uE867",t.analyticsThemeRetrograde="\uE865",t.analyticsThemeRetrogradeInversion="\uE866",t.arpeggiato="\uE63C",t.arpeggiatoDown="\uE635",t.arpeggiatoUp="\uE634",t.arrowBlackDown="\uEB64",t.arrowBlackDownLeft="\uEB65",t.arrowBlackDownRight="\uEB63",t.arrowBlackLeft="\uEB66",t.arrowBlackRight="\uEB62",t.arrowBlackUp="\uEB60",t.arrowBlackUpLeft="\uEB67",t.arrowBlackUpRight="\uEB61",t.arrowOpenDown="\uEB74",t.arrowOpenDownLeft="\uEB75",t.arrowOpenDownRight="\uEB73",t.arrowOpenLeft="\uEB76",t.arrowOpenRight="\uEB72",t.arrowOpenUp="\uEB70",t.arrowOpenUpLeft="\uEB77",t.arrowOpenUpRight="\uEB71",t.arrowWhiteDown="\uEB6C",t.arrowWhiteDownLeft="\uEB6D",t.arrowWhiteDownRight="\uEB6B",t.arrowWhiteLeft="\uEB6E",t.arrowWhiteRight="\uEB6A",t.arrowWhiteUp="\uEB68",t.arrowWhiteUpLeft="\uEB6F",t.arrowWhiteUpRight="\uEB69",t.arrowheadBlackDown="\uEB7C",t.arrowheadBlackDownLeft="\uEB7D",t.arrowheadBlackDownRight="\uEB7B",t.arrowheadBlackLeft="\uEB7E",t.arrowheadBlackRight="\uEB7A",t.arrowheadBlackUp="\uEB78",t.arrowheadBlackUpLeft="\uEB7F",t.arrowheadBlackUpRight="\uEB79",t.arrowheadOpenDown="\uEB8C",t.arrowheadOpenDownLeft="\uEB8D",t.arrowheadOpenDownRight="\uEB8B",t.arrowheadOpenLeft="\uEB8E",t.arrowheadOpenRight="\uEB8A",t.arrowheadOpenUp="\uEB88",t.arrowheadOpenUpLeft="\uEB8F",t.arrowheadOpenUpRight="\uEB89",t.arrowheadWhiteDown="\uEB84",t.arrowheadWhiteDownLeft="\uEB85",t.arrowheadWhiteDownRight="\uEB83",t.arrowheadWhiteLeft="\uEB86",t.arrowheadWhiteRight="\uEB82",t.arrowheadWhiteUp="\uEB80",t.arrowheadWhiteUpLeft="\uEB87",t.arrowheadWhiteUpRight="\uEB81",t.articAccentAbove="\uE4A0",t.articAccentBelow="\uE4A1",t.articAccentStaccatoAbove="\uE4B0",t.articAccentStaccatoBelow="\uE4B1",t.articLaissezVibrerAbove="\uE4BA",t.articLaissezVibrerBelow="\uE4BB",t.articMarcatoAbove="\uE4AC",t.articMarcatoBelow="\uE4AD",t.articMarcatoStaccatoAbove="\uE4AE",t.articMarcatoStaccatoBelow="\uE4AF",t.articMarcatoTenutoAbove="\uE4BC",t.articMarcatoTenutoBelow="\uE4BD",t.articSoftAccentAbove="\uED40",t.articSoftAccentBelow="\uED41",t.articSoftAccentStaccatoAbove="\uED42",t.articSoftAccentStaccatoBelow="\uED43",t.articSoftAccentTenutoAbove="\uED44",t.articSoftAccentTenutoBelow="\uED45",t.articSoftAccentTenutoStaccatoAbove="\uED46",t.articSoftAccentTenutoStaccatoBelow="\uED47",t.articStaccatissimoAbove="\uE4A6",t.articStaccatissimoBelow="\uE4A7",t.articStaccatissimoStrokeAbove="\uE4AA",t.articStaccatissimoStrokeBelow="\uE4AB",t.articStaccatissimoWedgeAbove="\uE4A8",t.articStaccatissimoWedgeBelow="\uE4A9",t.articStaccatoAbove="\uE4A2",t.articStaccatoBelow="\uE4A3",t.articStressAbove="\uE4B6",t.articStressBelow="\uE4B7",t.articTenutoAbove="\uE4A4",t.articTenutoAccentAbove="\uE4B4",t.articTenutoAccentBelow="\uE4B5",t.articTenutoBelow="\uE4A5",t.articTenutoStaccatoAbove="\uE4B2",t.articTenutoStaccatoBelow="\uE4B3",t.articUnstressAbove="\uE4B8",t.articUnstressBelow="\uE4B9",t.augmentationDot="\uE1E7",t.barlineDashed="\uE036",t.barlineDotted="\uE037",t.barlineDouble="\uE031",t.barlineFinal="\uE032",t.barlineHeavy="\uE034",t.barlineHeavyHeavy="\uE035",t.barlineReverseFinal="\uE033",t.barlineShort="\uE038",t.barlineSingle="\uE030",t.barlineTick="\uE039",t.beamAccelRit1="\uEAF4",t.beamAccelRit10="\uEAFD",t.beamAccelRit11="\uEAFE",t.beamAccelRit12="\uEAFF",t.beamAccelRit13="\uEB00",t.beamAccelRit14="\uEB01",t.beamAccelRit15="\uEB02",t.beamAccelRit2="\uEAF5",t.beamAccelRit3="\uEAF6",t.beamAccelRit4="\uEAF7",t.beamAccelRit5="\uEAF8",t.beamAccelRit6="\uEAF9",t.beamAccelRit7="\uEAFA",t.beamAccelRit8="\uEAFB",t.beamAccelRit9="\uEAFC",t.beamAccelRitFinal="\uEB03",t.brace="\uE000",t.bracket="\uE002",t.bracketBottom="\uE004",t.bracketTop="\uE003",t.brassBend="\uE5E3",t.brassDoitLong="\uE5D6",t.brassDoitMedium="\uE5D5",t.brassDoitShort="\uE5D4",t.brassFallLipLong="\uE5D9",t.brassFallLipMedium="\uE5D8",t.brassFallLipShort="\uE5D7",t.brassFallRoughLong="\uE5DF",t.brassFallRoughMedium="\uE5DE",t.brassFallRoughShort="\uE5DD",t.brassFallSmoothLong="\uE5DC",t.brassFallSmoothMedium="\uE5DB",t.brassFallSmoothShort="\uE5DA",t.brassFlip="\uE5E1",t.brassHarmonMuteClosed="\uE5E8",t.brassHarmonMuteStemHalfLeft="\uE5E9",t.brassHarmonMuteStemHalfRight="\uE5EA",t.brassHarmonMuteStemOpen="\uE5EB",t.brassJazzTurn="\uE5E4",t.brassLiftLong="\uE5D3",t.brassLiftMedium="\uE5D2",t.brassLiftShort="\uE5D1",t.brassLiftSmoothLong="\uE5EE",t.brassLiftSmoothMedium="\uE5ED",t.brassLiftSmoothShort="\uE5EC",t.brassMuteClosed="\uE5E5",t.brassMuteHalfClosed="\uE5E6",t.brassMuteOpen="\uE5E7",t.brassPlop="\uE5E0",t.brassScoop="\uE5D0",t.brassSmear="\uE5E2",t.brassValveTrill="\uE5EF",t.breathMarkComma="\uE4CE",t.breathMarkSalzedo="\uE4D5",t.breathMarkTick="\uE4CF",t.breathMarkUpbow="\uE4D0",t.bridgeClef="\uE078",t.buzzRoll="\uE22A",t.cClef="\uE05C",t.cClef8vb="\uE05D",t.cClefArrowDown="\uE05F",t.cClefArrowUp="\uE05E",t.cClefChange="\uE07B",t.cClefCombining="\uE061",t.cClefReversed="\uE075",t.cClefSquare="\uE060",t.caesura="\uE4D1",t.caesuraCurved="\uE4D4",t.caesuraShort="\uE4D3",t.caesuraSingleStroke="\uE4D7",t.caesuraThick="\uE4D2",t.chantAccentusAbove="\uE9D6",t.chantAccentusBelow="\uE9D7",t.chantAuctumAsc="\uE994",t.chantAuctumDesc="\uE995",t.chantAugmentum="\uE9D9",t.chantCaesura="\uE8F8",t.chantCclef="\uE906",t.chantCirculusAbove="\uE9D2",t.chantCirculusBelow="\uE9D3",t.chantConnectingLineAsc2nd="\uE9BD",t.chantConnectingLineAsc3rd="\uE9BE",t.chantConnectingLineAsc4th="\uE9BF",t.chantConnectingLineAsc5th="\uE9C0",t.chantConnectingLineAsc6th="\uE9C1",t.chantCustosStemDownPosHigh="\uEA08",t.chantCustosStemDownPosHighest="\uEA09",t.chantCustosStemDownPosMiddle="\uEA07",t.chantCustosStemUpPosLow="\uEA05",t.chantCustosStemUpPosLowest="\uEA04",t.chantCustosStemUpPosMiddle="\uEA06",t.chantDeminutumLower="\uE9B3",t.chantDeminutumUpper="\uE9B2",t.chantDivisioFinalis="\uE8F6",t.chantDivisioMaior="\uE8F4",t.chantDivisioMaxima="\uE8F5",t.chantDivisioMinima="\uE8F3",t.chantEntryLineAsc2nd="\uE9B4",t.chantEntryLineAsc3rd="\uE9B5",t.chantEntryLineAsc4th="\uE9B6",t.chantEntryLineAsc5th="\uE9B7",t.chantEntryLineAsc6th="\uE9B8",t.chantEpisema="\uE9D8",t.chantFclef="\uE902",t.chantIctusAbove="\uE9D0",t.chantIctusBelow="\uE9D1",t.chantLigaturaDesc2nd="\uE9B9",t.chantLigaturaDesc3rd="\uE9BA",t.chantLigaturaDesc4th="\uE9BB",t.chantLigaturaDesc5th="\uE9BC",t.chantOriscusAscending="\uE99C",t.chantOriscusDescending="\uE99D",t.chantOriscusLiquescens="\uE99E",t.chantPodatusLower="\uE9B0",t.chantPodatusUpper="\uE9B1",t.chantPunctum="\uE990",t.chantPunctumCavum="\uE998",t.chantPunctumDeminutum="\uE9A1",t.chantPunctumInclinatum="\uE991",t.chantPunctumInclinatumAuctum="\uE992",t.chantPunctumInclinatumDeminutum="\uE993",t.chantPunctumLinea="\uE999",t.chantPunctumLineaCavum="\uE99A",t.chantPunctumVirga="\uE996",t.chantPunctumVirgaReversed="\uE997",t.chantQuilisma="\uE99B",t.chantSemicirculusAbove="\uE9D4",t.chantSemicirculusBelow="\uE9D5",t.chantStaff="\uE8F0",t.chantStaffNarrow="\uE8F2",t.chantStaffWide="\uE8F1",t.chantStrophicus="\uE99F",t.chantStrophicusAuctus="\uE9A0",t.chantStrophicusLiquescens2nd="\uE9C2",t.chantStrophicusLiquescens3rd="\uE9C3",t.chantStrophicusLiquescens4th="\uE9C4",t.chantStrophicusLiquescens5th="\uE9C5",t.chantVirgula="\uE8F7",t.clef15="\uE07E",t.clef8="\uE07D",t.clefChangeCombining="\uE07F",t.coda="\uE048",t.codaSquare="\uE049",t.conductorBeat2Compound="\uE897",t.conductorBeat2Simple="\uE894",t.conductorBeat3Compound="\uE898",t.conductorBeat3Simple="\uE895",t.conductorBeat4Compound="\uE899",t.conductorBeat4Simple="\uE896",t.conductorLeftBeat="\uE891",t.conductorRightBeat="\uE892",t.conductorStrongBeat="\uE890",t.conductorUnconducted="\uE89A",t.conductorWeakBeat="\uE893",t.controlBeginBeam="\uE8E0",t.controlBeginPhrase="\uE8E6",t.controlBeginSlur="\uE8E4",t.controlBeginTie="\uE8E2",t.controlEndBeam="\uE8E1",t.controlEndPhrase="\uE8E7",t.controlEndSlur="\uE8E5",t.controlEndTie="\uE8E3",t.csymAccidentalDoubleFlat="\uED64",t.csymAccidentalDoubleSharp="\uED63",t.csymAccidentalFlat="\uED60",t.csymAccidentalNatural="\uED61",t.csymAccidentalSharp="\uED62",t.csymAccidentalTripleFlat="\uED66",t.csymAccidentalTripleSharp="\uED65",t.csymAlteredBassSlash="\uE87B",t.csymAugmented="\uE872",t.csymBracketLeftTall="\uE877",t.csymBracketRightTall="\uE878",t.csymDiagonalArrangementSlash="\uE87C",t.csymDiminished="\uE870",t.csymHalfDiminished="\uE871",t.csymMajorSeventh="\uE873",t.csymMinor="\uE874",t.csymParensLeftTall="\uE875",t.csymParensLeftVeryTall="\uE879",t.csymParensRightTall="\uE876",t.csymParensRightVeryTall="\uE87A",t.curlewSign="\uE4D6",t.daCapo="\uE046",t.dalSegno="\uE045",t.daseianExcellentes1="\uEA3C",t.daseianExcellentes2="\uEA3D",t.daseianExcellentes3="\uEA3E",t.daseianExcellentes4="\uEA3F",t.daseianFinales1="\uEA34",t.daseianFinales2="\uEA35",t.daseianFinales3="\uEA36",t.daseianFinales4="\uEA37",t.daseianGraves1="\uEA30",t.daseianGraves2="\uEA31",t.daseianGraves3="\uEA32",t.daseianGraves4="\uEA33",t.daseianResidua1="\uEA40",t.daseianResidua2="\uEA41",t.daseianSuperiores1="\uEA38",t.daseianSuperiores2="\uEA39",t.daseianSuperiores3="\uEA3A",t.daseianSuperiores4="\uEA3B",t.doubleLateralRollStevens="\uE234",t.doubleTongueAbove="\uE5F0",t.doubleTongueBelow="\uE5F1",t.dynamicCombinedSeparatorColon="\uE546",t.dynamicCombinedSeparatorHyphen="\uE547",t.dynamicCombinedSeparatorSlash="\uE549",t.dynamicCombinedSeparatorSpace="\uE548",t.dynamicCrescendoHairpin="\uE53E",t.dynamicDiminuendoHairpin="\uE53F",t.dynamicFF="\uE52F",t.dynamicFFF="\uE530",t.dynamicFFFF="\uE531",t.dynamicFFFFF="\uE532",t.dynamicFFFFFF="\uE533",t.dynamicForte="\uE522",t.dynamicFortePiano="\uE534",t.dynamicForzando="\uE535",t.dynamicHairpinBracketLeft="\uE544",t.dynamicHairpinBracketRight="\uE545",t.dynamicHairpinParenthesisLeft="\uE542",t.dynamicHairpinParenthesisRight="\uE543",t.dynamicMF="\uE52D",t.dynamicMP="\uE52C",t.dynamicMessaDiVoce="\uE540",t.dynamicMezzo="\uE521",t.dynamicNiente="\uE526",t.dynamicNienteForHairpin="\uE541",t.dynamicPF="\uE52E",t.dynamicPP="\uE52B",t.dynamicPPP="\uE52A",t.dynamicPPPP="\uE529",t.dynamicPPPPP="\uE528",t.dynamicPPPPPP="\uE527",t.dynamicPiano="\uE520",t.dynamicRinforzando="\uE523",t.dynamicRinforzando1="\uE53C",t.dynamicRinforzando2="\uE53D",t.dynamicSforzando="\uE524",t.dynamicSforzando1="\uE536",t.dynamicSforzandoPianissimo="\uE538",t.dynamicSforzandoPiano="\uE537",t.dynamicSforzato="\uE539",t.dynamicSforzatoFF="\uE53B",t.dynamicSforzatoPiano="\uE53A",t.dynamicZ="\uE525",t.elecAudioChannelsEight="\uEB46",t.elecAudioChannelsFive="\uEB43",t.elecAudioChannelsFour="\uEB42",t.elecAudioChannelsOne="\uEB3E",t.elecAudioChannelsSeven="\uEB45",t.elecAudioChannelsSix="\uEB44",t.elecAudioChannelsThreeFrontal="\uEB40",t.elecAudioChannelsThreeSurround="\uEB41",t.elecAudioChannelsTwo="\uEB3F",t.elecAudioIn="\uEB49",t.elecAudioMono="\uEB3C",t.elecAudioOut="\uEB4A",t.elecAudioStereo="\uEB3D",t.elecCamera="\uEB1B",t.elecDataIn="\uEB4D",t.elecDataOut="\uEB4E",t.elecDisc="\uEB13",t.elecDownload="\uEB4F",t.elecEject="\uEB2B",t.elecFastForward="\uEB1F",t.elecHeadphones="\uEB11",t.elecHeadset="\uEB12",t.elecLineIn="\uEB47",t.elecLineOut="\uEB48",t.elecLoop="\uEB23",t.elecLoudspeaker="\uEB1A",t.elecMIDIController0="\uEB36",t.elecMIDIController100="\uEB3B",t.elecMIDIController20="\uEB37",t.elecMIDIController40="\uEB38",t.elecMIDIController60="\uEB39",t.elecMIDIController80="\uEB3A",t.elecMIDIIn="\uEB34",t.elecMIDIOut="\uEB35",t.elecMicrophone="\uEB10",t.elecMicrophoneMute="\uEB28",t.elecMicrophoneUnmute="\uEB29",t.elecMixingConsole="\uEB15",t.elecMonitor="\uEB18",t.elecMute="\uEB26",t.elecPause="\uEB1E",t.elecPlay="\uEB1C",t.elecPowerOnOff="\uEB2A",t.elecProjector="\uEB19",t.elecReplay="\uEB24",t.elecRewind="\uEB20",t.elecShuffle="\uEB25",t.elecSkipBackwards="\uEB22",t.elecSkipForwards="\uEB21",t.elecStop="\uEB1D",t.elecTape="\uEB14",t.elecUSB="\uEB16",t.elecUnmute="\uEB27",t.elecUpload="\uEB50",t.elecVideoCamera="\uEB17",t.elecVideoIn="\uEB4B",t.elecVideoOut="\uEB4C",t.elecVolumeFader="\uEB2C",t.elecVolumeFaderThumb="\uEB2D",t.elecVolumeLevel0="\uEB2E",t.elecVolumeLevel100="\uEB33",t.elecVolumeLevel20="\uEB2F",t.elecVolumeLevel40="\uEB30",t.elecVolumeLevel60="\uEB31",t.elecVolumeLevel80="\uEB32",t.fClef="\uE062",t.fClef15ma="\uE066",t.fClef15mb="\uE063",t.fClef8va="\uE065",t.fClef8vb="\uE064",t.fClefArrowDown="\uE068",t.fClefArrowUp="\uE067",t.fClefChange="\uE07C",t.fClefReversed="\uE076",t.fClefTurned="\uE077",t.fermataAbove="\uE4C0",t.fermataBelow="\uE4C1",t.fermataLongAbove="\uE4C6",t.fermataLongBelow="\uE4C7",t.fermataLongHenzeAbove="\uE4CA",t.fermataLongHenzeBelow="\uE4CB",t.fermataShortAbove="\uE4C4",t.fermataShortBelow="\uE4C5",t.fermataShortHenzeAbove="\uE4CC",t.fermataShortHenzeBelow="\uE4CD",t.fermataVeryLongAbove="\uE4C8",t.fermataVeryLongBelow="\uE4C9",t.fermataVeryShortAbove="\uE4C2",t.fermataVeryShortBelow="\uE4C3",t.figbass0="\uEA50",t.figbass1="\uEA51",t.figbass2="\uEA52",t.figbass2Raised="\uEA53",t.figbass3="\uEA54",t.figbass4="\uEA55",t.figbass4Raised="\uEA56",t.figbass5="\uEA57",t.figbass5Raised1="\uEA58",t.figbass5Raised2="\uEA59",t.figbass5Raised3="\uEA5A",t.figbass6="\uEA5B",t.figbass6Raised="\uEA5C",t.figbass6Raised2="\uEA6F",t.figbass7="\uEA5D",t.figbass7Diminished="\uECC0",t.figbass7Raised1="\uEA5E",t.figbass7Raised2="\uEA5F",t.figbass8="\uEA60",t.figbass9="\uEA61",t.figbass9Raised="\uEA62",t.figbassBracketLeft="\uEA68",t.figbassBracketRight="\uEA69",t.figbassCombiningLowering="\uEA6E",t.figbassCombiningRaising="\uEA6D",t.figbassDoubleFlat="\uEA63",t.figbassDoubleSharp="\uEA67",t.figbassFlat="\uEA64",t.figbassNatural="\uEA65",t.figbassParensLeft="\uEA6A",t.figbassParensRight="\uEA6B",t.figbassPlus="\uEA6C",t.figbassSharp="\uEA66",t.figbassTripleFlat="\uECC1",t.figbassTripleSharp="\uECC2",t.fingering0="\uED10",t.fingering0Italic="\uED80",t.fingering1="\uED11",t.fingering1Italic="\uED81",t.fingering2="\uED12",t.fingering2Italic="\uED82",t.fingering3="\uED13",t.fingering3Italic="\uED83",t.fingering4="\uED14",t.fingering4Italic="\uED84",t.fingering5="\uED15",t.fingering5Italic="\uED85",t.fingering6="\uED24",t.fingering6Italic="\uED86",t.fingering7="\uED25",t.fingering7Italic="\uED87",t.fingering8="\uED26",t.fingering8Italic="\uED88",t.fingering9="\uED27",t.fingering9Italic="\uED89",t.fingeringALower="\uED1B",t.fingeringCLower="\uED1C",t.fingeringELower="\uED1E",t.fingeringILower="\uED19",t.fingeringLeftBracket="\uED2A",t.fingeringLeftBracketItalic="\uED8C",t.fingeringLeftParenthesis="\uED28",t.fingeringLeftParenthesisItalic="\uED8A",t.fingeringMLower="\uED1A",t.fingeringMultipleNotes="\uED23",t.fingeringOLower="\uED1F",t.fingeringPLower="\uED17",t.fingeringQLower="\uED8E",t.fingeringRightBracket="\uED2B",t.fingeringRightBracketItalic="\uED8D",t.fingeringRightParenthesis="\uED29",t.fingeringRightParenthesisItalic="\uED8B",t.fingeringSLower="\uED8F",t.fingeringSeparatorMiddleDot="\uED2C",t.fingeringSeparatorMiddleDotWhite="\uED2D",t.fingeringSeparatorSlash="\uED2E",t.fingeringSubstitutionAbove="\uED20",t.fingeringSubstitutionBelow="\uED21",t.fingeringSubstitutionDash="\uED22",t.fingeringTLower="\uED18",t.fingeringTUpper="\uED16",t.fingeringXLower="\uED1D",t.flag1024thDown="\uE24F",t.flag1024thUp="\uE24E",t.flag128thDown="\uE249",t.flag128thUp="\uE248",t.flag16thDown="\uE243",t.flag16thUp="\uE242",t.flag256thDown="\uE24B",t.flag256thUp="\uE24A",t.flag32ndDown="\uE245",t.flag32ndUp="\uE244",t.flag512thDown="\uE24D",t.flag512thUp="\uE24C",t.flag64thDown="\uE247",t.flag64thUp="\uE246",t.flag8thDown="\uE241",t.flag8thUp="\uE240",t.flagInternalDown="\uE251",t.flagInternalUp="\uE250",t.fretboard3String="\uE850",t.fretboard3StringNut="\uE851",t.fretboard4String="\uE852",t.fretboard4StringNut="\uE853",t.fretboard5String="\uE854",t.fretboard5StringNut="\uE855",t.fretboard6String="\uE856",t.fretboard6StringNut="\uE857",t.fretboardFilledCircle="\uE858",t.fretboardO="\uE85A",t.fretboardX="\uE859",t.functionAngleLeft="\uEA93",t.functionAngleRight="\uEA94",t.functionBracketLeft="\uEA8F",t.functionBracketRight="\uEA90",t.functionDD="\uEA81",t.functionDLower="\uEA80",t.functionDUpper="\uEA7F",t.functionEight="\uEA78",t.functionFUpper="\uEA99",t.functionFive="\uEA75",t.functionFour="\uEA74",t.functionGLower="\uEA84",t.functionGUpper="\uEA83",t.functionGreaterThan="\uEA7C",t.functionILower="\uEA9B",t.functionIUpper="\uEA9A",t.functionKLower="\uEA9D",t.functionKUpper="\uEA9C",t.functionLLower="\uEA9F",t.functionLUpper="\uEA9E",t.functionLessThan="\uEA7A",t.functionMLower="\uED01",t.functionMUpper="\uED00",t.functionMinus="\uEA7B",t.functionNLower="\uEA86",t.functionNUpper="\uEA85",t.functionNUpperSuperscript="\uED02",t.functionNine="\uEA79",t.functionOne="\uEA71",t.functionPLower="\uEA88",t.functionPUpper="\uEA87",t.functionParensLeft="\uEA91",t.functionParensRight="\uEA92",t.functionPlus="\uEA98",t.functionRLower="\uED03",t.functionRepetition1="\uEA95",t.functionRepetition2="\uEA96",t.functionRing="\uEA97",t.functionSLower="\uEA8A",t.functionSSLower="\uEA7E",t.functionSSUpper="\uEA7D",t.functionSUpper="\uEA89",t.functionSeven="\uEA77",t.functionSix="\uEA76",t.functionSlashedDD="\uEA82",t.functionTLower="\uEA8C",t.functionTUpper="\uEA8B",t.functionThree="\uEA73",t.functionTwo="\uEA72",t.functionVLower="\uEA8E",t.functionVUpper="\uEA8D",t.functionZero="\uEA70",t.gClef="\uE050",t.gClef15ma="\uE054",t.gClef15mb="\uE051",t.gClef8va="\uE053",t.gClef8vb="\uE052",t.gClef8vbCClef="\uE056",t.gClef8vbOld="\uE055",t.gClef8vbParens="\uE057",t.gClefArrowDown="\uE05B",t.gClefArrowUp="\uE05A",t.gClefChange="\uE07A",t.gClefLigatedNumberAbove="\uE059",t.gClefLigatedNumberBelow="\uE058",t.gClefReversed="\uE073",t.gClefTurned="\uE074",t.glissandoDown="\uE586",t.glissandoUp="\uE585",t.graceNoteAcciaccaturaStemDown="\uE561",t.graceNoteAcciaccaturaStemUp="\uE560",t.graceNoteAppoggiaturaStemDown="\uE563",t.graceNoteAppoggiaturaStemUp="\uE562",t.graceNoteSlashStemDown="\uE565",t.graceNoteSlashStemUp="\uE564",t.guitarBarreFull="\uE848",t.guitarBarreHalf="\uE849",t.guitarClosePedal="\uE83F",t.guitarFadeIn="\uE843",t.guitarFadeOut="\uE844",t.guitarGolpe="\uE842",t.guitarHalfOpenPedal="\uE83E",t.guitarLeftHandTapping="\uE840",t.guitarOpenPedal="\uE83D",t.guitarRightHandTapping="\uE841",t.guitarShake="\uE832",t.guitarString0="\uE833",t.guitarString1="\uE834",t.guitarString10="\uE84A",t.guitarString11="\uE84B",t.guitarString12="\uE84C",t.guitarString13="\uE84D",t.guitarString2="\uE835",t.guitarString3="\uE836",t.guitarString4="\uE837",t.guitarString5="\uE838",t.guitarString6="\uE839",t.guitarString7="\uE83A",t.guitarString8="\uE83B",t.guitarString9="\uE83C",t.guitarStrumDown="\uE847",t.guitarStrumUp="\uE846",t.guitarVibratoBarDip="\uE831",t.guitarVibratoBarScoop="\uE830",t.guitarVibratoStroke="\uEAB2",t.guitarVolumeSwell="\uE845",t.guitarWideVibratoStroke="\uEAB3",t.handbellsBelltree="\uE81F",t.handbellsDamp3="\uE81E",t.handbellsEcho1="\uE81B",t.handbellsEcho2="\uE81C",t.handbellsGyro="\uE81D",t.handbellsHandMartellato="\uE812",t.handbellsMalletBellOnTable="\uE815",t.handbellsMalletBellSuspended="\uE814",t.handbellsMalletLft="\uE816",t.handbellsMartellato="\uE810",t.handbellsMartellatoLift="\uE811",t.handbellsMutedMartellato="\uE813",t.handbellsPluckLift="\uE817",t.handbellsSwing="\uE81A",t.handbellsSwingDown="\uE819",t.handbellsSwingUp="\uE818",t.handbellsTablePairBells="\uE821",t.handbellsTableSingleBell="\uE820",t.harpMetalRod="\uE68F",t.harpPedalCentered="\uE681",t.harpPedalDivider="\uE683",t.harpPedalLowered="\uE682",t.harpPedalRaised="\uE680",t.harpSalzedoAeolianAscending="\uE695",t.harpSalzedoAeolianDescending="\uE696",t.harpSalzedoDampAbove="\uE69A",t.harpSalzedoDampBelow="\uE699",t.harpSalzedoDampBothHands="\uE698",t.harpSalzedoDampLowStrings="\uE697",t.harpSalzedoFluidicSoundsLeft="\uE68D",t.harpSalzedoFluidicSoundsRight="\uE68E",t.harpSalzedoIsolatedSounds="\uE69C",t.harpSalzedoMetallicSounds="\uE688",t.harpSalzedoMetallicSoundsOneString="\uE69B",t.harpSalzedoMuffleTotally="\uE68C",t.harpSalzedoOboicFlux="\uE685",t.harpSalzedoPlayUpperEnd="\uE68A",t.harpSalzedoSlideWithSuppleness="\uE684",t.harpSalzedoSnareDrum="\uE69D",t.harpSalzedoTamTamSounds="\uE689",t.harpSalzedoThunderEffect="\uE686",t.harpSalzedoTimpanicSounds="\uE68B",t.harpSalzedoWhistlingSounds="\uE687",t.harpStringNoiseStem="\uE694",t.harpTuningKey="\uE690",t.harpTuningKeyGlissando="\uE693",t.harpTuningKeyHandle="\uE691",t.harpTuningKeyShank="\uE692",t.indianDrumClef="\uED70",t.kahnBackChug="\uEDE2",t.kahnBackFlap="\uEDD8",t.kahnBackRiff="\uEDE1",t.kahnBackRip="\uEDDA",t.kahnBallChange="\uEDC6",t.kahnBallDig="\uEDCD",t.kahnBrushBackward="\uEDA7",t.kahnBrushForward="\uEDA6",t.kahnChug="\uEDDD",t.kahnClap="\uEDB8",t.kahnDoubleSnap="\uEDBA",t.kahnDoubleWing="\uEDEB",t.kahnDrawStep="\uEDB2",t.kahnDrawTap="\uEDB3",t.kahnFlam="\uEDCF",t.kahnFlap="\uEDD5",t.kahnFlapStep="\uEDD7",t.kahnFlat="\uEDA9",t.kahnFleaHop="\uEDB0",t.kahnFleaTap="\uEDB1",t.kahnGraceTap="\uEDA8",t.kahnGraceTapChange="\uEDD1",t.kahnGraceTapHop="\uEDD0",t.kahnGraceTapStamp="\uEDD3",t.kahnHeel="\uEDAA",t.kahnHeelChange="\uEDC9",t.kahnHeelClick="\uEDBB",t.kahnHeelDrop="\uEDB6",t.kahnHeelStep="\uEDC4",t.kahnHeelTap="\uEDCB",t.kahnHop="\uEDA2",t.kahnJumpApart="\uEDA5",t.kahnJumpTogether="\uEDA4",t.kahnKneeInward="\uEDAD",t.kahnKneeOutward="\uEDAC",t.kahnLeap="\uEDA3",t.kahnLeapFlatFoot="\uEDD2",t.kahnLeapHeelClick="\uEDD4",t.kahnLeftCatch="\uEDBF",t.kahnLeftCross="\uEDBD",t.kahnLeftFoot="\uEDEE",t.kahnLeftToeStrike="\uEDC1",t.kahnLeftTurn="\uEDF0",t.kahnOverTheTop="\uEDEC",t.kahnOverTheTopTap="\uEDED",t.kahnPull="\uEDE3",t.kahnPush="\uEDDE",t.kahnRiff="\uEDE0",t.kahnRiffle="\uEDE7",t.kahnRightCatch="\uEDC0",t.kahnRightCross="\uEDBE",t.kahnRightFoot="\uEDEF",t.kahnRightToeStrike="\uEDC2",t.kahnRightTurn="\uEDF1",t.kahnRip="\uEDD6",t.kahnRipple="\uEDE8",t.kahnScrape="\uEDAE",t.kahnScuff="\uEDDC",t.kahnScuffle="\uEDE6",t.kahnShuffle="\uEDE5",t.kahnSlam="\uEDCE",t.kahnSlap="\uEDD9",t.kahnSlideStep="\uEDB4",t.kahnSlideTap="\uEDB5",t.kahnSnap="\uEDB9",t.kahnStamp="\uEDC3",t.kahnStampStamp="\uEDC8",t.kahnStep="\uEDA0",t.kahnStepStamp="\uEDC7",t.kahnStomp="\uEDCA",t.kahnStompBrush="\uEDDB",t.kahnTap="\uEDA1",t.kahnToe="\uEDAB",t.kahnToeClick="\uEDBC",t.kahnToeDrop="\uEDB7",t.kahnToeStep="\uEDC5",t.kahnToeTap="\uEDCC",t.kahnTrench="\uEDAF",t.kahnWing="\uEDE9",t.kahnWingChange="\uEDEA",t.kahnZank="\uEDE4",t.kahnZink="\uEDDF",t.keyboardBebung2DotsAbove="\uE668",t.keyboardBebung2DotsBelow="\uE669",t.keyboardBebung3DotsAbove="\uE66A",t.keyboardBebung3DotsBelow="\uE66B",t.keyboardBebung4DotsAbove="\uE66C",t.keyboardBebung4DotsBelow="\uE66D",t.keyboardLeftPedalPictogram="\uE65E",t.keyboardMiddlePedalPictogram="\uE65F",t.keyboardPedalD="\uE653",t.keyboardPedalDot="\uE654",t.keyboardPedalE="\uE652",t.keyboardPedalHalf="\uE656",t.keyboardPedalHalf2="\uE65B",t.keyboardPedalHalf3="\uE65C",t.keyboardPedalHeel1="\uE661",t.keyboardPedalHeel2="\uE662",t.keyboardPedalHeel3="\uE663",t.keyboardPedalHeelToToe="\uE674",t.keyboardPedalHeelToe="\uE666",t.keyboardPedalHookEnd="\uE673",t.keyboardPedalHookStart="\uE672",t.keyboardPedalHyphen="\uE658",t.keyboardPedalP="\uE651",t.keyboardPedalParensLeft="\uE676",t.keyboardPedalParensRight="\uE677",t.keyboardPedalPed="\uE650",t.keyboardPedalS="\uE65A",t.keyboardPedalSost="\uE659",t.keyboardPedalToe1="\uE664",t.keyboardPedalToe2="\uE665",t.keyboardPedalToeToHeel="\uE675",t.keyboardPedalUp="\uE655",t.keyboardPedalUpNotch="\uE657",t.keyboardPedalUpSpecial="\uE65D",t.keyboardPlayWithLH="\uE670",t.keyboardPlayWithLHEnd="\uE671",t.keyboardPlayWithRH="\uE66E",t.keyboardPlayWithRHEnd="\uE66F",t.keyboardPluckInside="\uE667",t.keyboardRightPedalPictogram="\uE660",t.kievanAccidentalFlat="\uEC3E",t.kievanAccidentalSharp="\uEC3D",t.kievanAugmentationDot="\uEC3C",t.kievanCClef="\uEC30",t.kievanEndingSymbol="\uEC31",t.kievanNote8thStemDown="\uEC3A",t.kievanNote8thStemUp="\uEC39",t.kievanNoteBeam="\uEC3B",t.kievanNoteHalfStaffLine="\uEC35",t.kievanNoteHalfStaffSpace="\uEC36",t.kievanNoteQuarterStemDown="\uEC38",t.kievanNoteQuarterStemUp="\uEC37",t.kievanNoteReciting="\uEC32",t.kievanNoteWhole="\uEC33",t.kievanNoteWholeFinal="\uEC34",t.kodalyHandDo="\uEC40",t.kodalyHandFa="\uEC43",t.kodalyHandLa="\uEC45",t.kodalyHandMi="\uEC42",t.kodalyHandRe="\uEC41",t.kodalyHandSo="\uEC44",t.kodalyHandTi="\uEC46",t.leftRepeatSmall="\uE04C",t.legerLine="\uE022",t.legerLineNarrow="\uE024",t.legerLineWide="\uE023",t.luteBarlineEndRepeat="\uEBA4",t.luteBarlineFinal="\uEBA5",t.luteBarlineStartRepeat="\uEBA3",t.luteDuration16th="\uEBAB",t.luteDuration32nd="\uEBAC",t.luteDuration8th="\uEBAA",t.luteDurationDoubleWhole="\uEBA6",t.luteDurationHalf="\uEBA8",t.luteDurationQuarter="\uEBA9",t.luteDurationWhole="\uEBA7",t.luteFingeringRHFirst="\uEBAE",t.luteFingeringRHSecond="\uEBAF",t.luteFingeringRHThird="\uEBB0",t.luteFingeringRHThumb="\uEBAD",t.luteFrench10thCourse="\uEBD0",t.luteFrench7thCourse="\uEBCD",t.luteFrench8thCourse="\uEBCE",t.luteFrench9thCourse="\uEBCF",t.luteFrenchAppoggiaturaAbove="\uEBD5",t.luteFrenchAppoggiaturaBelow="\uEBD4",t.luteFrenchFretA="\uEBC0",t.luteFrenchFretB="\uEBC1",t.luteFrenchFretC="\uEBC2",t.luteFrenchFretD="\uEBC3",t.luteFrenchFretE="\uEBC4",t.luteFrenchFretF="\uEBC5",t.luteFrenchFretG="\uEBC6",t.luteFrenchFretH="\uEBC7",t.luteFrenchFretI="\uEBC8",t.luteFrenchFretK="\uEBC9",t.luteFrenchFretL="\uEBCA",t.luteFrenchFretM="\uEBCB",t.luteFrenchFretN="\uEBCC",t.luteFrenchMordentInverted="\uEBD3",t.luteFrenchMordentLower="\uEBD2",t.luteFrenchMordentUpper="\uEBD1",t.luteGermanALower="\uEC00",t.luteGermanAUpper="\uEC17",t.luteGermanBLower="\uEC01",t.luteGermanBUpper="\uEC18",t.luteGermanCLower="\uEC02",t.luteGermanCUpper="\uEC19",t.luteGermanDLower="\uEC03",t.luteGermanDUpper="\uEC1A",t.luteGermanELower="\uEC04",t.luteGermanEUpper="\uEC1B",t.luteGermanFLower="\uEC05",t.luteGermanFUpper="\uEC1C",t.luteGermanGLower="\uEC06",t.luteGermanGUpper="\uEC1D",t.luteGermanHLower="\uEC07",t.luteGermanHUpper="\uEC1E",t.luteGermanILower="\uEC08",t.luteGermanIUpper="\uEC1F",t.luteGermanKLower="\uEC09",t.luteGermanKUpper="\uEC20",t.luteGermanLLower="\uEC0A",t.luteGermanLUpper="\uEC21",t.luteGermanMLower="\uEC0B",t.luteGermanMUpper="\uEC22",t.luteGermanNLower="\uEC0C",t.luteGermanNUpper="\uEC23",t.luteGermanOLower="\uEC0D",t.luteGermanPLower="\uEC0E",t.luteGermanQLower="\uEC0F",t.luteGermanRLower="\uEC10",t.luteGermanSLower="\uEC11",t.luteGermanTLower="\uEC12",t.luteGermanVLower="\uEC13",t.luteGermanXLower="\uEC14",t.luteGermanYLower="\uEC15",t.luteGermanZLower="\uEC16",t.luteItalianClefCSolFaUt="\uEBF1",t.luteItalianClefFFaUt="\uEBF0",t.luteItalianFret0="\uEBE0",t.luteItalianFret1="\uEBE1",t.luteItalianFret2="\uEBE2",t.luteItalianFret3="\uEBE3",t.luteItalianFret4="\uEBE4",t.luteItalianFret5="\uEBE5",t.luteItalianFret6="\uEBE6",t.luteItalianFret7="\uEBE7",t.luteItalianFret8="\uEBE8",t.luteItalianFret9="\uEBE9",t.luteItalianHoldFinger="\uEBF4",t.luteItalianHoldNote="\uEBF3",t.luteItalianReleaseFinger="\uEBF5",t.luteItalianTempoFast="\uEBEA",t.luteItalianTempoNeitherFastNorSlow="\uEBEC",t.luteItalianTempoSlow="\uEBED",t.luteItalianTempoSomewhatFast="\uEBEB",t.luteItalianTempoVerySlow="\uEBEE",t.luteItalianTimeTriple="\uEBEF",t.luteItalianTremolo="\uEBF2",t.luteItalianVibrato="\uEBF6",t.luteStaff6Lines="\uEBA0",t.luteStaff6LinesNarrow="\uEBA2",t.luteStaff6LinesWide="\uEBA1",t.lyricsElision="\uE551",t.lyricsElisionNarrow="\uE550",t.lyricsElisionWide="\uE552",t.lyricsHyphenBaseline="\uE553",t.lyricsHyphenBaselineNonBreaking="\uE554",t.lyricsTextRepeat="\uE555",t.medRenFlatHardB="\uE9E1",t.medRenFlatSoftB="\uE9E0",t.medRenFlatWithDot="\uE9E4",t.medRenGClefCMN="\uEA24",t.medRenLiquescenceCMN="\uEA22",t.medRenLiquescentAscCMN="\uEA26",t.medRenLiquescentDescCMN="\uEA27",t.medRenNatural="\uE9E2",t.medRenNaturalWithCross="\uE9E5",t.medRenOriscusCMN="\uEA2A",t.medRenPlicaCMN="\uEA23",t.medRenPunctumCMN="\uEA25",t.medRenQuilismaCMN="\uEA28",t.medRenSharpCroix="\uE9E3",t.medRenStrophicusCMN="\uEA29",t.mensuralAlterationSign="\uEA10",t.mensuralBlackBrevis="\uE952",t.mensuralBlackBrevisVoid="\uE956",t.mensuralBlackDragma="\uE95A",t.mensuralBlackLonga="\uE951",t.mensuralBlackMaxima="\uE950",t.mensuralBlackMinima="\uE954",t.mensuralBlackMinimaVoid="\uE958",t.mensuralBlackSemibrevis="\uE953",t.mensuralBlackSemibrevisCaudata="\uE959",t.mensuralBlackSemibrevisOblique="\uE95B",t.mensuralBlackSemibrevisVoid="\uE957",t.mensuralBlackSemiminima="\uE955",t.mensuralCclef="\uE905",t.mensuralCclefPetrucciPosHigh="\uE90A",t.mensuralCclefPetrucciPosHighest="\uE90B",t.mensuralCclefPetrucciPosLow="\uE908",t.mensuralCclefPetrucciPosLowest="\uE907",t.mensuralCclefPetrucciPosMiddle="\uE909",t.mensuralColorationEndRound="\uEA0F",t.mensuralColorationEndSquare="\uEA0D",t.mensuralColorationStartRound="\uEA0E",t.mensuralColorationStartSquare="\uEA0C",t.mensuralCombStemDiagonal="\uE940",t.mensuralCombStemDown="\uE93F",t.mensuralCombStemDownFlagExtended="\uE948",t.mensuralCombStemDownFlagFlared="\uE946",t.mensuralCombStemDownFlagFusa="\uE94C",t.mensuralCombStemDownFlagLeft="\uE944",t.mensuralCombStemDownFlagRight="\uE942",t.mensuralCombStemDownFlagSemiminima="\uE94A",t.mensuralCombStemUp="\uE93E",t.mensuralCombStemUpFlagExtended="\uE947",t.mensuralCombStemUpFlagFlared="\uE945",t.mensuralCombStemUpFlagFusa="\uE94B",t.mensuralCombStemUpFlagLeft="\uE943",t.mensuralCombStemUpFlagRight="\uE941",t.mensuralCombStemUpFlagSemiminima="\uE949",t.mensuralCustosCheckmark="\uEA0A",t.mensuralCustosDown="\uEA03",t.mensuralCustosTurn="\uEA0B",t.mensuralCustosUp="\uEA02",t.mensuralFclef="\uE903",t.mensuralFclefPetrucci="\uE904",t.mensuralGclef="\uE900",t.mensuralGclefPetrucci="\uE901",t.mensuralModusImperfectumVert="\uE92D",t.mensuralModusPerfectumVert="\uE92C",t.mensuralNoteheadLongaBlack="\uE934",t.mensuralNoteheadLongaBlackVoid="\uE936",t.mensuralNoteheadLongaVoid="\uE935",t.mensuralNoteheadLongaWhite="\uE937",t.mensuralNoteheadMaximaBlack="\uE930",t.mensuralNoteheadMaximaBlackVoid="\uE932",t.mensuralNoteheadMaximaVoid="\uE931",t.mensuralNoteheadMaximaWhite="\uE933",t.mensuralNoteheadMinimaWhite="\uE93C",t.mensuralNoteheadSemibrevisBlack="\uE938",t.mensuralNoteheadSemibrevisBlackVoid="\uE93A",t.mensuralNoteheadSemibrevisBlackVoidTurned="\uE93B",t.mensuralNoteheadSemibrevisVoid="\uE939",t.mensuralNoteheadSemiminimaWhite="\uE93D",t.mensuralObliqueAsc2ndBlack="\uE970",t.mensuralObliqueAsc2ndBlackVoid="\uE972",t.mensuralObliqueAsc2ndVoid="\uE971",t.mensuralObliqueAsc2ndWhite="\uE973",t.mensuralObliqueAsc3rdBlack="\uE974",t.mensuralObliqueAsc3rdBlackVoid="\uE976",t.mensuralObliqueAsc3rdVoid="\uE975",t.mensuralObliqueAsc3rdWhite="\uE977",t.mensuralObliqueAsc4thBlack="\uE978",t.mensuralObliqueAsc4thBlackVoid="\uE97A",t.mensuralObliqueAsc4thVoid="\uE979",t.mensuralObliqueAsc4thWhite="\uE97B",t.mensuralObliqueAsc5thBlack="\uE97C",t.mensuralObliqueAsc5thBlackVoid="\uE97E",t.mensuralObliqueAsc5thVoid="\uE97D",t.mensuralObliqueAsc5thWhite="\uE97F",t.mensuralObliqueDesc2ndBlack="\uE980",t.mensuralObliqueDesc2ndBlackVoid="\uE982",t.mensuralObliqueDesc2ndVoid="\uE981",t.mensuralObliqueDesc2ndWhite="\uE983",t.mensuralObliqueDesc3rdBlack="\uE984",t.mensuralObliqueDesc3rdBlackVoid="\uE986",t.mensuralObliqueDesc3rdVoid="\uE985",t.mensuralObliqueDesc3rdWhite="\uE987",t.mensuralObliqueDesc4thBlack="\uE988",t.mensuralObliqueDesc4thBlackVoid="\uE98A",t.mensuralObliqueDesc4thVoid="\uE989",t.mensuralObliqueDesc4thWhite="\uE98B",t.mensuralObliqueDesc5thBlack="\uE98C",t.mensuralObliqueDesc5thBlackVoid="\uE98E",t.mensuralObliqueDesc5thVoid="\uE98D",t.mensuralObliqueDesc5thWhite="\uE98F",t.mensuralProlation1="\uE910",t.mensuralProlation10="\uE919",t.mensuralProlation11="\uE91A",t.mensuralProlation2="\uE911",t.mensuralProlation3="\uE912",t.mensuralProlation4="\uE913",t.mensuralProlation5="\uE914",t.mensuralProlation6="\uE915",t.mensuralProlation7="\uE916",t.mensuralProlation8="\uE917",t.mensuralProlation9="\uE918",t.mensuralProlationCombiningDot="\uE920",t.mensuralProlationCombiningDotVoid="\uE924",t.mensuralProlationCombiningStroke="\uE925",t.mensuralProlationCombiningThreeDots="\uE922",t.mensuralProlationCombiningThreeDotsTri="\uE923",t.mensuralProlationCombiningTwoDots="\uE921",t.mensuralProportion1="\uE926",t.mensuralProportion2="\uE927",t.mensuralProportion3="\uE928",t.mensuralProportion4="\uE929",t.mensuralProportion5="\uEE90",t.mensuralProportion6="\uEE91",t.mensuralProportion7="\uEE92",t.mensuralProportion8="\uEE93",t.mensuralProportion9="\uEE94",t.mensuralProportionMajor="\uE92B",t.mensuralProportionMinor="\uE92A",t.mensuralProportionProportioDupla1="\uE91C",t.mensuralProportionProportioDupla2="\uE91D",t.mensuralProportionProportioQuadrupla="\uE91F",t.mensuralProportionProportioTripla="\uE91E",t.mensuralProportionTempusPerfectum="\uE91B",t.mensuralRestBrevis="\uE9F3",t.mensuralRestFusa="\uE9F7",t.mensuralRestLongaImperfecta="\uE9F2",t.mensuralRestLongaPerfecta="\uE9F1",t.mensuralRestMaxima="\uE9F0",t.mensuralRestMinima="\uE9F5",t.mensuralRestSemibrevis="\uE9F4",t.mensuralRestSemifusa="\uE9F8",t.mensuralRestSemiminima="\uE9F6",t.mensuralSignumDown="\uEA01",t.mensuralSignumUp="\uEA00",t.mensuralTempusImperfectumHoriz="\uE92F",t.mensuralTempusPerfectumHoriz="\uE92E",t.mensuralWhiteBrevis="\uE95E",t.mensuralWhiteFusa="\uE961",t.mensuralWhiteLonga="\uE95D",t.mensuralWhiteMaxima="\uE95C",t.mensuralWhiteMinima="\uE95F",t.mensuralWhiteSemibrevis="\uE962",t.mensuralWhiteSemiminima="\uE960",t.metAugmentationDot="\uECB7",t.metNote1024thDown="\uECB6",t.metNote1024thUp="\uECB5",t.metNote128thDown="\uECB0",t.metNote128thUp="\uECAF",t.metNote16thDown="\uECAA",t.metNote16thUp="\uECA9",t.metNote256thDown="\uECB2",t.metNote256thUp="\uECB1",t.metNote32ndDown="\uECAC",t.metNote32ndUp="\uECAB",t.metNote512thDown="\uECB4",t.metNote512thUp="\uECB3",t.metNote64thDown="\uECAE",t.metNote64thUp="\uECAD",t.metNote8thDown="\uECA8",t.metNote8thUp="\uECA7",t.metNoteDoubleWhole="\uECA0",t.metNoteDoubleWholeSquare="\uECA1",t.metNoteHalfDown="\uECA4",t.metNoteHalfUp="\uECA3",t.metNoteQuarterDown="\uECA6",t.metNoteQuarterUp="\uECA5",t.metNoteWhole="\uECA2",t.metricModulationArrowLeft="\uEC63",t.metricModulationArrowRight="\uEC64",t.miscDoNotCopy="\uEC61",t.miscDoNotPhotocopy="\uEC60",t.miscEyeglasses="\uEC62",t.note1024thDown="\uE1E6",t.note1024thUp="\uE1E5",t.note128thDown="\uE1E0",t.note128thUp="\uE1DF",t.note16thDown="\uE1DA",t.note16thUp="\uE1D9",t.note256thDown="\uE1E2",t.note256thUp="\uE1E1",t.note32ndDown="\uE1DC",t.note32ndUp="\uE1DB",t.note512thDown="\uE1E4",t.note512thUp="\uE1E3",t.note64thDown="\uE1DE",t.note64thUp="\uE1DD",t.note8thDown="\uE1D8",t.note8thUp="\uE1D7",t.noteABlack="\uE197",t.noteAFlatBlack="\uE196",t.noteAFlatHalf="\uE17F",t.noteAFlatWhole="\uE168",t.noteAHalf="\uE180",t.noteASharpBlack="\uE198",t.noteASharpHalf="\uE181",t.noteASharpWhole="\uE16A",t.noteAWhole="\uE169",t.noteBBlack="\uE19A",t.noteBFlatBlack="\uE199",t.noteBFlatHalf="\uE182",t.noteBFlatWhole="\uE16B",t.noteBHalf="\uE183",t.noteBSharpBlack="\uE19B",t.noteBSharpHalf="\uE184",t.noteBSharpWhole="\uE16D",t.noteBWhole="\uE16C",t.noteCBlack="\uE19D",t.noteCFlatBlack="\uE19C",t.noteCFlatHalf="\uE185",t.noteCFlatWhole="\uE16E",t.noteCHalf="\uE186",t.noteCSharpBlack="\uE19E",t.noteCSharpHalf="\uE187",t.noteCSharpWhole="\uE170",t.noteCWhole="\uE16F",t.noteDBlack="\uE1A0",t.noteDFlatBlack="\uE19F",t.noteDFlatHalf="\uE188",t.noteDFlatWhole="\uE171",t.noteDHalf="\uE189",t.noteDSharpBlack="\uE1A1",t.noteDSharpHalf="\uE18A",t.noteDSharpWhole="\uE173",t.noteDWhole="\uE172",t.noteDiBlack="\uEEF2",t.noteDiHalf="\uEEE9",t.noteDiWhole="\uEEE0",t.noteDoBlack="\uE160",t.noteDoHalf="\uE158",t.noteDoWhole="\uE150",t.noteDoubleWhole="\uE1D0",t.noteDoubleWholeSquare="\uE1D1",t.noteEBlack="\uE1A3",t.noteEFlatBlack="\uE1A2",t.noteEFlatHalf="\uE18B",t.noteEFlatWhole="\uE174",t.noteEHalf="\uE18C",t.noteESharpBlack="\uE1A4",t.noteESharpHalf="\uE18D",t.noteESharpWhole="\uE176",t.noteEWhole="\uE175",t.noteEmptyBlack="\uE1AF",t.noteEmptyHalf="\uE1AE",t.noteEmptyWhole="\uE1AD",t.noteFBlack="\uE1A6",t.noteFFlatBlack="\uE1A5",t.noteFFlatHalf="\uE18E",t.noteFFlatWhole="\uE177",t.noteFHalf="\uE18F",t.noteFSharpBlack="\uE1A7",t.noteFSharpHalf="\uE190",t.noteFSharpWhole="\uE179",t.noteFWhole="\uE178",t.noteFaBlack="\uE163",t.noteFaHalf="\uE15B",t.noteFaWhole="\uE153",t.noteFiBlack="\uEEF6",t.noteFiHalf="\uEEED",t.noteFiWhole="\uEEE4",t.noteGBlack="\uE1A9",t.noteGFlatBlack="\uE1A8",t.noteGFlatHalf="\uE191",t.noteGFlatWhole="\uE17A",t.noteGHalf="\uE192",t.noteGSharpBlack="\uE1AA",t.noteGSharpHalf="\uE193",t.noteGSharpWhole="\uE17C",t.noteGWhole="\uE17B",t.noteHBlack="\uE1AB",t.noteHHalf="\uE194",t.noteHSharpBlack="\uE1AC",t.noteHSharpHalf="\uE195",t.noteHSharpWhole="\uE17E",t.noteHWhole="\uE17D",t.noteHalfDown="\uE1D4",t.noteHalfUp="\uE1D3",t.noteLaBlack="\uE165",t.noteLaHalf="\uE15D",t.noteLaWhole="\uE155",t.noteLeBlack="\uEEF9",t.noteLeHalf="\uEEF0",t.noteLeWhole="\uEEE7",t.noteLiBlack="\uEEF8",t.noteLiHalf="\uEEEF",t.noteLiWhole="\uEEE6",t.noteMeBlack="\uEEF5",t.noteMeHalf="\uEEEC",t.noteMeWhole="\uEEE3",t.noteMiBlack="\uE162",t.noteMiHalf="\uE15A",t.noteMiWhole="\uE152",t.noteQuarterDown="\uE1D6",t.noteQuarterUp="\uE1D5",t.noteRaBlack="\uEEF4",t.noteRaHalf="\uEEEB",t.noteRaWhole="\uEEE2",t.noteReBlack="\uE161",t.noteReHalf="\uE159",t.noteReWhole="\uE151",t.noteRiBlack="\uEEF3",t.noteRiHalf="\uEEEA",t.noteRiWhole="\uEEE1",t.noteSeBlack="\uEEF7",t.noteSeHalf="\uEEEE",t.noteSeWhole="\uEEE5",t.noteShapeArrowheadLeftBlack="\uE1C9",t.noteShapeArrowheadLeftDoubleWhole="\uECDC",t.noteShapeArrowheadLeftWhite="\uE1C8",t.noteShapeDiamondBlack="\uE1B9",t.noteShapeDiamondDoubleWhole="\uECD4",t.noteShapeDiamondWhite="\uE1B8",t.noteShapeIsoscelesTriangleBlack="\uE1C5",t.noteShapeIsoscelesTriangleDoubleWhole="\uECDA",t.noteShapeIsoscelesTriangleWhite="\uE1C4",t.noteShapeKeystoneBlack="\uE1C1",t.noteShapeKeystoneDoubleWhole="\uECD8",t.noteShapeKeystoneWhite="\uE1C0",t.noteShapeMoonBlack="\uE1BD",t.noteShapeMoonDoubleWhole="\uECD6",t.noteShapeMoonLeftBlack="\uE1C7",t.noteShapeMoonLeftDoubleWhole="\uECDB",t.noteShapeMoonLeftWhite="\uE1C6",t.noteShapeMoonWhite="\uE1BC",t.noteShapeQuarterMoonBlack="\uE1C3",t.noteShapeQuarterMoonDoubleWhole="\uECD9",t.noteShapeQuarterMoonWhite="\uE1C2",t.noteShapeRoundBlack="\uE1B1",t.noteShapeRoundDoubleWhole="\uECD0",t.noteShapeRoundWhite="\uE1B0",t.noteShapeSquareBlack="\uE1B3",t.noteShapeSquareDoubleWhole="\uECD1",t.noteShapeSquareWhite="\uE1B2",t.noteShapeTriangleLeftBlack="\uE1B7",t.noteShapeTriangleLeftDoubleWhole="\uECD3",t.noteShapeTriangleLeftWhite="\uE1B6",t.noteShapeTriangleRightBlack="\uE1B5",t.noteShapeTriangleRightDoubleWhole="\uECD2",t.noteShapeTriangleRightWhite="\uE1B4",t.noteShapeTriangleRoundBlack="\uE1BF",t.noteShapeTriangleRoundDoubleWhole="\uECD7",t.noteShapeTriangleRoundLeftBlack="\uE1CB",t.noteShapeTriangleRoundLeftDoubleWhole="\uECDD",t.noteShapeTriangleRoundLeftWhite="\uE1CA",t.noteShapeTriangleRoundWhite="\uE1BE",t.noteShapeTriangleUpBlack="\uE1BB",t.noteShapeTriangleUpDoubleWhole="\uECD5",t.noteShapeTriangleUpWhite="\uE1BA",t.noteSiBlack="\uE167",t.noteSiHalf="\uE15F",t.noteSiWhole="\uE157",t.noteSoBlack="\uE164",t.noteSoHalf="\uE15C",t.noteSoWhole="\uE154",t.noteTeBlack="\uEEFA",t.noteTeHalf="\uEEF1",t.noteTeWhole="\uEEE8",t.noteTiBlack="\uE166",t.noteTiHalf="\uE15E",t.noteTiWhole="\uE156",t.noteWhole="\uE1D2",t.noteheadBlack="\uE0A4",t.noteheadCircleSlash="\uE0F7",t.noteheadCircleX="\uE0B3",t.noteheadCircleXDoubleWhole="\uE0B0",t.noteheadCircleXHalf="\uE0B2",t.noteheadCircleXWhole="\uE0B1",t.noteheadCircledBlack="\uE0E4",t.noteheadCircledBlackLarge="\uE0E8",t.noteheadCircledDoubleWhole="\uE0E7",t.noteheadCircledDoubleWholeLarge="\uE0EB",t.noteheadCircledHalf="\uE0E5",t.noteheadCircledHalfLarge="\uE0E9",t.noteheadCircledWhole="\uE0E6",t.noteheadCircledWholeLarge="\uE0EA",t.noteheadCircledXLarge="\uE0EC",t.noteheadClusterDoubleWhole2nd="\uE124",t.noteheadClusterDoubleWhole3rd="\uE128",t.noteheadClusterDoubleWholeBottom="\uE12E",t.noteheadClusterDoubleWholeMiddle="\uE12D",t.noteheadClusterDoubleWholeTop="\uE12C",t.noteheadClusterHalf2nd="\uE126",t.noteheadClusterHalf3rd="\uE12A",t.noteheadClusterHalfBottom="\uE134",t.noteheadClusterHalfMiddle="\uE133",t.noteheadClusterHalfTop="\uE132",t.noteheadClusterQuarter2nd="\uE127",t.noteheadClusterQuarter3rd="\uE12B",t.noteheadClusterQuarterBottom="\uE137",t.noteheadClusterQuarterMiddle="\uE136",t.noteheadClusterQuarterTop="\uE135",t.noteheadClusterRoundBlack="\uE123",t.noteheadClusterRoundWhite="\uE122",t.noteheadClusterSquareBlack="\uE121",t.noteheadClusterSquareWhite="\uE120",t.noteheadClusterWhole2nd="\uE125",t.noteheadClusterWhole3rd="\uE129",t.noteheadClusterWholeBottom="\uE131",t.noteheadClusterWholeMiddle="\uE130",t.noteheadClusterWholeTop="\uE12F",t.noteheadCowellEleventhNoteSeriesHalf="\uEEAE",t.noteheadCowellEleventhNoteSeriesWhole="\uEEAD",t.noteheadCowellEleventhSeriesBlack="\uEEAF",t.noteheadCowellFifteenthNoteSeriesBlack="\uEEB5",t.noteheadCowellFifteenthNoteSeriesHalf="\uEEB4",t.noteheadCowellFifteenthNoteSeriesWhole="\uEEB3",t.noteheadCowellFifthNoteSeriesBlack="\uEEA6",t.noteheadCowellFifthNoteSeriesHalf="\uEEA5",t.noteheadCowellFifthNoteSeriesWhole="\uEEA4",t.noteheadCowellNinthNoteSeriesBlack="\uEEAC",t.noteheadCowellNinthNoteSeriesHalf="\uEEAB",t.noteheadCowellNinthNoteSeriesWhole="\uEEAA",t.noteheadCowellSeventhNoteSeriesBlack="\uEEA9",t.noteheadCowellSeventhNoteSeriesHalf="\uEEA8",t.noteheadCowellSeventhNoteSeriesWhole="\uEEA7",t.noteheadCowellThirdNoteSeriesBlack="\uEEA3",t.noteheadCowellThirdNoteSeriesHalf="\uEEA2",t.noteheadCowellThirdNoteSeriesWhole="\uEEA1",t.noteheadCowellThirteenthNoteSeriesBlack="\uEEB2",t.noteheadCowellThirteenthNoteSeriesHalf="\uEEB1",t.noteheadCowellThirteenthNoteSeriesWhole="\uEEB0",t.noteheadDiamondBlack="\uE0DB",t.noteheadDiamondBlackOld="\uE0E2",t.noteheadDiamondBlackWide="\uE0DC",t.noteheadDiamondClusterBlack2nd="\uE139",t.noteheadDiamondClusterBlack3rd="\uE13B",t.noteheadDiamondClusterBlackBottom="\uE141",t.noteheadDiamondClusterBlackMiddle="\uE140",t.noteheadDiamondClusterBlackTop="\uE13F",t.noteheadDiamondClusterWhite2nd="\uE138",t.noteheadDiamondClusterWhite3rd="\uE13A",t.noteheadDiamondClusterWhiteBottom="\uE13E",t.noteheadDiamondClusterWhiteMiddle="\uE13D",t.noteheadDiamondClusterWhiteTop="\uE13C",t.noteheadDiamondDoubleWhole="\uE0D7",t.noteheadDiamondDoubleWholeOld="\uE0DF",t.noteheadDiamondHalf="\uE0D9",t.noteheadDiamondHalfFilled="\uE0E3",t.noteheadDiamondHalfOld="\uE0E1",t.noteheadDiamondHalfWide="\uE0DA",t.noteheadDiamondOpen="\uE0FC",t.noteheadDiamondWhite="\uE0DD",t.noteheadDiamondWhiteWide="\uE0DE",t.noteheadDiamondWhole="\uE0D8",t.noteheadDiamondWholeOld="\uE0E0",t.noteheadDoubleWhole="\uE0A0",t.noteheadDoubleWholeSquare="\uE0A1",t.noteheadDoubleWholeWithX="\uE0B4",t.noteheadHalf="\uE0A3",t.noteheadHalfFilled="\uE0FB",t.noteheadHalfWithX="\uE0B6",t.noteheadHeavyX="\uE0F8",t.noteheadHeavyXHat="\uE0F9",t.noteheadLargeArrowDownBlack="\uE0F4",t.noteheadLargeArrowDownDoubleWhole="\uE0F1",t.noteheadLargeArrowDownHalf="\uE0F3",t.noteheadLargeArrowDownWhole="\uE0F2",t.noteheadLargeArrowUpBlack="\uE0F0",t.noteheadLargeArrowUpDoubleWhole="\uE0ED",t.noteheadLargeArrowUpHalf="\uE0EF",t.noteheadLargeArrowUpWhole="\uE0EE",t.noteheadMoonBlack="\uE0CB",t.noteheadMoonWhite="\uE0CA",t.noteheadNancarrowSine="\uEEA0",t.noteheadNull="\uE0A5",t.noteheadParenthesis="\uE0CE",t.noteheadParenthesisLeft="\uE0F5",t.noteheadParenthesisRight="\uE0F6",t.noteheadPlusBlack="\uE0AF",t.noteheadPlusDoubleWhole="\uE0AC",t.noteheadPlusHalf="\uE0AE",t.noteheadPlusWhole="\uE0AD",t.noteheadRectangularClusterBlackBottom="\uE144",t.noteheadRectangularClusterBlackMiddle="\uE143",t.noteheadRectangularClusterBlackTop="\uE142",t.noteheadRectangularClusterWhiteBottom="\uE147",t.noteheadRectangularClusterWhiteMiddle="\uE146",t.noteheadRectangularClusterWhiteTop="\uE145",t.noteheadRoundBlack="\uE113",t.noteheadRoundBlackDoubleSlashed="\uE11C",t.noteheadRoundBlackLarge="\uE110",t.noteheadRoundBlackSlashed="\uE118",t.noteheadRoundBlackSlashedLarge="\uE116",t.noteheadRoundWhite="\uE114",t.noteheadRoundWhiteDoubleSlashed="\uE11D",t.noteheadRoundWhiteLarge="\uE111",t.noteheadRoundWhiteSlashed="\uE119",t.noteheadRoundWhiteSlashedLarge="\uE117",t.noteheadRoundWhiteWithDot="\uE115",t.noteheadRoundWhiteWithDotLarge="\uE112",t.noteheadSlashDiamondWhite="\uE104",t.noteheadSlashHorizontalEnds="\uE101",t.noteheadSlashHorizontalEndsMuted="\uE108",t.noteheadSlashVerticalEnds="\uE100",t.noteheadSlashVerticalEndsMuted="\uE107",t.noteheadSlashVerticalEndsSmall="\uE105",t.noteheadSlashWhiteDoubleWhole="\uE10A",t.noteheadSlashWhiteHalf="\uE103",t.noteheadSlashWhiteMuted="\uE109",t.noteheadSlashWhiteWhole="\uE102",t.noteheadSlashX="\uE106",t.noteheadSlashedBlack1="\uE0CF",t.noteheadSlashedBlack2="\uE0D0",t.noteheadSlashedDoubleWhole1="\uE0D5",t.noteheadSlashedDoubleWhole2="\uE0D6",t.noteheadSlashedHalf1="\uE0D1",t.noteheadSlashedHalf2="\uE0D2",t.noteheadSlashedWhole1="\uE0D3",t.noteheadSlashedWhole2="\uE0D4",t.noteheadSquareBlack="\uE0B9",t.noteheadSquareBlackLarge="\uE11A",t.noteheadSquareBlackWhite="\uE11B",t.noteheadSquareWhite="\uE0B8",t.noteheadTriangleDownBlack="\uE0C7",t.noteheadTriangleDownDoubleWhole="\uE0C3",t.noteheadTriangleDownHalf="\uE0C5",t.noteheadTriangleDownWhite="\uE0C6",t.noteheadTriangleDownWhole="\uE0C4",t.noteheadTriangleLeftBlack="\uE0C0",t.noteheadTriangleLeftWhite="\uE0BF",t.noteheadTriangleRightBlack="\uE0C2",t.noteheadTriangleRightWhite="\uE0C1",t.noteheadTriangleRoundDownBlack="\uE0CD",t.noteheadTriangleRoundDownWhite="\uE0CC",t.noteheadTriangleUpBlack="\uE0BE",t.noteheadTriangleUpDoubleWhole="\uE0BA",t.noteheadTriangleUpHalf="\uE0BC",t.noteheadTriangleUpRightBlack="\uE0C9",t.noteheadTriangleUpRightWhite="\uE0C8",t.noteheadTriangleUpWhite="\uE0BD",t.noteheadTriangleUpWhole="\uE0BB",t.noteheadVoidWithX="\uE0B7",t.noteheadWhole="\uE0A2",t.noteheadWholeFilled="\uE0FA",t.noteheadWholeWithX="\uE0B5",t.noteheadXBlack="\uE0A9",t.noteheadXDoubleWhole="\uE0A6",t.noteheadXHalf="\uE0A8",t.noteheadXOrnate="\uE0AA",t.noteheadXOrnateEllipse="\uE0AB",t.noteheadXWhole="\uE0A7",t.octaveBaselineA="\uEC91",t.octaveBaselineB="\uEC93",t.octaveBaselineM="\uEC95",t.octaveBaselineV="\uEC97",t.octaveBassa="\uE51F",t.octaveLoco="\uEC90",t.octaveParensLeft="\uE51A",t.octaveParensRight="\uE51B",t.octaveSuperscriptA="\uEC92",t.octaveSuperscriptB="\uEC94",t.octaveSuperscriptM="\uEC96",t.octaveSuperscriptV="\uEC98",t.oneHandedRollStevens="\uE233",t.organGerman2Fusae="\uEE2E",t.organGerman2Minimae="\uEE2C",t.organGerman2OctaveUp="\uEE19",t.organGerman2Semifusae="\uEE2F",t.organGerman2Semiminimae="\uEE2D",t.organGerman3Fusae="\uEE32",t.organGerman3Minimae="\uEE30",t.organGerman3Semifusae="\uEE33",t.organGerman3Semiminimae="\uEE31",t.organGerman4Fusae="\uEE36",t.organGerman4Minimae="\uEE34",t.organGerman4Semifusae="\uEE37",t.organGerman4Semiminimae="\uEE35",t.organGerman5Fusae="\uEE3A",t.organGerman5Minimae="\uEE38",t.organGerman5Semifusae="\uEE3B",t.organGerman5Semiminimae="\uEE39",t.organGerman6Fusae="\uEE3E",t.organGerman6Minimae="\uEE3C",t.organGerman6Semifusae="\uEE3F",t.organGerman6Semiminimae="\uEE3D",t.organGermanALower="\uEE15",t.organGermanAUpper="\uEE09",t.organGermanAugmentationDot="\uEE1C",t.organGermanBLower="\uEE16",t.organGermanBUpper="\uEE0A",t.organGermanBuxheimerBrevis2="\uEE25",t.organGermanBuxheimerBrevis3="\uEE24",t.organGermanBuxheimerMinimaRest="\uEE1E",t.organGermanBuxheimerSemibrevis="\uEE26",t.organGermanBuxheimerSemibrevisRest="\uEE1D",t.organGermanCLower="\uEE0C",t.organGermanCUpper="\uEE00",t.organGermanCisLower="\uEE0D",t.organGermanCisUpper="\uEE01",t.organGermanDLower="\uEE0E",t.organGermanDUpper="\uEE02",t.organGermanDisLower="\uEE0F",t.organGermanDisUpper="\uEE03",t.organGermanELower="\uEE10",t.organGermanEUpper="\uEE04",t.organGermanFLower="\uEE11",t.organGermanFUpper="\uEE05",t.organGermanFisLower="\uEE12",t.organGermanFisUpper="\uEE06",t.organGermanFusa="\uEE2A",t.organGermanFusaRest="\uEE22",t.organGermanGLower="\uEE13",t.organGermanGUpper="\uEE07",t.organGermanGisLower="\uEE14",t.organGermanGisUpper="\uEE08",t.organGermanHLower="\uEE17",t.organGermanHUpper="\uEE0B",t.organGermanMinima="\uEE28",t.organGermanMinimaRest="\uEE20",t.organGermanOctaveDown="\uEE1A",t.organGermanOctaveUp="\uEE18",t.organGermanSemibrevis="\uEE27",t.organGermanSemibrevisRest="\uEE1F",t.organGermanSemifusa="\uEE2B",t.organGermanSemifusaRest="\uEE23",t.organGermanSemiminima="\uEE29",t.organGermanSemiminimaRest="\uEE21",t.organGermanTie="\uEE1B",t.ornamentBottomLeftConcaveStroke="\uE59A",t.ornamentBottomLeftConcaveStrokeLarge="\uE59B",t.ornamentBottomLeftConvexStroke="\uE59C",t.ornamentBottomRightConcaveStroke="\uE5A7",t.ornamentBottomRightConvexStroke="\uE5A8",t.ornamentComma="\uE581",t.ornamentDoubleObliqueLinesAfterNote="\uE57E",t.ornamentDoubleObliqueLinesBeforeNote="\uE57D",t.ornamentDownCurve="\uE578",t.ornamentHaydn="\uE56F",t.ornamentHighLeftConcaveStroke="\uE592",t.ornamentHighLeftConvexStroke="\uE593",t.ornamentHighRightConcaveStroke="\uE5A2",t.ornamentHighRightConvexStroke="\uE5A3",t.ornamentHookAfterNote="\uE576",t.ornamentHookBeforeNote="\uE575",t.ornamentLeftFacingHalfCircle="\uE572",t.ornamentLeftFacingHook="\uE574",t.ornamentLeftPlus="\uE597",t.ornamentLeftShakeT="\uE596",t.ornamentLeftVerticalStroke="\uE594",t.ornamentLeftVerticalStrokeWithCross="\uE595",t.ornamentLowLeftConcaveStroke="\uE598",t.ornamentLowLeftConvexStroke="\uE599",t.ornamentLowRightConcaveStroke="\uE5A5",t.ornamentLowRightConvexStroke="\uE5A6",t.ornamentMiddleVerticalStroke="\uE59F",t.ornamentMordent="\uE56D",t.ornamentObliqueLineAfterNote="\uE57C",t.ornamentObliqueLineBeforeNote="\uE57B",t.ornamentObliqueLineHorizAfterNote="\uE580",t.ornamentObliqueLineHorizBeforeNote="\uE57F",t.ornamentOriscus="\uEA21",t.ornamentPinceCouperin="\uE588",t.ornamentPortDeVoixV="\uE570",t.ornamentPrecompAppoggTrill="\uE5B2",t.ornamentPrecompAppoggTrillSuffix="\uE5B3",t.ornamentPrecompCadence="\uE5BE",t.ornamentPrecompCadenceUpperPrefix="\uE5C1",t.ornamentPrecompCadenceUpperPrefixTurn="\uE5C2",t.ornamentPrecompCadenceWithTurn="\uE5BF",t.ornamentPrecompDescendingSlide="\uE5B1",t.ornamentPrecompDoubleCadenceLowerPrefix="\uE5C0",t.ornamentPrecompDoubleCadenceUpperPrefix="\uE5C3",t.ornamentPrecompDoubleCadenceUpperPrefixTurn="\uE5C4",t.ornamentPrecompInvertedMordentUpperPrefix="\uE5C7",t.ornamentPrecompMordentRelease="\uE5C5",t.ornamentPrecompMordentUpperPrefix="\uE5C6",t.ornamentPrecompPortDeVoixMordent="\uE5BC",t.ornamentPrecompSlide="\uE5B0",t.ornamentPrecompSlideTrillBach="\uE5B8",t.ornamentPrecompSlideTrillDAnglebert="\uE5B5",t.ornamentPrecompSlideTrillMarpurg="\uE5B6",t.ornamentPrecompSlideTrillMuffat="\uE5B9",t.ornamentPrecompSlideTrillSuffixMuffat="\uE5BA",t.ornamentPrecompTrillLowerSuffix="\uE5C8",t.ornamentPrecompTrillSuffixDandrieu="\uE5BB",t.ornamentPrecompTrillWithMordent="\uE5BD",t.ornamentPrecompTurnTrillBach="\uE5B7",t.ornamentPrecompTurnTrillDAnglebert="\uE5B4",t.ornamentQuilisma="\uEA20",t.ornamentRightFacingHalfCircle="\uE571",t.ornamentRightFacingHook="\uE573",t.ornamentRightVerticalStroke="\uE5A4",t.ornamentSchleifer="\uE587",t.ornamentShake3="\uE582",t.ornamentShakeMuffat1="\uE584",t.ornamentShortObliqueLineAfterNote="\uE57A",t.ornamentShortObliqueLineBeforeNote="\uE579",t.ornamentShortTrill="\uE56C",t.ornamentTopLeftConcaveStroke="\uE590",t.ornamentTopLeftConvexStroke="\uE591",t.ornamentTopRightConcaveStroke="\uE5A0",t.ornamentTopRightConvexStroke="\uE5A1",t.ornamentTremblement="\uE56E",t.ornamentTremblementCouperin="\uE589",t.ornamentTrill="\uE566",t.ornamentTurn="\uE567",t.ornamentTurnInverted="\uE568",t.ornamentTurnSlash="\uE569",t.ornamentTurnUp="\uE56A",t.ornamentTurnUpS="\uE56B",t.ornamentUpCurve="\uE577",t.ornamentVerticalLine="\uE583",t.ornamentZigZagLineNoRightEnd="\uE59D",t.ornamentZigZagLineWithRightEnd="\uE59E",t.ottava="\uE510",t.ottavaAlta="\uE511",t.ottavaBassa="\uE512",t.ottavaBassaBa="\uE513",t.ottavaBassaVb="\uE51C",t.pendereckiTremolo="\uE22B",t.pictAgogo="\uE717",t.pictAlmglocken="\uE712",t.pictAnvil="\uE701",t.pictBambooChimes="\uE6C3",t.pictBambooScraper="\uE6FB",t.pictBassDrum="\uE6D4",t.pictBassDrumOnSide="\uE6D5",t.pictBeaterBow="\uE7DE",t.pictBeaterBox="\uE7EB",t.pictBeaterBrassMalletsDown="\uE7DA",t.pictBeaterBrassMalletsLeft="\uE7EE",t.pictBeaterBrassMalletsRight="\uE7ED",t.pictBeaterBrassMalletsUp="\uE7D9",t.pictBeaterCombiningDashedCircle="\uE7EA",t.pictBeaterCombiningParentheses="\uE7E9",t.pictBeaterDoubleBassDrumDown="\uE7A1",t.pictBeaterDoubleBassDrumUp="\uE7A0",t.pictBeaterFinger="\uE7E4",t.pictBeaterFingernails="\uE7E6",t.pictBeaterFist="\uE7E5",t.pictBeaterGuiroScraper="\uE7DD",t.pictBeaterHammer="\uE7E1",t.pictBeaterHammerMetalDown="\uE7D0",t.pictBeaterHammerMetalUp="\uE7CF",t.pictBeaterHammerPlasticDown="\uE7CE",t.pictBeaterHammerPlasticUp="\uE7CD",t.pictBeaterHammerWoodDown="\uE7CC",t.pictBeaterHammerWoodUp="\uE7CB",t.pictBeaterHand="\uE7E3",t.pictBeaterHardBassDrumDown="\uE79D",t.pictBeaterHardBassDrumUp="\uE79C",t.pictBeaterHardGlockenspielDown="\uE785",t.pictBeaterHardGlockenspielLeft="\uE787",t.pictBeaterHardGlockenspielRight="\uE786",t.pictBeaterHardGlockenspielUp="\uE784",t.pictBeaterHardTimpaniDown="\uE791",t.pictBeaterHardTimpaniLeft="\uE793",t.pictBeaterHardTimpaniRight="\uE792",t.pictBeaterHardTimpaniUp="\uE790",t.pictBeaterHardXylophoneDown="\uE779",t.pictBeaterHardXylophoneLeft="\uE77B",t.pictBeaterHardXylophoneRight="\uE77A",t.pictBeaterHardXylophoneUp="\uE778",t.pictBeaterHardYarnDown="\uE7AB",t.pictBeaterHardYarnLeft="\uE7AD",t.pictBeaterHardYarnRight="\uE7AC",t.pictBeaterHardYarnUp="\uE7AA",t.pictBeaterJazzSticksDown="\uE7D4",t.pictBeaterJazzSticksUp="\uE7D3",t.pictBeaterKnittingNeedle="\uE7E2",t.pictBeaterMallet="\uE7DF",t.pictBeaterMalletDown="\uE7EC",t.pictBeaterMediumBassDrumDown="\uE79B",t.pictBeaterMediumBassDrumUp="\uE79A",t.pictBeaterMediumTimpaniDown="\uE78D",t.pictBeaterMediumTimpaniLeft="\uE78F",t.pictBeaterMediumTimpaniRight="\uE78E",t.pictBeaterMediumTimpaniUp="\uE78C",t.pictBeaterMediumXylophoneDown="\uE775",t.pictBeaterMediumXylophoneLeft="\uE777",t.pictBeaterMediumXylophoneRight="\uE776",t.pictBeaterMediumXylophoneUp="\uE774",t.pictBeaterMediumYarnDown="\uE7A7",t.pictBeaterMediumYarnLeft="\uE7A9",t.pictBeaterMediumYarnRight="\uE7A8",t.pictBeaterMediumYarnUp="\uE7A6",t.pictBeaterMetalBassDrumDown="\uE79F",t.pictBeaterMetalBassDrumUp="\uE79E",t.pictBeaterMetalDown="\uE7C8",t.pictBeaterMetalHammer="\uE7E0",t.pictBeaterMetalLeft="\uE7CA",t.pictBeaterMetalRight="\uE7C9",t.pictBeaterMetalUp="\uE7C7",t.pictBeaterSnareSticksDown="\uE7D2",t.pictBeaterSnareSticksUp="\uE7D1",t.pictBeaterSoftBassDrumDown="\uE799",t.pictBeaterSoftBassDrumUp="\uE798",t.pictBeaterSoftGlockenspielDown="\uE781",t.pictBeaterSoftGlockenspielLeft="\uE783",t.pictBeaterSoftGlockenspielRight="\uE782",t.pictBeaterSoftGlockenspielUp="\uE780",t.pictBeaterSoftTimpaniDown="\uE789",t.pictBeaterSoftTimpaniLeft="\uE78B",t.pictBeaterSoftTimpaniRight="\uE78A",t.pictBeaterSoftTimpaniUp="\uE788",t.pictBeaterSoftXylophone="\uE7DB",t.pictBeaterSoftXylophoneDown="\uE771",t.pictBeaterSoftXylophoneLeft="\uE773",t.pictBeaterSoftXylophoneRight="\uE772",t.pictBeaterSoftXylophoneUp="\uE770",t.pictBeaterSoftYarnDown="\uE7A3",t.pictBeaterSoftYarnLeft="\uE7A5",t.pictBeaterSoftYarnRight="\uE7A4",t.pictBeaterSoftYarnUp="\uE7A2",t.pictBeaterSpoonWoodenMallet="\uE7DC",t.pictBeaterSuperballDown="\uE7AF",t.pictBeaterSuperballLeft="\uE7B1",t.pictBeaterSuperballRight="\uE7B0",t.pictBeaterSuperballUp="\uE7AE",t.pictBeaterTriangleDown="\uE7D6",t.pictBeaterTrianglePlain="\uE7EF",t.pictBeaterTriangleUp="\uE7D5",t.pictBeaterWireBrushesDown="\uE7D8",t.pictBeaterWireBrushesUp="\uE7D7",t.pictBeaterWoodTimpaniDown="\uE795",t.pictBeaterWoodTimpaniLeft="\uE797",t.pictBeaterWoodTimpaniRight="\uE796",t.pictBeaterWoodTimpaniUp="\uE794",t.pictBeaterWoodXylophoneDown="\uE77D",t.pictBeaterWoodXylophoneLeft="\uE77F",t.pictBeaterWoodXylophoneRight="\uE77E",t.pictBeaterWoodXylophoneUp="\uE77C",t.pictBell="\uE714",t.pictBellOfCymbal="\uE72A",t.pictBellPlate="\uE713",t.pictBellTree="\uE71A",t.pictBirdWhistle="\uE751",t.pictBoardClapper="\uE6F7",t.pictBongos="\uE6DD",t.pictBrakeDrum="\uE6E1",t.pictCabasa="\uE743",t.pictCannon="\uE761",t.pictCarHorn="\uE755",t.pictCastanets="\uE6F8",t.pictCastanetsWithHandle="\uE6F9",t.pictCelesta="\uE6B0",t.pictCencerro="\uE716",t.pictCenter1="\uE7FE",t.pictCenter2="\uE7FF",t.pictCenter3="\uE800",t.pictChainRattle="\uE748",t.pictChimes="\uE6C2",t.pictChineseCymbal="\uE726",t.pictChokeCymbal="\uE805",t.pictClaves="\uE6F2",t.pictCoins="\uE7E7",t.pictConga="\uE6DE",t.pictCowBell="\uE711",t.pictCrashCymbals="\uE720",t.pictCrotales="\uE6AE",t.pictCrushStem="\uE80C",t.pictCuica="\uE6E4",t.pictCymbalTongs="\uE728",t.pictDamp1="\uE7F9",t.pictDamp2="\uE7FA",t.pictDamp3="\uE7FB",t.pictDamp4="\uE7FC",t.pictDeadNoteStem="\uE80D",t.pictDrumStick="\uE7E8",t.pictDuckCall="\uE757",t.pictEdgeOfCymbal="\uE729",t.pictEmptyTrap="\uE6A9",t.pictFingerCymbals="\uE727",t.pictFlexatone="\uE740",t.pictFootballRatchet="\uE6F5",t.pictGlassHarmonica="\uE765",t.pictGlassHarp="\uE764",t.pictGlassPlateChimes="\uE6C6",t.pictGlassTubeChimes="\uE6C5",t.pictGlsp="\uE6A0",t.pictGlspSmithBrindle="\uE6AA",t.pictGobletDrum="\uE6E2",t.pictGong="\uE732",t.pictGongWithButton="\uE733",t.pictGuiro="\uE6F3",t.pictGumHardDown="\uE7C4",t.pictGumHardLeft="\uE7C6",t.pictGumHardRight="\uE7C5",t.pictGumHardUp="\uE7C3",t.pictGumMediumDown="\uE7C0",t.pictGumMediumLeft="\uE7C2",t.pictGumMediumRight="\uE7C1",t.pictGumMediumUp="\uE7BF",t.pictGumSoftDown="\uE7BC",t.pictGumSoftLeft="\uE7BE",t.pictGumSoftRight="\uE7BD",t.pictGumSoftUp="\uE7BB",t.pictHalfOpen1="\uE7F6",t.pictHalfOpen2="\uE7F7",t.pictHandbell="\uE715",t.pictHiHat="\uE722",t.pictHiHatOnStand="\uE723",t.pictJawHarp="\uE767",t.pictJingleBells="\uE719",t.pictKlaxonHorn="\uE756",t.pictLeftHandCircle="\uE807",t.pictLionsRoar="\uE763",t.pictLithophone="\uE6B1",t.pictLogDrum="\uE6DF",t.pictLotusFlute="\uE75A",t.pictMar="\uE6A6",t.pictMarSmithBrindle="\uE6AC",t.pictMaraca="\uE741",t.pictMaracas="\uE742",t.pictMegaphone="\uE759",t.pictMetalPlateChimes="\uE6C8",t.pictMetalTubeChimes="\uE6C7",t.pictMusicalSaw="\uE766",t.pictNormalPosition="\uE804",t.pictOnRim="\uE7F4",t.pictOpen="\uE7F8",t.pictOpenRimShot="\uE7F5",t.pictPistolShot="\uE760",t.pictPoliceWhistle="\uE752",t.pictQuijada="\uE6FA",t.pictRainstick="\uE747",t.pictRatchet="\uE6F4",t.pictRecoReco="\uE6FC",t.pictRightHandSquare="\uE806",t.pictRim1="\uE801",t.pictRim2="\uE802",t.pictRim3="\uE803",t.pictRimShotOnStem="\uE7FD",t.pictSandpaperBlocks="\uE762",t.pictScrapeAroundRim="\uE7F3",t.pictScrapeAroundRimClockwise="\uE80E",t.pictScrapeCenterToEdge="\uE7F1",t.pictScrapeEdgeToCenter="\uE7F2",t.pictShellBells="\uE718",t.pictShellChimes="\uE6C4",t.pictSiren="\uE753",t.pictSistrum="\uE746",t.pictSizzleCymbal="\uE724",t.pictSleighBell="\uE710",t.pictSlideBrushOnGong="\uE734",t.pictSlideWhistle="\uE750",t.pictSlitDrum="\uE6E0",t.pictSnareDrum="\uE6D1",t.pictSnareDrumMilitary="\uE6D3",t.pictSnareDrumSnaresOff="\uE6D2",t.pictSteelDrums="\uE6AF",t.pictStickShot="\uE7F0",t.pictSuperball="\uE7B2",t.pictSuspendedCymbal="\uE721",t.pictSwishStem="\uE808",t.pictTabla="\uE6E3",t.pictTamTam="\uE730",t.pictTamTamWithBeater="\uE731",t.pictTambourine="\uE6DB",t.pictTempleBlocks="\uE6F1",t.pictTenorDrum="\uE6D6",t.pictThundersheet="\uE744",t.pictTimbales="\uE6DC",t.pictTimpani="\uE6D0",t.pictTomTom="\uE6D7",t.pictTomTomChinese="\uE6D8",t.pictTomTomIndoAmerican="\uE6DA",t.pictTomTomJapanese="\uE6D9",t.pictTriangle="\uE700",t.pictTubaphone="\uE6B2",t.pictTubularBells="\uE6C0",t.pictTurnLeftStem="\uE80A",t.pictTurnRightLeftStem="\uE80B",t.pictTurnRightStem="\uE809",t.pictVib="\uE6A7",t.pictVibMotorOff="\uE6A8",t.pictVibSmithBrindle="\uE6AD",t.pictVibraslap="\uE745",t.pictVietnameseHat="\uE725",t.pictWhip="\uE6F6",t.pictWindChimesGlass="\uE6C1",t.pictWindMachine="\uE754",t.pictWindWhistle="\uE758",t.pictWoodBlock="\uE6F0",t.pictWoundHardDown="\uE7B4",t.pictWoundHardLeft="\uE7B6",t.pictWoundHardRight="\uE7B5",t.pictWoundHardUp="\uE7B3",t.pictWoundSoftDown="\uE7B8",t.pictWoundSoftLeft="\uE7BA",t.pictWoundSoftRight="\uE7B9",t.pictWoundSoftUp="\uE7B7",t.pictXyl="\uE6A1",t.pictXylBass="\uE6A3",t.pictXylSmithBrindle="\uE6AB",t.pictXylTenor="\uE6A2",t.pictXylTenorTrough="\uE6A5",t.pictXylTrough="\uE6A4",t.pluckedBuzzPizzicato="\uE632",t.pluckedDamp="\uE638",t.pluckedDampAll="\uE639",t.pluckedDampOnStem="\uE63B",t.pluckedFingernailFlick="\uE637",t.pluckedLeftHandPizzicato="\uE633",t.pluckedPlectrum="\uE63A",t.pluckedSnapPizzicatoAbove="\uE631",t.pluckedSnapPizzicatoBelow="\uE630",t.pluckedWithFingernails="\uE636",t.quindicesima="\uE514",t.quindicesimaAlta="\uE515",t.quindicesimaBassa="\uE516",t.quindicesimaBassaMb="\uE51D",t.repeat1Bar="\uE500",t.repeat2Bars="\uE501",t.repeat4Bars="\uE502",t.repeatBarLowerDot="\uE505",t.repeatBarSlash="\uE504",t.repeatBarUpperDot="\uE503",t.repeatDot="\uE044",t.repeatDots="\uE043",t.repeatLeft="\uE040",t.repeatRight="\uE041",t.repeatRightLeft="\uE042",t.rest1024th="\uE4ED",t.rest128th="\uE4EA",t.rest16th="\uE4E7",t.rest256th="\uE4EB",t.rest32nd="\uE4E8",t.rest512th="\uE4EC",t.rest64th="\uE4E9",t.rest8th="\uE4E6",t.restDoubleWhole="\uE4E2",t.restDoubleWholeLegerLine="\uE4F3",t.restHBar="\uE4EE",t.restHBarLeft="\uE4EF",t.restHBarMiddle="\uE4F0",t.restHBarRight="\uE4F1",t.restHalf="\uE4E4",t.restHalfLegerLine="\uE4F5",t.restLonga="\uE4E1",t.restMaxima="\uE4E0",t.restQuarter="\uE4E5",t.restQuarterOld="\uE4F2",t.restQuarterZ="\uE4F6",t.restWhole="\uE4E3",t.restWholeLegerLine="\uE4F4",t.reversedBrace="\uE001",t.reversedBracketBottom="\uE006",t.reversedBracketTop="\uE005",t.rightRepeatSmall="\uE04D",t.scaleDegree1="\uEF00",t.scaleDegree2="\uEF01",t.scaleDegree3="\uEF02",t.scaleDegree4="\uEF03",t.scaleDegree5="\uEF04",t.scaleDegree6="\uEF05",t.scaleDegree7="\uEF06",t.scaleDegree8="\uEF07",t.scaleDegree9="\uEF08",t.schaefferClef="\uE06F",t.schaefferFClefToGClef="\uE072",t.schaefferGClefToFClef="\uE071",t.schaefferPreviousClef="\uE070",t.segno="\uE047",t.segnoSerpent1="\uE04A",t.segnoSerpent2="\uE04B",t.semipitchedPercussionClef1="\uE06B",t.semipitchedPercussionClef2="\uE06C",t.smnFlat="\uEC52",t.smnFlatWhite="\uEC53",t.smnHistoryDoubleFlat="\uEC57",t.smnHistoryDoubleSharp="\uEC55",t.smnHistoryFlat="\uEC56",t.smnHistorySharp="\uEC54",t.smnNatural="\uEC58",t.smnSharp="\uEC50",t.smnSharpDown="\uEC59",t.smnSharpWhite="\uEC51",t.smnSharpWhiteDown="\uEC5A",t.splitBarDivider="\uE00A",t.staff1Line="\uE010",t.staff1LineNarrow="\uE01C",t.staff1LineWide="\uE016",t.staff2Lines="\uE011",t.staff2LinesNarrow="\uE01D",t.staff2LinesWide="\uE017",t.staff3Lines="\uE012",t.staff3LinesNarrow="\uE01E",t.staff3LinesWide="\uE018",t.staff4Lines="\uE013",t.staff4LinesNarrow="\uE01F",t.staff4LinesWide="\uE019",t.staff5Lines="\uE014",t.staff5LinesNarrow="\uE020",t.staff5LinesWide="\uE01A",t.staff6Lines="\uE015",t.staff6LinesNarrow="\uE021",t.staff6LinesWide="\uE01B",t.staffDivideArrowDown="\uE00B",t.staffDivideArrowUp="\uE00C",t.staffDivideArrowUpDown="\uE00D",t.staffPosLower1="\uEB98",t.staffPosLower2="\uEB99",t.staffPosLower3="\uEB9A",t.staffPosLower4="\uEB9B",t.staffPosLower5="\uEB9C",t.staffPosLower6="\uEB9D",t.staffPosLower7="\uEB9E",t.staffPosLower8="\uEB9F",t.staffPosRaise1="\uEB90",t.staffPosRaise2="\uEB91",t.staffPosRaise3="\uEB92",t.staffPosRaise4="\uEB93",t.staffPosRaise5="\uEB94",t.staffPosRaise6="\uEB95",t.staffPosRaise7="\uEB96",t.staffPosRaise8="\uEB97",t.stem="\uE210",t.stemBowOnBridge="\uE215",t.stemBowOnTailpiece="\uE216",t.stemBuzzRoll="\uE217",t.stemDamp="\uE218",t.stemHarpStringNoise="\uE21F",t.stemMultiphonicsBlack="\uE21A",t.stemMultiphonicsBlackWhite="\uE21C",t.stemMultiphonicsWhite="\uE21B",t.stemPendereckiTremolo="\uE213",t.stemRimShot="\uE21E",t.stemSprechgesang="\uE211",t.stemSulPonticello="\uE214",t.stemSussurando="\uE21D",t.stemSwished="\uE212",t.stemVibratoPulse="\uE219",t.stockhausenTremolo="\uE232",t.stringsBowBehindBridge="\uE618",t.stringsBowBehindBridgeFourStrings="\uE62A",t.stringsBowBehindBridgeOneString="\uE627",t.stringsBowBehindBridgeThreeStrings="\uE629",t.stringsBowBehindBridgeTwoStrings="\uE628",t.stringsBowOnBridge="\uE619",t.stringsBowOnTailpiece="\uE61A",t.stringsChangeBowDirection="\uE626",t.stringsDownBow="\uE610",t.stringsDownBowAwayFromBody="\uEE82",t.stringsDownBowBeyondBridge="\uEE84",t.stringsDownBowTowardsBody="\uEE80",t.stringsDownBowTurned="\uE611",t.stringsFouette="\uE622",t.stringsHalfHarmonic="\uE615",t.stringsHarmonic="\uE614",t.stringsJeteAbove="\uE620",t.stringsJeteBelow="\uE621",t.stringsMuteOff="\uE617",t.stringsMuteOn="\uE616",t.stringsOverpressureDownBow="\uE61B",t.stringsOverpressureNoDirection="\uE61F",t.stringsOverpressurePossibileDownBow="\uE61D",t.stringsOverpressurePossibileUpBow="\uE61E",t.stringsOverpressureUpBow="\uE61C",t.stringsScrapeCircularClockwise="\uEE88",t.stringsScrapeCircularCounterclockwise="\uEE89",t.stringsScrapeParallelInward="\uEE86",t.stringsScrapeParallelOutward="\uEE87",t.stringsThumbPosition="\uE624",t.stringsThumbPositionTurned="\uE625",t.stringsTripleChopInward="\uEE8A",t.stringsTripleChopOutward="\uEE8B",t.stringsUpBow="\uE612",t.stringsUpBowAwayFromBody="\uEE83",t.stringsUpBowBeyondBridge="\uEE85",t.stringsUpBowTowardsBody="\uEE81",t.stringsUpBowTurned="\uE613",t.stringsVibratoPulse="\uE623",t.swissRudimentsNoteheadBlackDouble="\uEE72",t.swissRudimentsNoteheadBlackFlam="\uEE70",t.swissRudimentsNoteheadHalfDouble="\uEE73",t.swissRudimentsNoteheadHalfFlam="\uEE71",t.systemDivider="\uE007",t.systemDividerExtraLong="\uE009",t.systemDividerLong="\uE008",t.textAugmentationDot="\uE1FC",t.textBlackNoteFrac16thLongStem="\uE1F5",t.textBlackNoteFrac16thShortStem="\uE1F4",t.textBlackNoteFrac32ndLongStem="\uE1F6",t.textBlackNoteFrac8thLongStem="\uE1F3",t.textBlackNoteFrac8thShortStem="\uE1F2",t.textBlackNoteLongStem="\uE1F1",t.textBlackNoteShortStem="\uE1F0",t.textCont16thBeamLongStem="\uE1FA",t.textCont16thBeamShortStem="\uE1F9",t.textCont32ndBeamLongStem="\uE1FB",t.textCont8thBeamLongStem="\uE1F8",t.textCont8thBeamShortStem="\uE1F7",t.textHeadlessBlackNoteFrac16thLongStem="\uE209",t.textHeadlessBlackNoteFrac16thShortStem="\uE208",t.textHeadlessBlackNoteFrac32ndLongStem="\uE20A",t.textHeadlessBlackNoteFrac8thLongStem="\uE207",t.textHeadlessBlackNoteFrac8thShortStem="\uE206",t.textHeadlessBlackNoteLongStem="\uE205",t.textHeadlessBlackNoteShortStem="\uE204",t.textTie="\uE1FD",t.textTuplet3LongStem="\uE202",t.textTuplet3ShortStem="\uE1FF",t.textTupletBracketEndLongStem="\uE203",t.textTupletBracketEndShortStem="\uE200",t.textTupletBracketStartLongStem="\uE201",t.textTupletBracketStartShortStem="\uE1FE",t.timeSig0="\uE080",t.timeSig0Reversed="\uECF0",t.timeSig0Turned="\uECE0",t.timeSig1="\uE081",t.timeSig1Reversed="\uECF1",t.timeSig1Turned="\uECE1",t.timeSig2="\uE082",t.timeSig2Reversed="\uECF2",t.timeSig2Turned="\uECE2",t.timeSig3="\uE083",t.timeSig3Reversed="\uECF3",t.timeSig3Turned="\uECE3",t.timeSig4="\uE084",t.timeSig4Reversed="\uECF4",t.timeSig4Turned="\uECE4",t.timeSig5="\uE085",t.timeSig5Reversed="\uECF5",t.timeSig5Turned="\uECE5",t.timeSig6="\uE086",t.timeSig6Reversed="\uECF6",t.timeSig6Turned="\uECE6",t.timeSig7="\uE087",t.timeSig7Reversed="\uECF7",t.timeSig7Turned="\uECE7",t.timeSig8="\uE088",t.timeSig8Reversed="\uECF8",t.timeSig8Turned="\uECE8",t.timeSig9="\uE089",t.timeSig9Reversed="\uECF9",t.timeSig9Turned="\uECE9",t.timeSigBracketLeft="\uEC80",t.timeSigBracketLeftSmall="\uEC82",t.timeSigBracketRight="\uEC81",t.timeSigBracketRightSmall="\uEC83",t.timeSigCombDenominator="\uE09F",t.timeSigCombNumerator="\uE09E",t.timeSigComma="\uE096",t.timeSigCommon="\uE08A",t.timeSigCommonReversed="\uECFA",t.timeSigCommonTurned="\uECEA",t.timeSigCut2="\uEC85",t.timeSigCut3="\uEC86",t.timeSigCutCommon="\uE08B",t.timeSigCutCommonReversed="\uECFB",t.timeSigCutCommonTurned="\uECEB",t.timeSigEquals="\uE08F",t.timeSigFractionHalf="\uE098",t.timeSigFractionOneThird="\uE09A",t.timeSigFractionQuarter="\uE097",t.timeSigFractionThreeQuarters="\uE099",t.timeSigFractionTwoThirds="\uE09B",t.timeSigFractionalSlash="\uE08E",t.timeSigMinus="\uE090",t.timeSigMultiply="\uE091",t.timeSigOpenPenderecki="\uE09D",t.timeSigParensLeft="\uE094",t.timeSigParensLeftSmall="\uE092",t.timeSigParensRight="\uE095",t.timeSigParensRightSmall="\uE093",t.timeSigPlus="\uE08C",t.timeSigPlusSmall="\uE08D",t.timeSigSlash="\uEC84",t.timeSigX="\uE09C",t.tremolo1="\uE220",t.tremolo2="\uE221",t.tremolo3="\uE222",t.tremolo4="\uE223",t.tremolo5="\uE224",t.tremoloDivisiDots2="\uE22E",t.tremoloDivisiDots3="\uE22F",t.tremoloDivisiDots4="\uE230",t.tremoloDivisiDots6="\uE231",t.tremoloFingered1="\uE225",t.tremoloFingered2="\uE226",t.tremoloFingered3="\uE227",t.tremoloFingered4="\uE228",t.tremoloFingered5="\uE229",t.tripleTongueAbove="\uE5F2",t.tripleTongueBelow="\uE5F3",t.tuplet0="\uE880",t.tuplet1="\uE881",t.tuplet2="\uE882",t.tuplet3="\uE883",t.tuplet4="\uE884",t.tuplet5="\uE885",t.tuplet6="\uE886",t.tuplet7="\uE887",t.tuplet8="\uE888",t.tuplet9="\uE889",t.tupletColon="\uE88A",t.unmeasuredTremolo="\uE22C",t.unmeasuredTremoloSimple="\uE22D",t.unpitchedPercussionClef1="\uE069",t.unpitchedPercussionClef2="\uE06A",t.ventiduesima="\uE517",t.ventiduesimaAlta="\uE518",t.ventiduesimaBassa="\uE519",t.ventiduesimaBassaMb="\uE51E",t.vocalFingerClickStockhausen="\uE649",t.vocalHalbGesungen="\uE64B",t.vocalMouthClosed="\uE640",t.vocalMouthOpen="\uE642",t.vocalMouthPursed="\uE644",t.vocalMouthSlightlyOpen="\uE641",t.vocalMouthWideOpen="\uE643",t.vocalNasalVoice="\uE647",t.vocalSprechgesang="\uE645",t.vocalTongueClickStockhausen="\uE648",t.vocalTongueFingerClickStockhausen="\uE64A",t.vocalsSussurando="\uE646",t.wiggleArpeggiatoDown="\uEAAA",t.wiggleArpeggiatoDownArrow="\uEAAE",t.wiggleArpeggiatoDownSwash="\uEAAC",t.wiggleArpeggiatoUp="\uEAA9",t.wiggleArpeggiatoUpArrow="\uEAAD",t.wiggleArpeggiatoUpSwash="\uEAAB",t.wiggleCircular="\uEAC9",t.wiggleCircularConstant="\uEAC0",t.wiggleCircularConstantFlipped="\uEAC1",t.wiggleCircularConstantFlippedLarge="\uEAC3",t.wiggleCircularConstantLarge="\uEAC2",t.wiggleCircularEnd="\uEACB",t.wiggleCircularLarge="\uEAC8",t.wiggleCircularLarger="\uEAC7",t.wiggleCircularLargerStill="\uEAC6",t.wiggleCircularLargest="\uEAC5",t.wiggleCircularSmall="\uEACA",t.wiggleCircularStart="\uEAC4",t.wiggleGlissando="\uEAAF",t.wiggleGlissandoGroup1="\uEABD",t.wiggleGlissandoGroup2="\uEABE",t.wiggleGlissandoGroup3="\uEABF",t.wiggleRandom1="\uEAF0",t.wiggleRandom2="\uEAF1",t.wiggleRandom3="\uEAF2",t.wiggleRandom4="\uEAF3",t.wiggleSawtooth="\uEABB",t.wiggleSawtoothNarrow="\uEABA",t.wiggleSawtoothWide="\uEABC",t.wiggleSquareWave="\uEAB8",t.wiggleSquareWaveNarrow="\uEAB7",t.wiggleSquareWaveWide="\uEAB9",t.wiggleTrill="\uEAA4",t.wiggleTrillFast="\uEAA3",t.wiggleTrillFaster="\uEAA2",t.wiggleTrillFasterStill="\uEAA1",t.wiggleTrillFastest="\uEAA0",t.wiggleTrillSlow="\uEAA5",t.wiggleTrillSlower="\uEAA6",t.wiggleTrillSlowerStill="\uEAA7",t.wiggleTrillSlowest="\uEAA8",t.wiggleVIbratoLargestSlower="\uEAEE",t.wiggleVIbratoMediumSlower="\uEAE0",t.wiggleVibrato="\uEAB0",t.wiggleVibratoLargeFast="\uEAE5",t.wiggleVibratoLargeFaster="\uEAE4",t.wiggleVibratoLargeFasterStill="\uEAE3",t.wiggleVibratoLargeFastest="\uEAE2",t.wiggleVibratoLargeSlow="\uEAE6",t.wiggleVibratoLargeSlower="\uEAE7",t.wiggleVibratoLargeSlowest="\uEAE8",t.wiggleVibratoLargestFast="\uEAEC",t.wiggleVibratoLargestFaster="\uEAEB",t.wiggleVibratoLargestFasterStill="\uEAEA",t.wiggleVibratoLargestFastest="\uEAE9",t.wiggleVibratoLargestSlow="\uEAED",t.wiggleVibratoLargestSlowest="\uEAEF",t.wiggleVibratoMediumFast="\uEADE",t.wiggleVibratoMediumFaster="\uEADD",t.wiggleVibratoMediumFasterStill="\uEADC",t.wiggleVibratoMediumFastest="\uEADB",t.wiggleVibratoMediumSlow="\uEADF",t.wiggleVibratoMediumSlowest="\uEAE1",t.wiggleVibratoSmallFast="\uEAD7",t.wiggleVibratoSmallFaster="\uEAD6",t.wiggleVibratoSmallFasterStill="\uEAD5",t.wiggleVibratoSmallFastest="\uEAD4",t.wiggleVibratoSmallSlow="\uEAD8",t.wiggleVibratoSmallSlower="\uEAD9",t.wiggleVibratoSmallSlowest="\uEADA",t.wiggleVibratoSmallestFast="\uEAD0",t.wiggleVibratoSmallestFaster="\uEACF",t.wiggleVibratoSmallestFasterStill="\uEACE",t.wiggleVibratoSmallestFastest="\uEACD",t.wiggleVibratoSmallestSlow="\uEAD1",t.wiggleVibratoSmallestSlower="\uEAD2",t.wiggleVibratoSmallestSlowest="\uEAD3",t.wiggleVibratoStart="\uEACC",t.wiggleVibratoWide="\uEAB1",t.wiggleWavy="\uEAB5",t.wiggleWavyNarrow="\uEAB4",t.wiggleWavyWide="\uEAB6",t.windClosedHole="\uE5F4",t.windFlatEmbouchure="\uE5FB",t.windHalfClosedHole1="\uE5F6",t.windHalfClosedHole2="\uE5F7",t.windHalfClosedHole3="\uE5F8",t.windLessRelaxedEmbouchure="\uE5FE",t.windLessTightEmbouchure="\uE600",t.windMouthpiecePop="\uE60A",t.windMultiphonicsBlackStem="\uE607",t.windMultiphonicsBlackWhiteStem="\uE609",t.windMultiphonicsWhiteStem="\uE608",t.windOpenHole="\uE5F9",t.windReedPositionIn="\uE606",t.windReedPositionNormal="\uE604",t.windReedPositionOut="\uE605",t.windRelaxedEmbouchure="\uE5FD",t.windRimOnly="\uE60B",t.windSharpEmbouchure="\uE5FC",t.windStrongAirPressure="\uE603",t.windThreeQuartersClosedHole="\uE5F5",t.windTightEmbouchure="\uE5FF",t.windTrillKey="\uE5FA",t.windVeryTightEmbouchure="\uE601",t.windWeakAirPressure="\uE602",t}(m||{});var Ze=16384,$f={"1/2":Ze*2,1:Ze/1,2:Ze/2,4:Ze/4,8:Ze/8,16:Ze/16,32:Ze/32,64:Ze/64,128:Ze/128,256:Ze/256},XE={w:"1",h:"2",q:"4",b:"256"},ku={C:{num:0},Am:{num:0},F:{accidental:"b",num:1},Dm:{accidental:"b",num:1},Bb:{accidental:"b",num:2},Gm:{accidental:"b",num:2},Eb:{accidental:"b",num:3},Cm:{accidental:"b",num:3},Ab:{accidental:"b",num:4},Fm:{accidental:"b",num:4},Db:{accidental:"b",num:5},Bbm:{accidental:"b",num:5},Gb:{accidental:"b",num:6},Ebm:{accidental:"b",num:6},Cb:{accidental:"b",num:7},Abm:{accidental:"b",num:7},G:{accidental:"#",num:1},Em:{accidental:"#",num:1},D:{accidental:"#",num:2},Bm:{accidental:"#",num:2},A:{accidental:"#",num:3},"F#m":{accidental:"#",num:3},E:{accidental:"#",num:4},"C#m":{accidental:"#",num:4},B:{accidental:"#",num:5},"G#m":{accidental:"#",num:5},"F#":{accidental:"#",num:6},"D#m":{accidental:"#",num:6},"C#":{accidental:"#",num:7},"A#m":{accidental:"#",num:7}},tm={treble:{lineShift:0},bass:{lineShift:6},tenor:{lineShift:4},alto:{lineShift:3},soprano:{lineShift:1},percussion:{lineShift:0},"mezzo-soprano":{lineShift:2},"baritone-c":{lineShift:5},"baritone-f":{lineShift:5},subbass:{lineShift:7},french:{lineShift:-1}},YE={C:{index:0,intVal:0},CN:{index:0,intVal:0},"C#":{index:0,intVal:1},"C##":{index:0,intVal:2},CB:{index:0,intVal:11},CBB:{index:0,intVal:10},D:{index:1,intVal:2},DN:{index:1,intVal:2},"D#":{index:1,intVal:3},"D##":{index:1,intVal:4},DB:{index:1,intVal:1},DBB:{index:1,intVal:0},E:{index:2,intVal:4},EN:{index:2,intVal:4},"E#":{index:2,intVal:5},"E##":{index:2,intVal:6},EB:{index:2,intVal:3},EBB:{index:2,intVal:2},F:{index:3,intVal:5},FN:{index:3,intVal:5},"F#":{index:3,intVal:6},"F##":{index:3,intVal:7},FB:{index:3,intVal:4},FBB:{index:3,intVal:3},G:{index:4,intVal:7},GN:{index:4,intVal:7},"G#":{index:4,intVal:8},"G##":{index:4,intVal:9},GB:{index:4,intVal:6},GBB:{index:4,intVal:5},A:{index:5,intVal:9},AN:{index:5,intVal:9},"A#":{index:5,intVal:10},"A##":{index:5,intVal:11},AB:{index:5,intVal:8},ABB:{index:5,intVal:7},B:{index:6,intVal:11},BN:{index:6,intVal:11},"B#":{index:6,intVal:12},"B##":{index:6,intVal:13},BB:{index:6,intVal:10},BBB:{index:6,intVal:9},R:{index:6},X:{index:6}},qE={n:{name:"note"},r:{name:"rest"},h:{name:"harmonic"},m:{name:"muted"},s:{name:"slash"},g:{name:"ghost"},d:{name:"diamond"},x:{name:"x"},ci:{name:"circled"},cx:{name:"circle x"},sf:{name:"slashed"},sb:{name:"slashed backward"},sq:{name:"square"},tu:{name:"triangle up"},td:{name:"triangle down"}},ZE={"#":m.accidentalSharp,"##":m.accidentalDoubleSharp,b:m.accidentalFlat,bb:m.accidentalDoubleFlat,n:m.accidentalNatural,"{":m.accidentalParensLeft,"}":m.accidentalParensRight,db:m.accidentalThreeQuarterTonesFlatZimmermann,d:m.accidentalQuarterToneFlatStein,"++":m.accidentalThreeQuarterTonesSharpStein,"+":m.accidentalQuarterToneSharpStein,"+-":m.accidentalKucukMucennebSharp,bs:m.accidentalBakiyeFlat,bss:m.accidentalBuyukMucennebFlat,o:m.accidentalSori,k:m.accidentalKoron,bbs:m.accidentalBuyukMucennebSharp,"++-":m.accidentalBuyukMucennebSharp,ashs:m.accidentalBuyukMucennebSharp,afhf:m.accidentalBuyukMucennebSharp},JE={1:{a:[1],b:[1]},2:{a:[1,2]},3:{a:[1,3,2],b:[1,2,1],secondOnBottom:[1,2,3]},4:{a:[1,3,4,2],b:[1,2,3,1],spacedOutTetrachord:[1,2,1,2]},5:{a:[1,3,5,4,2],b:[1,2,4,3,1],spacedOutPentachord:[1,2,3,2,1],verySpacedOutPentachord:[1,2,1,2,1]},6:{a:[1,3,5,6,4,2],b:[1,2,4,5,3,1],spacedOutHexachord:[1,3,2,1,3,2],verySpacedOutHexachord:[1,2,1,2,1,2]}},QE={"a.":{code:m.augmentationDot,betweenLines:!0},av:{aboveCode:m.articStaccatissimoAbove,belowCode:m.articStaccatissimoBelow,betweenLines:!0},"a>":{aboveCode:m.articAccentAbove,belowCode:m.articAccentBelow,betweenLines:!0},"a-":{aboveCode:m.articTenutoAbove,belowCode:m.articTenutoBelow,betweenLines:!0},"a^":{aboveCode:m.articMarcatoAbove,belowCode:m.articMarcatoBelow,betweenLines:!1},"a+":{code:m.pluckedLeftHandPizzicato,betweenLines:!1},ao:{aboveCode:m.pluckedSnapPizzicatoAbove,belowCode:m.pluckedSnapPizzicatoBelow,betweenLines:!1},ah:{code:m.stringsHarmonic,betweenLines:!1},"a@":{aboveCode:m.fermataAbove,belowCode:m.fermataBelow,betweenLines:!1},"a@a":{code:m.fermataAbove,betweenLines:!1},"a@u":{code:m.fermataBelow,betweenLines:!1},"a@s":{aboveCode:m.fermataShortAbove,belowCode:m.fermataShortBelow,betweenLines:!1},"a@as":{code:m.fermataShortAbove,betweenLines:!1},"a@us":{code:m.fermataShortBelow,betweenLines:!1},"a@l":{aboveCode:m.fermataLongAbove,belowCode:m.fermataLongBelow,betweenLines:!1},"a@al":{code:m.fermataLongAbove,betweenLines:!1},"a@ul":{code:m.fermataLongBelow,betweenLines:!1},"a@vl":{aboveCode:m.fermataVeryLongAbove,belowCode:m.fermataVeryLongBelow,betweenLines:!1},"a@avl":{code:m.fermataVeryLongAbove,betweenLines:!1},"a@uvl":{code:m.fermataVeryLongBelow,betweenLines:!1},"a|":{code:m.stringsUpBow,betweenLines:!1},am:{code:m.stringsDownBow,betweenLines:!1},"a,":{code:m.pictChokeCymbal,betweenLines:!1}},KE={mordent:m.ornamentShortTrill,mordentInverted:m.ornamentMordent,turn:m.ornamentTurn,turnInverted:m.ornamentTurnSlash,tr:m.ornamentTrill,upprall:m.ornamentPrecompSlideTrillDAnglebert,downprall:m.ornamentPrecompDoubleCadenceUpperPrefix,prallup:m.ornamentPrecompTrillSuffixDandrieu,pralldown:m.ornamentPrecompTrillLowerSuffix,upmordent:m.ornamentPrecompSlideTrillBach,downmordent:m.ornamentPrecompDoubleCadenceUpperPrefixTurn,lineprall:m.ornamentPrecompAppoggTrill,prallprall:m.ornamentTremblement,scoop:m.brassScoop,doit:m.brassDoitMedium,fall:m.brassFallLipShort,doitLong:m.brassLiftMedium,fallLong:m.brassFallRoughMedium,bend:m.brassBend,plungerClosed:m.brassMuteClosed,plungerOpen:m.brassMuteOpen,flip:m.brassFlip,jazzTurn:m.brassJazzTurn,smear:m.brassSmear},T=class t{static clefProperties(i){if(!i||!(i in tm))throw new S("BadArgument","Invalid clef: "+i);return tm[i]}static keyProperties(i,e="treble",n="N",r){let o={octaveShift:0,duration:"4"};typeof r=="object"&&(o=Object.assign(Object.assign({},o),r));let s=t.sanitizeDuration(o.duration),a=i.split("/");if(a.length<2)throw new S("BadArguments",`First argument must be note/octave or note/octave/glyph-code: ${i}`);let c=a[0].toUpperCase();n=n.toUpperCase();let l=YE[c];if(!l)throw new S("BadArguments","Invalid key name: "+c);let u=parseInt(a[1],10);u-=o.octaveShift;let f=(u*7-4*7+l.index)/2;f+=t.clefProperties(e).lineShift;let d=typeof l.intVal<"u"?u*12+l.intVal:void 0,p="",g="N";return a.length>2&&a[2]?g=a[2].toUpperCase():n!=="N"?g=n:g=c,p=this.codeNoteHead(g,s),{key:c,octave:u,line:f,intValue:d,code:p,displaced:!1}}static integerToNote(i){if(typeof i>"u"||i<0||i>11)throw new S("BadArguments",`integerToNote() requires an integer in the range [0, 11]: ${i}`);let n={0:"C",1:"C#",2:"D",3:"D#",4:"E",5:"F",6:"F#",7:"G",8:"G#",9:"A",10:"A#",11:"B"}[i];if(!n)throw new S("BadArguments",`Unknown note value for integer: ${i}`);return n}static textWidth(i){return 7*i.toString().length}static articulationCodes(i){return QE[i]}static accidentalCodes(i){var e;return(e=ZE[i])!==null&&e!==void 0?e:i}static ornamentCodes(i){var e;return(e=KE[i])!==null&&e!==void 0?e:i}static keySignature(i){let e=ku[i];if(!e)throw new S("BadKeySignature",`Bad key signature spec: '${i}'`);if(!e.accidental)return[];let r={b:[2,.5,2.5,1,3,1.5,3.5],"#":[0,1.5,-.5,1,2.5,.5,2]}[e.accidental],o=[];for(let s=0;s<e.num;++s){let a=r[s];o.push({type:e.accidental,line:a})}return o}static getKeySignatures(){return ku}static hasKeySignature(i){return i in ku}static sanitizeDuration(i){let e=XE[i];if(e!==void 0&&(i=e),$f[i]===void 0)throw new S("BadArguments",`The provided duration is not valid: ${i}`);return i}static durationToFraction(i){return new rt().parse(t.sanitizeDuration(i))}static durationToNumber(i){return t.durationToFraction(i).value()}static durationToTicks(i){i=t.sanitizeDuration(i);let e=$f[i];if(e===void 0)throw new S("InvalidDuration");return e}static codeNoteHead(i,e){switch(i){case"D0":return m.noteheadDiamondWhole;case"D1":return m.noteheadDiamondHalf;case"D2":return m.noteheadDiamondBlack;case"D3":return m.noteheadDiamondBlack;case"T0":return m.noteheadTriangleUpWhole;case"T1":return m.noteheadTriangleUpHalf;case"T2":return m.noteheadTriangleUpBlack;case"T3":return m.noteheadTriangleUpBlack;case"X0":return m.noteheadXWhole;case"X1":return m.noteheadXHalf;case"X2":return m.noteheadXBlack;case"X3":return m.noteheadCircleX;case"S1":return m.noteheadSquareWhite;case"S2":return m.noteheadSquareBlack;case"R1":return m.noteheadSquareWhite;case"R2":return m.noteheadSquareWhite;case"DO":return m.noteheadTriangleUpBlack;case"RE":return m.noteheadMoonBlack;case"MI":return m.noteheadDiamondBlack;case"FA":return m.noteheadTriangleLeftBlack;case"FAUP":return m.noteheadTriangleRightBlack;case"SO":return m.noteheadBlack;case"LA":return m.noteheadSquareBlack;case"TI":return m.noteheadTriangleRoundDownBlack;case"DI":case"H":switch(e){case"1/2":return m.noteheadDiamondDoubleWhole;case"1":return m.noteheadDiamondWhole;case"2":return m.noteheadDiamondHalf;default:return m.noteheadDiamondBlack}case"X":case"M":switch(e){case"1/2":return m.noteheadXDoubleWhole;case"1":return m.noteheadXWhole;case"2":return m.noteheadXHalf;default:return m.noteheadXBlack}case"CX":switch(e){case"1/2":return m.noteheadCircleXDoubleWhole;case"1":return m.noteheadCircleXWhole;case"2":return m.noteheadCircleXHalf;default:return m.noteheadCircleX}case"CI":switch(e){case"1/2":return m.noteheadCircledDoubleWhole;case"1":return m.noteheadCircledWhole;case"2":return m.noteheadCircledHalf;default:return m.noteheadCircledBlack}case"SQ":switch(e){case"1/2":return m.noteheadDoubleWholeSquare;case"1":return m.noteheadSquareWhite;case"2":return m.noteheadSquareWhite;default:return m.noteheadSquareBlack}case"TU":switch(e){case"1/2":return m.noteheadTriangleUpDoubleWhole;case"1":return m.noteheadTriangleUpWhole;case"2":return m.noteheadTriangleUpHalf;default:return m.noteheadTriangleUpBlack}case"TD":switch(e){case"1/2":return m.noteheadTriangleDownDoubleWhole;case"1":return m.noteheadTriangleDownWhole;case"2":return m.noteheadTriangleDownHalf;default:return m.noteheadTriangleDownBlack}case"SF":switch(e){case"1/2":return m.noteheadSlashedDoubleWhole1;case"1":return m.noteheadSlashedWhole1;case"2":return m.noteheadSlashedHalf1;default:return m.noteheadSlashedBlack1}case"SB":switch(e){case"1/2":return m.noteheadSlashedDoubleWhole2;case"1":return m.noteheadSlashedWhole2;case"2":return m.noteheadSlashedHalf2;default:return m.noteheadSlashedBlack2}case"R":switch(e){case"1/2":return m.restDoubleWhole;case"1":return m.restWhole;case"2":return m.restHalf;case"4":return m.restQuarter;case"8":return m.rest8th;case"16":return m.rest16th;case"32":return m.rest32nd;case"64":return m.rest64th;case"128":return m.rest128th}break;case"S":switch(e){case"1/2":return m.noteheadSlashWhiteDoubleWhole;case"1":return m.noteheadSlashWhiteWhole;case"2":return m.noteheadSlashWhiteHalf;default:return m.noteheadSlashVerticalEnds}default:switch(e){case"1/2":return m.noteheadDoubleWhole;case"1":return m.noteheadWhole;case"2":return m.noteheadHalf;default:return m.noteheadBlack}}return m.null}};T.UNISON=!0;T.SOFTMAX_FACTOR=10;T.STEM_WIDTH=1.5;T.STEM_HEIGHT=35;T.STAVE_LINE_THICKNESS=1;T.RENDER_PRECISION_PLACES=3;T.RESOLUTION=Ze;T.durationCodes={"1/2":{stem:!1},1:{stem:!1},2:{stem:!0},4:{stem:!0},8:{stem:!0,beamCount:1,stemBeamExtension:0,codeFlagUp:m.flag8thUp},16:{beamCount:2,stemBeamExtension:0,stem:!0,codeFlagUp:m.flag16thUp},32:{beamCount:3,stemBeamExtension:7.5,stem:!0,codeFlagUp:m.flag32ndUp},64:{beamCount:4,stemBeamExtension:15,stem:!0,codeFlagUp:m.flag64thUp},128:{beamCount:5,stemBeamExtension:22.5,stem:!0,codeFlagUp:m.flag128thUp}};T.NOTATION_FONT_SCALE=39;T.TABLATURE_FONT_SCALE=39;T.SLASH_NOTEHEAD_WIDTH=15;T.STAVE_LINE_DISTANCE=10;T.TEXT_HEIGHT_OFFSET_HACK=1;T.accidentalColumnsTable=JE;T.unicode={sharp:"\u266F",flat:"\u266D",natural:"\u266E",triangle:"\u25B3","o-with-slash":"\xF8",degrees:"\xB0",circle:"\u25CB"};T.validTypes=qE;T.TIME4_4={numBeats:4,beatValue:4,resolution:Ze};function ai(t,i,e=!0){if(typeof t!="object"||t===null)return!1;let n=t.constructor;if(e){for(;t!==null;){if(n=t.constructor,"CATEGORY"in n&&n.CATEGORY===i)return!0;t=Object.getPrototypeOf(t)}return!1}else return"CATEGORY"in n&&n.CATEGORY===i}var em=t=>ai(t,"Accidental"),im=t=>ai(t,"Annotation"),Ba=t=>ai(t,"Barline"),nm=t=>ai(t,"Dot"),Fa=t=>ai(t,"GraceNote"),rm=t=>ai(t,"GraceNoteGroup"),La=t=>ai(t,"Note"),om=t=>ai(t,"RenderContext"),ee=t=>ai(t,"StaveNote"),an=t=>ai(t,"StemmableNote"),ie=t=>ai(t,"TabNote");function Va(...t){Yn.DEBUG&&J("VexFlow.Accidental",t)}var Yn=(()=>{class t extends B{static get CATEGORY(){return"Accidental"}static format(e,n){if(!e||e.length===0)return;let r=O.get("Accidental.noteheadAccidentalPadding"),o=n.leftShift+r,s=O.get("Accidental.accidentalSpacing"),a=O.get("Accidental.leftPadding"),c=[],l,u=0;for(let v=0;v<e.length;++v){let w=e[v],C=w.getNote(),D=C.getStave(),x=w.checkIndex(),k=C.getKeyProps()[x];if(C!==l){for(let U=0;U<C.keys.length;++U)u=Math.max(C.getLeftDisplacedHeadPx()-C.getXShift(),u);l=C}if(D){let U=D.getSpacingBetweenLines(),X=D.getYForLine(k.line),nt=Math.round(X/U*2)/2;c.push({y:X,line:nt,extraXSpaceNeeded:u,accidental:w,spacingBetweenStaveLines:U})}else c.push({line:k.line,extraXSpaceNeeded:u,accidental:w})}c.sort((v,w)=>w.line-v.line);let h=[],f=0;for(let v=0;v<c.length;v++){let w=c[v],C=w.accidental.type,D=h[h.length-1],x;!D||D?.line!==w.line?(x={line:w.line,flatLine:!0,dblSharpLine:!0,numAcc:0,width:0,column:0},h.push(x)):x=D,C!=="b"&&C!=="bb"&&(x.flatLine=!1),C!=="##"&&(x.dblSharpLine=!1),x.numAcc++,x.width+=w.accidental.getWidth()+s,f=Math.max(w.extraXSpaceNeeded,f)}let d=0;for(let v=0;v<h.length;v++){let w=!1,C=v,D=v;for(;D+1<h.length&&!w;)this.checkCollision(h[D],h[D+1])?D++:w=!0;let x=bt=>h[C+bt],k=bt=>bt.map(x),U=(bt,Ot)=>{let[Tt,Yt]=k([bt,Ot]).map(Je=>Je.line);return Tt-Yt},X=(...bt)=>bt.map(k).every(([Ot,Tt])=>!this.checkCollision(Ot,Tt)),nt=D-C+1,et=this.checkCollision(h[C],h[D])?"a":"b";switch(nt){case 3:et==="a"&&U(1,2)===.5&&U(0,1)!==.5&&(et="secondOnBottom");break;case 4:X([0,2],[1,3])&&(et="spacedOutTetrachord");break;case 5:et==="b"&&X([1,3])&&(et="spacedOutPentachord",X([0,2],[2,4])&&(et="verySpacedOutPentachord"));break;case 6:X([0,3],[1,4],[2,5])&&(et="spacedOutHexachord"),X([0,2],[2,4],[1,3],[3,5])&&(et="verySpacedOutHexachord");break;default:break}let St,mt;if(nt>=7){let bt=2,Ot=!0;for(;Ot===!0;){Ot=!1;for(let Tt=0;Tt+bt<h.length;Tt++)if(this.checkCollision(h[Tt],h[Tt+bt])){Ot=!0,bt++;break}}for(St=v;St<=D;St++)mt=(St-v)%bt+1,h[St].column=mt,d=d>mt?d:mt}else for(St=v;St<=D;St++)mt=T.accidentalColumnsTable[nt][et][St-v],h[St].column=mt,d=d>mt?d:mt;v=D}let p=[],g=[];for(let v=0;v<=d;v++)p[v]=0,g[v]=0;p[0]=o+f,g[0]=o,h.forEach(v=>{v.width>p[v.column]&&(p[v.column]=v.width)});for(let v=1;v<p.length;v++)g[v]=p[v]+g[v-1];let b=g[g.length-1],E=0;h.forEach(v=>{let w=0,C=E+v.numAcc;for(E;E<C;E++){let D=g[v.column-1]+w+f;c[E].accidental.setXShift(D),w+=c[E].accidental.getWidth()+s,Va("Line, accCount, shift: ",v.line,E,D)}}),n.leftShift=b+a}static checkCollision(e,n){let r=n.line-e.line,o=3;r>0?(o=n.flatLine||n.dblSharpLine?2.5:3,e.dblSharpLine&&(r-=.5)):(o=e.flatLine||e.dblSharpLine?2.5:3,n.dblSharpLine&&(r-=.5));let s=Math.abs(r)<o;return Va("Line1, Line2, Collision: ",e.line,n.line,s),s}static applyAccidentals(e,n){let r=[],o={};e.forEach(l=>{let u=new rt(0,1);l.getTickables().forEach(f=>{if(f.shouldIgnoreTicks())return;let d=o[u.value()];d?d.push(f):(r.push(u.value()),o[u.value()]=[f]),u.add(f.getTicks())})});let s=new he;n||(n="C");let a=s.createScaleMap(n),c={};r.forEach(l=>{let u=o[l],h=[],f=d=>{if(!ee(d)||d.isRest()||d.shouldIgnoreTicks())return;let p=d;p.keys.forEach((g,b)=>{let E=s.getNoteParts(g.split("/")[0]),v=g.split("/")[1],w=E.accidental||"n",C=E.root+w;c[E.root+v]||(c[E.root+v]=a[E.root]);let D=c[E.root+v]===C,x=h.indexOf(g)>-1;if(p.getModifiers().forEach((k,U)=>{em(k)&&k.type==w&&k.getIndex()==b&&p.getModifiers().splice(U,1)}),!D||D&&x){c[E.root+v]=C;let k=new t(w);p.addModifier(k,b),h.push(g)}}),p.getModifiers().forEach(g=>{rm(g)&&g.getGraceNotes().forEach(f)})};u.forEach(f)})}constructor(e){super(),Va("New accidental: ",e),this.type=e,this.position=B.Position.LEFT,this.cautionary=!1,this.reset()}reset(){this.text="",this.cautionary?(this.text+=T.accidentalCodes("{"),this.text+=T.accidentalCodes(this.type),this.text+=T.accidentalCodes("}"),this.fontInfo.size=O.get("Accidental.cautionary.fontSize")):(this.text+=T.accidentalCodes(this.type),this.fontInfo.size=O.get("Accidental.fontSize")),Fa(this.note)&&(this.fontInfo.size=O.get("Accidental.grace.fontSize"))}setNote(e){return $(e,"ArgumentError",`Bad note value: ${e}`),this.note=e,this.reset(),this}setAsCautionary(){return this.cautionary=!0,this.reset(),this}draw(){let{type:e,position:n,index:r}=this,o=this.checkContext(),s=this.checkAttachedNote();this.setRendered();let a=s.getModifierStartXY(n,r);this.x=a.x-this.width,this.y=a.y,Va("Rendering: ",e,a.x,a.y),this.renderText(o,0,0)}}return t.DEBUG=!1,t})();function GE(...t){y.DEBUG&&J("VexFlow.Stem",t)}var y=(()=>{class t extends L{static get CATEGORY(){return"Stem"}static get UP(){return 1}static get DOWN(){return-1}static get WIDTH(){return T.STEM_WIDTH}static get HEIGHT(){return T.STEM_HEIGHT}constructor(e){var n,r,o,s,a,c,l;super(),this.stemUpYOffset=0,this.stemDownYOffset=0,this.stemUpYBaseOffset=0,this.stemDownYBaseOffset=0,this.xBegin=(n=e?.xBegin)!==null&&n!==void 0?n:0,this.xEnd=(r=e?.xEnd)!==null&&r!==void 0?r:0,this.yTop=(o=e?.yTop)!==null&&o!==void 0?o:0,this.yBottom=(s=e?.yBottom)!==null&&s!==void 0?s:0,this.stemExtension=(a=e?.stemExtension)!==null&&a!==void 0?a:0,this.stemDirection=(c=e?.stemDirection)!==null&&c!==void 0?c:0,this.hide=e?.hide||!1,this.isStemlet=e?.isStemlet||!1,this.stemletHeight=(l=e?.stemletHeight)!==null&&l!==void 0?l:0,this.renderHeightAdjustment=0,this.setOptions(e)}setOptions(e){var n,r,o,s;this.stemUpYOffset=(n=e?.stemUpYOffset)!==null&&n!==void 0?n:0,this.stemDownYOffset=(r=e?.stemDownYOffset)!==null&&r!==void 0?r:0,this.stemUpYBaseOffset=(o=e?.stemUpYBaseOffset)!==null&&o!==void 0?o:0,this.stemDownYBaseOffset=(s=e?.stemDownYBaseOffset)!==null&&s!==void 0?s:0}setNoteHeadXBounds(e,n){return this.xBegin=e,this.xEnd=n,this}setDirection(e){this.stemDirection=e}setExtension(e){this.stemExtension=e}getExtension(){return this.stemExtension}setYBounds(e,n){this.yTop=e,this.yBottom=n}getHeight(){let e=this.stemDirection===t.UP?this.stemUpYOffset:this.stemDownYOffset;return(this.yBottom-this.yTop+(t.HEIGHT-e+this.stemExtension))*this.stemDirection}getBoundingBox(){throw new S("NotImplemented","getBoundingBox() not implemented.")}getExtents(){let e=this.stemDirection===t.UP,n=[this.yTop,this.yBottom],r=t.HEIGHT+this.stemExtension,o=(e?Math.min:Math.max)(...n),s=(e?Math.max:Math.min)(...n);return{topY:o+r*-this.stemDirection,baseY:s}}setVisibility(e){return this.hide=!e,this}setStemlet(e,n){return this.isStemlet=e,this.stemletHeight=n,this}adjustHeightForFlag(){this.renderHeightAdjustment=O.get("Stem.heightAdjustmentForFlag",-3)}adjustHeightForBeam(){this.renderHeightAdjustment=-t.WIDTH/2}draw(){if(this.setRendered(),this.hide)return;let e=this.checkContext(),n,r,o=this.stemDirection,s=0;o===t.DOWN?(n=this.xBegin,r=this.yTop+this.stemDownYOffset,s=this.stemDownYBaseOffset):(n=this.xEnd,r=this.yBottom-this.stemUpYOffset,s=this.stemUpYBaseOffset);let a=this.getHeight();GE("Rendering stem - ","Top Y: ",this.yTop,"Bottom Y: ",this.yBottom);let c=this.isStemlet?a-this.stemletHeight*this.stemDirection:0;e.openGroup("stem",this.getAttribute("id")),e.beginPath(),e.setLineWidth(t.WIDTH),e.moveTo(n,r-c+s),e.lineTo(n,r-a-this.renderHeightAdjustment*o),e.stroke(),e.closeGroup()}}return t.DEBUG=!1,t})();function _E(...t){Me.DEBUG&&J("VexFlow.Annotation",t)}var fe=function(t){return t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t[t.CENTER_STEM=4]="CENTER_STEM",t}(fe||{}),me=function(t){return t[t.TOP=1]="TOP",t[t.CENTER=2]="CENTER",t[t.BOTTOM=3]="BOTTOM",t[t.CENTER_STEM=4]="CENTER_STEM",t}(me||{}),Me=class t extends B{static get CATEGORY(){return"Annotation"}static get minAnnotationPadding(){return O.get("NoteHead.minPadding")}static format(i,e){if(!i||i.length===0)return!1;let n=0,r=0,o=0,s=0;for(let l=0;l<i.length;++l){let u=i[l],f=(2+G.convertSizeToPixelValue(u.fontInfo.size))/T.STAVE_LINE_DISTANCE,d=u.checkAttachedNote(),p=d.getGlyphWidth(),g=u.getWidth();u.horizontalJustification===fe.RIGHT?(o=Math.max(p,o),n=Math.max(n,g)+t.minAnnotationPadding):u.horizontalJustification===fe.LEFT?(s=Math.max(p,s),r=Math.max(r,g)):(n=Math.max(n,g/2)+t.minAnnotationPadding,r=Math.max(r,g/2),o=Math.max(p/2,o),s=Math.max(p/2,s));let b=d.getStave(),E=d.hasStem()?d.getStemDirection():y.UP,v=0,w=5;if(ie(d))if(d.renderOptions.drawStem){let C=d.getStem();C&&(v=Math.abs(C.getHeight())/T.STAVE_LINE_DISTANCE)}else v=0;else if(an(d)){let C=d.getStem();C&&d.getNoteType()==="n"&&(v=Math.abs(C.getHeight())/T.STAVE_LINE_DISTANCE)}if(b&&(w=b.getNumLines()),u.verticalJustification===this.VerticalJustify.TOP){let C=d.getLineNumber(!0);ie(d)&&(C=w-(d.leastString()-.5)),E===y.UP&&(C+=v),C+e.topTextLine+.5<w?(u.setTextLine(w-C),f+=w-C,e.topTextLine=f):(u.setTextLine(e.topTextLine),e.topTextLine+=f)}else if(u.verticalJustification===this.VerticalJustify.BOTTOM){let C=w-d.getLineNumber();ie(d)&&(C=d.greatestString()-1),E===y.DOWN&&(C+=v);let D=C+e.textLine+1;D<w?(u.setTextLine(w-D),f+=w-D,e.textLine=f):(u.setTextLine(e.textLine),e.textLine+=f)}else u.setTextLine(e.textLine)}let a=Math.min(Math.max(r-s,0),Math.max(r-e.rightShift,0)),c=Math.min(Math.max(n-o,0),Math.max(n-e.leftShift,0));return e.leftShift+=c,e.rightShift+=a,!0}constructor(i){super(),this.text=i,this.horizontalJustification=fe.CENTER,this.verticalJustification=me.TOP}setVerticalJustification(i){return this.verticalJustification=typeof i=="string"?t.VerticalJustifyString[i]:i,this}getJustification(){return this.horizontalJustification}setJustification(i){return this.horizontalJustification=typeof i=="string"?t.HorizontalJustifyString[i]:i,this}draw(){let i=this.checkContext(),e=this.checkAttachedNote(),n=e.hasStem()?e.getStemDirection():y.UP,r=e.getModifierStartXY(ut.ABOVE,this.index);this.setRendered(),i.openGroup("annotation",this.getAttribute("id"));let o=this.getWidth(),s=G.convertSizeToPixelValue(this.fontInfo.size),a,c;this.horizontalJustification===fe.LEFT?a=r.x:this.horizontalJustification===fe.RIGHT?a=r.x-o:this.horizontalJustification===fe.CENTER?a=r.x-o/2:a=e.getStemX()-o/2;let l={},u=0,h=e.hasStem(),f=e.checkStave();if(h&&(l=e.checkStem().getExtents(),u=f.getSpacingBetweenLines()),this.verticalJustification===me.BOTTOM)c=e.getYs().reduce((p,g)=>p>g?p:g),c+=(this.textLine+1)*T.STAVE_LINE_DISTANCE+s,h&&n===y.DOWN&&(c=Math.max(c,l.topY+s+u*this.textLine));else if(this.verticalJustification===me.CENTER){let d=e.getYForTopText(this.textLine)-1,p=f.getYForBottomText(this.textLine);c=d+(p-d)/2+s/2}else if(this.verticalJustification===me.TOP)c=Math.min(...e.getYs())-(this.textLine+1)*T.STAVE_LINE_DISTANCE,h&&n===y.UP&&(u=l.topY<f.getTopLineTopY()?T.STAVE_LINE_DISTANCE:u,c=Math.min(c,l.topY-u*(this.textLine+1)));else{let d=e.getStemExtents();c=d.topY+(d.baseY-d.topY)/2+s/2}_E("Rendering annotation: ",this.text,a,c),this.x=a,this.y=c,this.renderText(i,0,0),i.closeGroup()}};Me.DEBUG=!1;Me.HorizontalJustify=fe;Me.HorizontalJustifyString={left:fe.LEFT,right:fe.RIGHT,center:fe.CENTER,centerStem:fe.CENTER_STEM};Me.VerticalJustify=me;Me.VerticalJustifyString={above:me.TOP,top:me.TOP,below:me.BOTTOM,bottom:me.BOTTOM,center:me.CENTER,centerStem:me.CENTER_STEM};function $E(...t){Pi.DEBUG&&J("VexFlow.Articulation",t)}var{ABOVE:wi,BELOW:rs}=B.Position;function sm(t,i){return t(i/.5)*.5}function Iu(t,i){return i===wi?t<=5:t>=1}function am(t,i){return Iu(t,i)?i===wi?Math.ceil:Math.floor:Math.round}function t1(t,i,e,n){let r=sm(am(i,e),i),o=t&&Iu(r,e),s=r%1===0;return o&&s?r+.5*-n:r}var Pu=t=>ee(t)||Fa(t);function Bu(t,i){let e=t.getStemDirection(),{topY:n,baseY:r}=t.getStemExtents();if(Pu(t))return t.hasStem()?e===y.UP?n:r:Math.min(...t.getYs());if(ie(t))return t.hasStem()&&e===y.UP?n:t.checkStave().getYForTopText(i);throw new S("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}function Fu(t,i){let e=t.getStemDirection(),{topY:n,baseY:r}=t.getStemExtents();if(Pu(t))return t.hasStem()?e===y.UP?r:n:Math.max(...t.getYs());if(ie(t))return t.hasStem()?e===y.UP?t.checkStave().getYForBottomText(i):n:t.checkStave().getYForBottomText(i);throw new S("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}function Lu(t,i){let e=i===wi&&t.getStemDirection()===y.UP||i===rs&&t.getStemDirection()===y.DOWN;return Pu(t)?t.hasStem()&&e?.5:1:t.hasStem()&&e?1:0}var Pi=(()=>{class t extends B{static get CATEGORY(){return"Articulation"}static format(e,n){if(!e||e.length===0)return!1;let r=.5,o=0,s=(l,u,h)=>sm(am(u,h),l.height/10+r);e.forEach(l=>{let u=l.checkAttachedNote();o=Math.max(u.getGlyphWidth(),o);let h=5,f=u.hasStem()?u.getStemDirection():y.UP,d=0;if(an(u)){let g=u.getStem();g&&(d=Math.abs(g.getHeight())/T.STAVE_LINE_DISTANCE)}let p=u.getStave();if(p&&(h=p.getNumLines()),l.getPosition()===wi){let g=u.getLineNumber(!0);f===y.UP&&(g+=d);let b=s(l,n.topTextLine,wi),E=g+n.topTextLine+.5;!l.articulation.betweenLines&&E<h&&(b+=h-E),l.setTextLine(n.topTextLine),n.topTextLine+=b,l.setOrigin(.5,1)}else if(l.getPosition()===rs){let g=Math.max(h-u.getLineNumber(),0);f===y.DOWN&&(g+=d);let b=s(l,n.textLine,rs),E=g+n.textLine+.5;!l.articulation.betweenLines&&E<h&&(b+=h-E),l.setTextLine(n.textLine),n.textLine+=b,l.setOrigin(.5,0)}});let a=e.map(l=>l.getWidth()).reduce((l,u)=>Math.max(u,l)),c=Math.min(Math.max(a-o,0),Math.max(a-(n.leftShift+n.rightShift),0));return n.leftShift+=c/2,n.rightShift+=c/2,!0}static easyScoreHook({articulations:e},n,r){if(!e)return;let o={staccato:"a.",tenuto:"a-",accent:"a>"};e.split(",").map(s=>s.trim().split(".")).map(([s,a])=>{let c={type:o[s]};return a&&(c.position=B.PositionString[a]),r.getFactory().Articulation(c)}).map(s=>n.addModifier(s,0))}constructor(e){var n;super(),this.heightShift=0,this.type=e,this.position=wi,T.articulationCodes(this.type)||(((n=this.type.codePointAt(0))!==null&&n!==void 0?n:0)%2===0?this.position=wi:this.position=rs),this.articulation={betweenLines:!1},this.reset()}reset(){this.articulation=T.articulationCodes(this.type),this.articulation||(this.articulation={code:this.type,betweenLines:!1});let e=(this.position===wi?this.articulation.aboveCode:this.articulation.belowCode)||this.articulation.code||m.null;this.text=e}setBetweenLines(e=!0){return this.articulation.betweenLines=e,this}draw(){let e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();let r=this.checkIndex(),{position:o,textLine:s}=this,a=this.articulation.betweenLines,c=n.checkStave(),l=c.getSpacingBetweenLines(),u=ie(n),{x:h}=n.getModifierStartXY(o,r),f=!a||u,d=Lu(n,o),p={[wi]:()=>{let g=Bu(n,s)-(s+d)*l;return f?Math.min(c.getYForTopText(t.INITIAL_OFFSET),g):g},[rs]:()=>{let g=Fu(n,s)+(s+d)*l;return f?Math.max(c.getYForBottomText(t.INITIAL_OFFSET),g):g}}[o]();if(!u){let g=o===wi?-1:1,b=n.getKeyProps()[r].line,v=(n.getYs()[r]-p)/l+Number(b),w=t1(a,v,o,g);Iu(w,o)&&this.setOrigin(.5,.5),p+=Math.abs(w-v)*l*g}$E(`Rendering articulation at (x: ${h}, y: ${p})`),this.x=h,this.y=p,this.renderText(e,0,0)}}return t.DEBUG=!1,t.INITIAL_OFFSET=-.5,t})();var cn=class{static get CATEGORY(){return"RenderContext"}set font(i){this.setFont(i)}get font(){return this.getFont()}};function cm(t,i,e,n="#F55"){t.save(),t.setFillStyle(n),t.beginPath(),t.arc(i,e,3,0,Math.PI*2,!1),t.closePath(),t.fill(),t.restore()}var Ha=class extends L{static get CATEGORY(){return"Tickable"}constructor(){super(),this._preFormatted=!1,this._postFormatted=!1,this.ticks=new rt(0,1),this.intrinsicTicks=0,this.tickMultiplier=new rt(1,1),this.modifiers=[],this.tupletStack=[],this.alignCenter=!1,this.centerXShift=0,this.ignoreTicks=!1,this.formatterMetrics={freedom:{left:0,right:0},duration:"",iterations:0,space:{used:0,mean:0,deviation:0}}}reset(){return this}getTicks(){return this.ticks}shouldIgnoreTicks(){return this.ignoreTicks}setIgnoreTicks(i){return this.ignoreTicks=i,this}getWidth(){if(!this._preFormatted)throw new S("UnformattedNote","Can't call GetWidth on an unformatted note.");return this.width+(this.modifierContext?this.modifierContext.getWidth():0)}getX(){return this.checkTickContext("Can't getX() without a TickContext.").getX()+this.xShift}getFormatterMetrics(){return this.formatterMetrics}getCenterXShift(){return this.isCenterAligned()?this.centerXShift:0}setCenterXShift(i){return this.centerXShift=i,this}isCenterAligned(){return this.alignCenter}setCenterAlignment(i){return this.alignCenter=i,this}getVoice(){return $(this.voice,"NoVoice","Tickable has no voice.")}setVoice(i){this.voice=i}getTuplet(){return this.tuplet}getTupletStack(){return this.tupletStack}resetTuplet(i){let e,n;if(i){let r=this.tupletStack.indexOf(i);return r!==-1&&(this.tupletStack.splice(r,1),e=i.getNoteCount(),n=i.getNotesOccupied(),this.applyTickMultiplier(e,n)),this}for(;this.tupletStack.length;)i=this.tupletStack.pop(),e=i.getNoteCount(),n=i.getNotesOccupied(),this.applyTickMultiplier(e,n);return this}setTuplet(i){if(i){this.tupletStack.push(i);let e=i.getNoteCount(),n=i.getNotesOccupied();this.applyTickMultiplier(n,e)}return this.tuplet=i,this}addToModifierContext(i){this.modifierContext=i;for(let e=0;e<this.modifiers.length;++e)this.modifierContext.addMember(this.modifiers[e]);return this.modifierContext.addMember(this),this._preFormatted=!1,this}addModifier(i,e=0){return this.modifiers.push(i),this._preFormatted=!1,this}getModifiers(){return this.modifiers}setTickContext(i){this.tickContext=i,this._preFormatted=!1}checkTickContext(i="Tickable has no tick context."){return $(this.tickContext,"NoTickContext",i)}preFormat(){this._preFormatted||(this.width=0,this.modifierContext&&(this.modifierContext.preFormat(),this.width+=this.modifierContext.getWidth()))}set preFormatted(i){this._preFormatted=i}get preFormatted(){return this._preFormatted}postFormat(){return this._postFormatted?this:(this._postFormatted=!0,this)}set postFormatted(i){this._postFormatted=i}get postFormatted(){return this._postFormatted}getIntrinsicTicks(){return this.intrinsicTicks}setIntrinsicTicks(i){this.intrinsicTicks=i,this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}getTickMultiplier(){return this.tickMultiplier}applyTickMultiplier(i,e){this.tickMultiplier.multiply(i,e),this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}setDuration(i){let e=i.numerator*(T.RESOLUTION/i.denominator);this.ticks=this.tickMultiplier.clone().multiply(e),this.intrinsicTicks=this.ticks.value()}getAbsoluteX(){return this.checkTickContext("Can't getAbsoluteX() without a TickContext.").getX()}setModifierContext(i){return this.modifierContext=i,this}getModifierContext(){return this.modifierContext}checkModifierContext(){return $(this.modifierContext,"NoModifierContext","No modifier context attached to this tickable.")}};var pt=class t extends Ha{static get CATEGORY(){return"Note"}static getGlyphProps(i,e="n"){i=T.sanitizeDuration(i);let n=T.durationCodes[i];n===void 0&&(n=T.durationCodes[4]);let r=T.codeNoteHead(e.toUpperCase(),i);return r!==m.null&&(n=Object.assign(Object.assign({},n),{codeHead:r})),n}static plotMetrics(i,e,n){var r;let o=e.getMetrics(),s=e.getAbsoluteX()-o.modLeftPx-o.leftDisplacedHeadPx,a=e.getAbsoluteX()-o.leftDisplacedHeadPx,c=e.getAbsoluteX(),l=e.getAbsoluteX()+o.notePx,u=e.getAbsoluteX()+o.notePx+o.rightDisplacedHeadPx,h=e.getAbsoluteX()+o.notePx+o.rightDisplacedHeadPx+o.modRightPx,f=h+((r=e.getFormatterMetrics().freedom.right)!==null&&r!==void 0?r:0),d=h-s;i.save(),i.setFont(O.get("fontFamily"),8),i.fillText(Math.round(d)+"px",s+e.getXShift(),n);let p=n+7;function g(E,v,w,C=p){i.beginPath(),i.setStrokeStyle(w),i.setFillStyle(w),i.setLineWidth(3),i.moveTo(E+e.getXShift(),C),i.lineTo(v+e.getXShift(),C),i.stroke()}g(s,a,"red"),g(a,c,"#999"),g(c,l,"green"),g(l,u,"#999"),g(u,h,"red"),g(h,f,"#DD0"),g(s-e.getXShift(),s,"#BBB"),cm(i,c+e.getXShift(),p,"blue");let b=e.getFormatterMetrics();if(b.iterations>0){let E=b.space.deviation,v=E>=0?"+":"";i.setFillStyle("red"),i.fillText(v+Math.round(E),c+e.getXShift(),n-10)}i.restore()}static parseDuration(i){if(!i)return;let n=/(\d*\/?\d+|[a-z])(d*)([nrhms]|$)/.exec(i);if(!n)return;let r=n[1],o=n[2].length,s=n[3]||"n";return{duration:r,dots:o,type:s}}static parseNoteStruct(i){let e=t.parseDuration(i.duration);if(!e)return;let n=i.type;if(n&&!T.validTypes[n])return;let r=[];n||(n=e.type||"n",i.keys!==void 0&&i.keys.forEach((c,l)=>{let u=c.split("/");r[l]=u&&u.length===3?u[2]:n}));let o=T.durationToTicks(e.duration);if(!o)return;let s=i.dots?i.dots:e.dots;if(typeof s!="number")return;let a=o;for(let c=0;c<s;c++){if(a<=1)return;a=a/2,o+=a}return{duration:e.duration,type:n,customTypes:r,dots:s,ticks:o}}constructor(i){if(super(),!i)throw new S("BadArguments","Note must have valid initialization data to identify duration and type.");let e=t.parseNoteStruct(i);if(!e)throw new S("BadArguments",`Invalid note initialization object: ${JSON.stringify(i)}`);this.keys=i.keys||[],this.keyProps=[],this.duration=e.duration,this.noteType=e.type,this.customTypes=e.customTypes,i.durationOverride?this.setDuration(i.durationOverride):this.setIntrinsicTicks(e.ticks),this.modifiers=[],this.glyphProps=t.getGlyphProps(this.duration,this.noteType),this.customGlyphs=this.customTypes.map(n=>t.getGlyphProps(this.duration,n)),this.playNote=void 0,this.ignoreTicks=!1,this.width=0,this.leftDisplacedHeadPx=0,this.rightDisplacedHeadPx=0,this.xShift=0,this.ys=[],i.alignCenter&&this.setCenterAlignment(i.alignCenter),this.renderOptions={annotationSpacing:5,strokePx:1,yShift:0}}getPlayNote(){return this.playNote}setPlayNote(i){return this.playNote=i,this}isRest(){return!1}addStroke(i,e){return e.setNote(this),e.setIndex(i),this.modifiers.push(e),this.preFormatted=!1,this}getStave(){return this.stave}checkStave(){return $(this.stave,"NoStave","No stave attached to instance.")}setStave(i){return this.stave=i,this.setYs([i.getYForLine(0)]),this.setContext(this.stave.getContext()),this}getLeftDisplacedHeadPx(){return this.leftDisplacedHeadPx}getRightDisplacedHeadPx(){return this.rightDisplacedHeadPx}setLeftDisplacedHeadPx(i){return this.leftDisplacedHeadPx=i,this}setRightDisplacedHeadPx(i){return this.rightDisplacedHeadPx=i,this}shouldIgnoreTicks(){return this.ignoreTicks}getLineNumber(i){return 0}getLineForRest(){return 0}getGlyphProps(){return this.glyphProps}getGlyphWidth(){return 0}setYs(i){return this.ys=i,this}getYs(){if(this.ys.length===0)throw new S("NoYValues","No Y-values calculated for this note.");return this.ys}getYForTopText(i){return this.checkStave().getYForTopText(i)}getVoice(){if(!this.voice)throw new S("NoVoice","Note has no voice.");return this.voice}setVoice(i){return this.voice=i,this.preFormatted=!1,this}getTickContext(){return this.checkTickContext()}setTickContext(i){return this.tickContext=i,this.preFormatted=!1,this}getDuration(){return this.duration}isDotted(){return this.getModifiersByType("Dot").length>0}hasStem(){return!1}getNoteType(){return this.noteType}getBeam(){return this.beam}checkBeam(){return $(this.beam,"NoBeam","No beam attached to instance")}hasBeam(){return this.beam!==void 0}setBeam(i){return this.beam=i,this}addModifier(i,e=0){let n="Note.addModifier(modifier: Modifier, index: number=0)";if(typeof e=="string"&&(e=parseInt(e),console.warn(n+" expected a number for `index`, but received a string.")),typeof i!="object"||typeof e!="number")throw new S("WrongParams","Incorrect call signature. Use "+n+" instead.");return i.setNote(this),i.setIndex(e),super.addModifier(i),this}getModifiersByType(i){return this.modifiers.filter(e=>e.getCategory()===i)}getModifierStartXY(i,e,n){if(!this.preFormatted)throw new S("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");return{x:this.getAbsoluteX(),y:this.ys[0]}}getRightParenthesisPx(i){return this.getKeyProps()[i].displaced?this.getRightDisplacedHeadPx():0}getLeftParenthesisPx(i){return this.getKeyProps()[i].displaced?this.getLeftDisplacedHeadPx()-this.xShift:-this.xShift}getFirstDotPx(){let i=this.getRightDisplacedHeadPx(),e=this.checkModifierContext().getMembers("Parenthesis");return e.length!==0&&(i+=e[0].getWidth()+1),i}getMetrics(){if(!this.preFormatted)throw new S("UnformattedNote","Can't call getMetrics on an unformatted note.");let i=this.modifierContext?this.modifierContext.getState().leftShift:0,e=this.modifierContext?this.modifierContext.getState().rightShift:0,n=this.getWidth(),r=this.getGlyphWidth(),o=n-i-e-this.leftDisplacedHeadPx-this.rightDisplacedHeadPx;return{width:n,glyphWidth:r,notePx:o,modLeftPx:i,modRightPx:e,leftDisplacedHeadPx:this.leftDisplacedHeadPx,rightDisplacedHeadPx:this.rightDisplacedHeadPx,glyphPx:0}}getAbsoluteX(){let e=this.checkTickContext("Can't getAbsoluteX() without a TickContext.").getX();return this.stave&&(e+=this.stave.getNoteStartX()+O.get("Stave.padding",0)),this.isCenterAligned()&&(e+=this.getCenterXShift()),e}getStemDirection(){throw new S("NoStem","No stem attached to this note.")}getStemExtents(){throw new S("NoStem","No stem attached to this note.")}getTieRightX(){let i=this.getAbsoluteX(),e=this.getGlyphWidth();return i+=e/2,i+=-this.width/2+this.width+2,i}getTieLeftX(){let i=this.getAbsoluteX(),e=this.getGlyphWidth();return i+=e/2,i-=this.width/2+2,i}getKeys(){return this.keys}getKeyProps(){return this.keyProps}getBoundingBox(){let i=super.getBoundingBox();for(let e=0;e<this.modifiers.length;e++)i.mergeWith(this.modifiers[e].getBoundingBox());return i}};var z=function(t){return t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t[t.ABOVE=3]="ABOVE",t[t.BELOW=4]="BELOW",t[t.BEGIN=5]="BEGIN",t[t.END=6]="END",t}(z||{}),Lt=class extends L{static get CATEGORY(){return"StaveModifier"}static get Position(){return z}constructor(){super(),this.padding=10,this.position=z.ABOVE}getPosition(){return this.position}setPosition(i){return this.position=i,this}getStave(){return this.stave}checkStave(){return $(this.stave,"NoStave","No stave attached to instance.")}setStave(i){return this.stave=i,this}getPadding(i){return i!==void 0&&i<2?0:this.padding}setPadding(i){return this.padding=i,this}setLayoutMetrics(i){return this.layoutMetrics=i,this}getLayoutMetrics(){return this.layoutMetrics}};var ct=function(t){return t[t.SINGLE=1]="SINGLE",t[t.DOUBLE=2]="DOUBLE",t[t.END=3]="END",t[t.REPEAT_BEGIN=4]="REPEAT_BEGIN",t[t.REPEAT_END=5]="REPEAT_END",t[t.REPEAT_BOTH=6]="REPEAT_BOTH",t[t.NONE=7]="NONE",t}(ct||{}),Re=class t extends Lt{static get CATEGORY(){return"Barline"}static get type(){return ct}static get typeString(){return{single:ct.SINGLE,double:ct.DOUBLE,end:ct.END,repeatBegin:ct.REPEAT_BEGIN,repeatEnd:ct.REPEAT_END,repeatBoth:ct.REPEAT_BOTH,none:ct.NONE}}constructor(i){super(),this.thickness=T.STAVE_LINE_THICKNESS;let e=ct;this.widths={},this.widths[e.SINGLE]=5,this.widths[e.DOUBLE]=5,this.widths[e.END]=5,this.widths[e.REPEAT_BEGIN]=5,this.widths[e.REPEAT_END]=5,this.widths[e.REPEAT_BOTH]=5,this.widths[e.NONE]=5,this.paddings={},this.paddings[e.SINGLE]=0,this.paddings[e.DOUBLE]=0,this.paddings[e.END]=0,this.paddings[e.REPEAT_BEGIN]=15,this.paddings[e.REPEAT_END]=15,this.paddings[e.REPEAT_BOTH]=15,this.paddings[e.NONE]=0,this.layoutMetricsMap={},this.layoutMetricsMap[e.SINGLE]={xMin:0,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.DOUBLE]={xMin:-3,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.END]={xMin:-5,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.REPEAT_END]={xMin:-10,xMax:1,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.REPEAT_BEGIN]={xMin:-2,xMax:10,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.REPEAT_BOTH]={xMin:-10,xMax:10,paddingLeft:5,paddingRight:5},this.layoutMetricsMap[e.NONE]={xMin:0,xMax:0,paddingLeft:5,paddingRight:5},this.setPosition(z.BEGIN),this.setType(i)}getType(){return this.type}setType(i){return this.type=typeof i=="string"?t.typeString[i]:i,this.setWidth(this.widths[this.type]),this.setPadding(this.paddings[this.type]),this.setLayoutMetrics(this.layoutMetricsMap[this.type]),this}draw(){let i=this.checkStave(),e=i.checkContext();switch(this.setRendered(),e.openGroup("stavebarline",this.getAttribute("id")),this.type){case ct.SINGLE:this.drawVerticalBar(i,this.x,!1);break;case ct.DOUBLE:this.drawVerticalBar(i,this.x,!0);break;case ct.END:this.drawVerticalEndBar(i,this.x);break;case ct.REPEAT_BEGIN:this.drawRepeatBar(i,this.x,!0),i.getX()!==this.x&&this.drawVerticalBar(i,i.getX());break;case ct.REPEAT_END:this.drawRepeatBar(i,this.x,!1);break;case ct.REPEAT_BOTH:this.drawRepeatBar(i,this.x,!1),this.drawRepeatBar(i,this.x,!0);break;default:break}e.closeGroup()}drawVerticalBar(i,e,n){let r=i.checkContext(),o=i.getTopLineTopY(),s=i.getBottomLineBottomY();n&&r.fillRect(e-3,o,1,s-o),r.fillRect(e,o,1,s-o)}drawVerticalEndBar(i,e){let n=i.checkContext(),r=i.getTopLineTopY(),o=i.getBottomLineBottomY();n.fillRect(e-5,r,1,o-r),n.fillRect(e-2,r,3,o-r)}drawRepeatBar(i,e,n){let r=i.checkContext(),o=i.getTopLineTopY(),s=i.getBottomLineBottomY(),a=3;n||(a=-5),r.fillRect(e+a,o,1,s-o),r.fillRect(e-2,o,3,s-o);let c=2;n?a+=4:a-=4;let l=e+a+c/2,u=(i.getNumLines()-1)*i.getSpacingBetweenLines();u=u/2-i.getSpacingBetweenLines()/2;let h=o+u+c/2;r.beginPath(),r.arc(l,h,c,0,Math.PI*2,!1),r.fill(),h+=i.getSpacingBetweenLines(),r.beginPath(),r.arc(l,h,c,0,Math.PI*2,!1),r.fill()}};function e1(...t){os.DEBUG&&J("VexFlow.BarNote",t)}var os=(()=>{class t extends pt{static get CATEGORY(){return"BarNote"}constructor(e=ct.SINGLE){super({duration:"b"}),this.metrics={widths:{}};let n=ct;this.metrics.widths={[n.SINGLE]:8,[n.DOUBLE]:12,[n.END]:15,[n.REPEAT_BEGIN]:14,[n.REPEAT_END]:14,[n.REPEAT_BOTH]:18,[n.NONE]:0},this.ignoreTicks=!0,this.setType(e)}getType(){return this.type}setType(e){return this.type=typeof e=="string"?Re.typeString[e]:e,this.setWidth(this.metrics.widths[this.type]),this}addToModifierContext(e){return this}preFormat(){return this.preFormatted=!0,this}draw(){let e=this.checkContext();e1("Rendering bar line at: ",this.getAbsoluteX());let n=new Re(this.type);n.setX(this.getAbsoluteX()),n.setStave(this.checkStave()),n.setContext(e),n.drawWithStyle(),this.setRendered()}}return t.DEBUG=!1,t})();function lm(t){let i=0;return t.forEach(e=>{e.keyProps&&e.keyProps.forEach(n=>{i+=n.line-3})}),i>=0?y.DOWN:y.UP}function i1(t,i){let e=t.getStemExtents().topY,n=t.getStemX(),r=i.getStemExtents().topY,o=i.getStemX();return(r-e)/(o-n)}var Vu="L",n1="R",um="B",ci=class t extends L{static get CATEGORY(){return"Beam"}getStemDirection(){return this._stemDirection}static getDefaultBeamGroups(i){(!i||i==="c")&&(i="4/4");let n={"1/2":["1/2"],"2/2":["1/2"],"3/2":["1/2"],"4/2":["1/2"],"1/4":["1/4"],"2/4":["1/4"],"3/4":["1/4"],"4/4":["1/4"],"1/8":["1/8"],"2/8":["2/8"],"3/8":["3/8"],"4/8":["2/8"],"1/16":["1/16"],"2/16":["2/16"],"3/16":["3/16"],"4/16":["2/16"]}[i];if(n===void 0){let r=parseInt(i.split("/")[0],10),o=parseInt(i.split("/")[1],10);if(r%3===0)return[new rt(3,o)];if(o>4)return[new rt(2,o)];if(o<=4)return[new rt(1,o)]}else return n.map(r=>new rt().parse(r));return[new rt(1,4)]}static applyAndGetBeams(i,e,n){return t.generateBeams(i.getTickables(),{groups:n,stemDirection:e})}static generateBeams(i,e={}){(!e.groups||!e.groups.length)&&(e.groups=[new rt(2,8)]);let n=e.groups.map(C=>{if(!C.multiply)throw new S("InvalidBeamGroups","The beam groups must be an array of VexFlow.Fractions");return C.clone().multiply(T.RESOLUTION,1)}),r=i,o=0,s=[],a=[];function c(C){return C.reduce((D,x)=>x.getTicks().clone().add(D),new rt(0,1))}function l(){n.length-1>o?o+=1:o=0}function u(){let C=[],D=new rt(0,1);r.forEach(x=>{if(C=[],x.shouldIgnoreTicks()){s.push(a),a=C;return}a.push(x);let k=n[o].clone(),U=c(a).add(D),X=T.durationToNumber(x.getDuration())<8;if(X&&x.getTuplet()&&(k.numerator*=2),U.greaterThan(k)){if(!X){let nt=a.pop();nt&&C.push(nt)}s.push(a);do D=U.subtract(n[o]),l();while(D.greaterThanEquals(n[o]));a=C}else U.equals(k)&&(s.push(a),D=new rt(0,1),a=C,l())}),a.length>0&&s.push(a)}function h(){return s.filter(C=>{if(C.length>1){let D=!0;return C.forEach(x=>{x.getIntrinsicTicks()>=T.durationToTicks("4")&&(D=!1)}),D}return!1})}function f(){let C=[];s.forEach(D=>{let x=[];D.forEach((k,U,X)=>{let nt=U===0||U===X.length-1,et=X[U-1],St=!e.beamRests&&k.isRest(),mt=e.beamRests&&e.beamMiddleOnly&&k.isRest()&&nt,bt=!1;if(e.maintainStemDirections&&et&&!k.isRest()&&!et.isRest()){let Yt=et.getStemDirection();bt=k.getStemDirection()!==Yt}let Ot=parseInt(k.getDuration(),10)<8;St||mt||bt||Ot?(x.length>0&&C.push(x),x=bt?[k]:[]):x.push(k)}),x.length>0&&C.push(x)}),s=C}function d(){s.forEach(C=>{let D;if(e.maintainStemDirections){let x=p(C);D=x?x.getStemDirection():y.UP}else e.stemDirection?D=e.stemDirection:D=lm(C);g(C,D)})}function p(C){for(let D=0;D<C.length;D++){let x=C[D];if(!x.isRest())return x}return!1}function g(C,D){C.forEach(x=>{x.setStemDirection(D)})}function b(){let C=[];return s.forEach(D=>{let x;D.forEach(k=>{let U=k.getTuplet();U&&x!==U&&(x=U,C.push(x))})}),C}u(),f(),d();let E=h(),v=b(),w=[];return E.forEach(C=>{let D=new t(C);e.showStemlets&&(D.renderOptions.showStemlets=!0),e.secondaryBreaks&&(D.renderOptions.secondaryBreakTicks=T.durationToTicks(e.secondaryBreaks)),e.flatBeams===!0&&(D.renderOptions.flatBeams=!0,D.renderOptions.flatBeamOffset=e.flatBeamOffset),w.push(D)}),v.forEach(C=>{let D=C.notes[0].stemDirection===y.DOWN?-1:1;C.setTupletLocation(D);let x=!1;for(let k=0;k<C.notes.length;k++)if(!C.notes[k].hasBeam()){x=!0;break}C.setBracketed(x)}),w}constructor(i,e=!1){if(super(),this.slope=0,this.yShift=0,this.forcedPartialDirections={},!i||i.length===0)throw new S("BadArguments","No notes provided for beam.");if(i.length===1)throw new S("BadArguments","Too few notes for beam.");if(this._ticks=i[0].getIntrinsicTicks(),this._ticks>=T.durationToTicks("4"))throw new S("BadArguments","Beams can only be applied to notes shorter than a quarter note.");let n,r;this._stemDirection=i[0].getStemDirection();let o=this._stemDirection;for(e&&ee(i[0])?o=lm(i):e&&ie(i[0])&&(o=i.reduce((a,c)=>a+c.getStemDirection(),0)>-1?y.UP:y.DOWN),n=0;n<i.length;++n)r=i[n],e&&(r.setStemDirection(o),this._stemDirection=o),r.setBeam(this);this.postFormatted=!1,this.notes=i,this._beamCount=this.getBeamCount(),this.breakOnIndexes=[],this.renderOptions={beamWidth:5,maxSlope:.25,minSlope:-.25,slopeIterations:20,slopeCost:100,showStemlets:!1,stemletExtension:7,partialBeamLength:10,flatBeams:!1,minFlatBeamOffset:15}}getNotes(){return this.notes}getBeamCount(){return this.notes.map(n=>n.getGlyphProps().beamCount).reduce((n,r)=>r>n?r:n)}breakSecondaryAt(i){return this.breakOnIndexes=i,this}setPartialBeamSideAt(i,e){return this.forcedPartialDirections[i]=e,this}unsetPartialBeamSideAt(i){return delete this.forcedPartialDirections[i],this}getSlopeY(i,e,n,r){return n+(i-e)*r}calculateSlope(){let{notes:i,renderOptions:{maxSlope:e,minSlope:n,slopeIterations:r,slopeCost:o}}=this,s=this._stemDirection,a=i[0],c=i1(a,i[i.length-1]),l=(e-n)/r,u=Number.MAX_VALUE,h=0,f=0;for(let d=n;d<=e;d+=l){let p=0,g=0;for(let w=1;w<i.length;++w){let C=i[w];if(C.hasStem()||C.isRest()){let D=this.getSlopeY(C.getStemX(),a.getStemX(),a.getStemExtents().topY,d)+g,x=C.getStemExtents().topY;if(x*s<D*s){let k=Math.abs(x-D);g+=k*-s,p+=k*w}else p+=(x-D)*s}}let b=c/2,E=Math.abs(b-d),v=o*E+Math.abs(p);v<u&&(u=v,h=d,f=g)}this.slope=h,this.yShift=f}calculateFlatSlope(){let{notes:i,renderOptions:{beamWidth:e,minFlatBeamOffset:n,flatBeamOffset:r}}=this,o=this._stemDirection,s=0,a=0,c=0,l=0;for(let d=0;d<i.length;d++){let p=i[d],g=p.getStemExtents().topY;s+=g,o===y.DOWN&&l<g?(l=g,a=Math.max(...p.getYs()),c=p.getBeamCount()):o===y.UP&&(l===0||l>g)&&(l=g,a=Math.min(...p.getYs()),c=p.getBeamCount())}let u=s/i.length,h=n+c*e*1.5,f=a+h*-o;o===y.DOWN&&u<f?u=a+h:o===y.UP&&u>f&&(u=a-h),r?o===y.DOWN&&u>r?this.renderOptions.flatBeamOffset=u:o===y.UP&&u<r&&(this.renderOptions.flatBeamOffset=u):this.renderOptions.flatBeamOffset=u,this.slope=0,this.yShift=0}getBeamYToDraw(){let n=this.notes[0].getStemExtents().topY;return this.renderOptions.flatBeams&&this.renderOptions.flatBeamOffset&&(n=this.renderOptions.flatBeamOffset),n}applyStemExtensions(){let{notes:i,slope:e,renderOptions:{showStemlets:n,stemletExtension:r,beamWidth:o}}=this,s=this.yShift,a=this._beamCount,c=i[0],l=this.getBeamYToDraw(),u=c.getStemX();for(let h=0;h<i.length;++h){let f=i[h],d=f.getStem();if(d){let p=f.getStemX(),{topY:g}=f.getStemExtents(),b=this.getSlopeY(p,u,l,e)+s,E=d.getExtension(),v=f.getStemDirection()===y.UP?g-b:b-g,w=0;if(f.getStemDirection()!==this._stemDirection&&(w=(1+(f.getGlyphProps().beamCount-1)*1.5)*this.renderOptions.beamWidth),d.setExtension(E+v+w),d.adjustHeightForBeam(),f.isRest()&&n){let C=(a-1)*o*1.5+o;d.setVisibility(!0).setStemlet(!0,C+r)}}}}lookupBeamDirection(i,e,n,r,o){if(i==="4")return Vu;let s=this.forcedPartialDirections[o];if(s)return s;let a=`${T.durationToNumber(i)/2}`,c=e<T.durationToTicks(a),l=r<T.durationToTicks(a),u=n<T.durationToTicks(a);return c&&l&&u?um:c&&!l&&u?Vu:!c&&l&&u?n1:this.lookupBeamDirection(a,e,n,r,o)}getBeamLines(i){let e=T.durationToTicks(i),n=!1,r=[],o,s=this.renderOptions.partialBeamLength,a=!1,c=0;for(let u=0;u<this.notes.length;++u){let h=this.notes[u],f=h.getTicks().value();c+=f;let d=!1;parseInt(i,10)>=8&&(d=this.breakOnIndexes.indexOf(u)!==-1,this.renderOptions.secondaryBreakTicks&&c>=this.renderOptions.secondaryBreakTicks&&(c=0,d=!0));let p=h.getIntrinsicTicks()<e,g=h.getStemX()-y.WIDTH/2,b=this.notes[u-1],E=this.notes[u+1],v=E&&E.getIntrinsicTicks()<e,w=b&&b.getIntrinsicTicks()<e,C=b&&E&&p&&!w&&!v;if(p)if(n)o=r[r.length-1],o.end=g,d&&(n=!1,E&&!v&&o.end===void 0&&(o.end=o.start-s));else{if(o={start:g,end:void 0},n=!0,C){let D=b.getIntrinsicTicks(),x=E.getIntrinsicTicks(),k=h.getIntrinsicTicks(),U=this.lookupBeamDirection(i,D,k,x,u);[Vu,um].includes(U)?o.end=o.start-s:o.end=o.start+s}else v?d&&(o.end=o.start-s,n=!1):(a||u===0)&&E?o.end=o.start+s:o.end=o.start-s;r.push(o)}else n=!1;a=d}let l=r[r.length-1];return l&&l.end===void 0&&(l.end=l.start-s),r}drawStems(i){this.notes.forEach(e=>{let n=e.getStem();if(n){let r=e.getStemX();n.setNoteHeadXBounds(r,r),n.setContext(i).drawWithStyle()}},this)}drawBeamLines(i){let e=["4","8","16","32","64"],n=this.notes[0],r=this.getBeamYToDraw(),o=n.getStemX(),s=this.renderOptions.beamWidth*this._stemDirection;for(let a=0;a<e.length;++a){let c=e[a],l=this.getBeamLines(c);for(let u=0;u<l.length;++u){let h=l[u],f=h.start,d=this.getSlopeY(f,o,r,this.slope),p=h.end;if(p){let g=this.getSlopeY(p,o,r,this.slope);i.beginPath(),i.moveTo(f,d),i.lineTo(f,d+s),i.lineTo(p+1,g+s),i.lineTo(p+1,g),i.closePath(),i.fill()}else throw new S("NoLastBeamX","lastBeamX undefined.")}r+=s*1.5}}preFormat(){return this}postFormat(){this.postFormatted||(ie(this.notes[0])||this.renderOptions.flatBeams?this.calculateFlatSlope():this.calculateSlope(),this.applyStemExtensions(),this.postFormatted=!0)}draw(){let i=this.checkContext();this.setRendered(),!this.unbeamable&&(this.postFormatted||this.postFormat(),i.openGroup("beam",this.getAttribute("id")),this.drawStems(i),this.drawBeamLines(i),i.closeGroup())}};var ln=class t extends B{static get CATEGORY(){return"Bend"}static get UP(){return 0}static get DOWN(){return 1}static format(i,e){if(!i||i.length===0)return!1;let n=0;for(let r=0;r<i.length;++r){let o=i[r],s=o.checkAttachedNote();if(ie(s)){let a=s.leastString()-1;e.topTextLine<a&&(e.topTextLine=a)}o.setXShift(n),n=o.getWidth(),o.setTextLine(e.topTextLine)}return e.rightShift+=n,e.topTextLine+=1,!0}setStyleLine(i){return this.styleLine=i,this}getStyleLine(){return this.styleLine}constructor(i){super(),this.styleLine=O.getStyle("Bend.line"),this.xShift=0,this.tap="",this.renderOptions={bendWidth:8,releaseWidth:8},this.phrase=i,this.updateWidth()}setXShift(i){return this.xShift=i,this.updateWidth(),this}setTap(i){return this.tap=i,this}getTextHeight(){let i=new L("Bend");return i.setText(this.phrase[0].text),i.getHeight()}updateWidth(){let i=n=>{let r=new L("Bend");return r.setText(n),r.getWidth()},e=0;for(let n=0;n<this.phrase.length;++n){let r=this.phrase[n];if(r.width!==void 0)e+=r.width;else{let o=r.type===t.UP?this.renderOptions.bendWidth:this.renderOptions.releaseWidth;r.width=Math.max(o,i(r.text))+3,r.drawWidth=r.width/2,e+=r.width}}return this.setWidth(e+this.xShift),this}draw(){var i;let e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();let r=n.getModifierStartXY(B.Position.RIGHT,this.index);r.x+=3,r.y+=.5;let o=this.xShift,a=n.checkStave().getSpacingBetweenLines(),c=n.getYs().reduce((v,w)=>v<w?v:w),l=r.y-((this.textLine+1)*a+r.y-c)+3,u=r.y-((this.textLine+1)*a+r.y-c)-1,h=(v,w,C,D)=>{let x=v+C,k=w;this.applyStyle(e,this.styleLine),e.beginPath(),e.moveTo(v,w),e.quadraticCurveTo(x,k,v+C,D),e.stroke()},f=(v,w,C,D)=>{this.applyStyle(e,this.styleLine),e.beginPath(),e.moveTo(v,D),e.quadraticCurveTo(v+C,D,v+C,w),e.stroke()},d=(v,w,C)=>{let x=w+4*C;e.beginPath(),e.moveTo(v,w),e.lineTo(v-4,x),e.lineTo(v+4,x),e.closePath(),e.fill()},p=(v,w)=>{e.setFont(this.fontInfo);let C=v-e.measureText(w).width/2;e.fillText(w,C,u)},g,b=0,E=0;if(!((i=this.tap)===null||i===void 0)&&i.length){let v=n.getModifierStartXY(B.Position.CENTER,this.index);p(v.x,this.tap)}for(let v=0;v<this.phrase.length;++v){let w=this.phrase[v];w.drawWidth||(w.drawWidth=0),v===0&&(w.drawWidth+=o),E=w.drawWidth+b-(v===1?o:0),w.type===t.UP&&(g&&g.type===t.UP&&d(r.x,l,1),h(r.x,r.y,E,l)),w.type===t.DOWN&&(g&&g.type===t.UP&&f(r.x,r.y,E,l),g&&g.type===t.DOWN&&(d(r.x,r.y,-1),f(r.x,r.y,E,l)),g||(E=w.drawWidth,f(r.x,r.y,E,l))),p(r.x+E,w.text),g=w,b=w.drawWidth,g.x=r.x,r.x+=E}if(!g||g.x===void 0)throw new S("NoLastBendForBend","Internal error.");g.type===t.UP?d(g.x+E,l,1):g.type===t.DOWN&&d(g.x+E,r.y,-1)}};function Or(t){if(!t)return!1;let i=Xn();return typeof i.HTMLCanvasElement=="function"&&t instanceof i.HTMLCanvasElement||typeof t.getContext=="function"&&typeof t.toDataURL=="function"}function dm(t){if(!t)return!1;let i=Xn();return typeof i.HTMLDivElement=="function"&&t instanceof i.HTMLDivElement||typeof t.appendChild=="function"&&typeof t.style=="object"}var kr=class t extends cn{static get WIDTH(){return 600}static get HEIGHT(){return 400}static get CANVAS_BROWSER_SIZE_LIMIT(){return 32767}static sanitizeCanvasDims(i,e){let n=this.CANVAS_BROWSER_SIZE_LIMIT;return Math.max(i,e)>n&&(_f("Canvas dimensions exceed browser limit. Cropping to "+n),i>n&&(i=n),e>n&&(e=n)),[i,e]}constructor(i){super(),this.textHeight=0,this.context2D=i,this.curTransfrom=i.getTransform(),i.canvas?this.canvas=i.canvas:this.canvas={width:t.WIDTH,height:t.HEIGHT}}clear(){this.context2D.clearRect(0,0,this.canvas.width,this.canvas.height)}openGroup(i,e){}closeGroup(){}openRotation(i,e,n){this.curTransfrom=this.context2D.getTransform(),this.context2D.translate(e,n),this.context2D.rotate(i*Math.PI/180),this.context2D.translate(-e,-n)}closeRotation(){this.context2D.setTransform(this.curTransfrom)}add(i){}setFillStyle(i){return this.context2D.fillStyle=i,this}setBackgroundFillStyle(i){return this}setStrokeStyle(i){return this.context2D.strokeStyle=i,this}setShadowColor(i){return this.context2D.shadowColor=i,this}setShadowBlur(i){let e=this.context2D.getTransform(),n=Math.sqrt(e.a*e.a+e.b*e.b+e.c*e.c+e.d*e.d);return this.context2D.shadowBlur=n*i,this}setLineWidth(i){return this.context2D.lineWidth=i,this}setLineCap(i){return this.context2D.lineCap=i,this}setLineDash(i){return this.context2D.setLineDash(i),this}scale(i,e){return this.context2D.scale(i,e),this}resize(i,e,n){var r;let o=this.context2D.canvas,s=(r=n??Xn().devicePixelRatio)!==null&&r!==void 0?r:1;return[i,e]=t.sanitizeCanvasDims(i*s,e*s),i=i/s|0,e=e/s|0,o.width=i*s,o.height=e*s,Or(o)&&(o.style.width=i+"px",o.style.height=e+"px"),this.scale(s,s)}rect(i,e,n,r){return this.context2D.rect(i,e,n,r),this}fillRect(i,e,n,r){return this.context2D.fillRect(i,e,n,r),this}pointerRect(i,e,n,r){return this}clearRect(i,e,n,r){return this.context2D.clearRect(i,e,n,r),this}beginPath(){return this.context2D.beginPath(),this}moveTo(i,e){return this.context2D.moveTo(i,e),this}lineTo(i,e){return this.context2D.lineTo(i,e),this}bezierCurveTo(i,e,n,r,o,s){return this.context2D.bezierCurveTo(i,e,n,r,o,s),this}quadraticCurveTo(i,e,n,r){return this.context2D.quadraticCurveTo(i,e,n,r),this}arc(i,e,n,r,o,s){return this.context2D.arc(i,e,n,r,o,s),this}fill(){return this.context2D.fill(),this}stroke(){return this.context2D.stroke(),this}closePath(){return this.context2D.closePath(),this}measureText(i){let e=this.context2D.measureText(i),n=0,r=0;return e.fontBoundingBoxAscent?(n=-e.fontBoundingBoxAscent,r=e.fontBoundingBoxDescent+e.fontBoundingBoxAscent):(n=-e.actualBoundingBoxAscent,r=e.actualBoundingBoxDescent+e.actualBoundingBoxAscent),{x:0,y:n,width:e.width,height:r}}fillText(i,e,n){return this.context2D.fillText(i,e,n),this}save(){return this.context2D.save(),this}restore(){return this.context2D.restore(),this}set fillStyle(i){this.context2D.fillStyle=i}get fillStyle(){return this.context2D.fillStyle}set strokeStyle(i){this.context2D.strokeStyle=i}get strokeStyle(){return this.context2D.strokeStyle}setFont(i,e,n,r){let o=G.validate(i,e,n,r);return this.context2D.font=G.toCSSString(o),this.textHeight=G.convertSizeToPixelValue(o.size),this}getFont(){return this.context2D.font}};function hm(...t){pe.DEBUG&&J("VexFlow.ChordSymbol",t)}var Hu=class extends L{constructor(i,e,n,r,o){super(),this.text=i,this.symbolModifier=e,this.xShift=n,this.yShift=r,this.vAlign=o}isSuperscript(){return this.symbolModifier===Bi.SUPERSCRIPT}isSubscript(){return this.symbolModifier===Bi.SUBSCRIPT}},ye=function(t){return t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t[t.CENTER_STEM=4]="CENTER_STEM",t}(ye||{}),li=function(t){return t[t.TOP=1]="TOP",t[t.BOTTOM=2]="BOTTOM",t}(li||{}),Bi=function(t){return t[t.NONE=1]="NONE",t[t.SUBSCRIPT=2]="SUBSCRIPT",t[t.SUPERSCRIPT=3]="SUPERSCRIPT",t}(Bi||{}),pe=class t extends B{static get CATEGORY(){return"ChordSymbol"}static get superSubRatio(){return O.get("ChordSymbol.superSubRatio")}static get spacingBetweenBlocks(){return O.get("ChordSymbol.spacing")}static get superscriptOffset(){return O.get("ChordSymbol.superscriptOffset")}static get subscriptOffset(){return O.get("ChordSymbol.subscriptOffset")}static get minPadding(){return O.get("NoteHead.minPadding")}static format(i,e){if(!i||i.length===0)return!1;let n=0,r=0,o=0,s=0,a=0;for(let u of i){let h=u.checkAttachedNote(),f=1;for(let d=0;d<u.symbolBlocks.length;++d){let p=u.symbolBlocks[d],g=p.isSuperscript(),b=p.isSubscript();if(p.setXShift(n),(g||b)&&(f=2),b&&d>0){let E=u.symbolBlocks[d-1];E.isSuperscript()&&(p.setXShift(n-E.getWidth()-t.minPadding),p.vAlign=!0,n+=-E.getWidth()-t.minPadding+(E.getWidth()>p.getWidth()?E.getWidth()-p.getWidth():0))}n+=p.getWidth()+t.minPadding}if(u.getVertical()===li.TOP?(u.setTextLine(e.topTextLine),e.topTextLine+=f):(u.setTextLine(e.textLine+1),e.textLine+=f+1),u.getReportWidth()){if(an(h)){let d=h.getGlyphWidth();u.getHorizontal()===ye.RIGHT?(s=Math.max(d,s),r=Math.max(r,n)+t.minPadding):u.getHorizontal()===ye.LEFT?(a=Math.max(d,a),o=Math.max(o,n)):(r=Math.max(r,n/2)+t.minPadding,o=Math.max(o,n/2),s=Math.max(d/2,s),a=Math.max(d/2,a))}u.width=n}n=0}let c=Math.min(Math.max(o-a,0),Math.max(o-e.rightShift,0)),l=Math.min(Math.max(r-s,0),Math.max(r-e.leftShift,0));return e.leftShift+=l,e.rightShift+=c,!0}constructor(){super(),this.symbolBlocks=[],this.horizontal=ye.LEFT,this.vertical=li.TOP,this.reportWidth=!0}get superscriptOffset(){return t.superscriptOffset*G.convertSizeToPixelValue(this.fontInfo.size)}get subscriptOffset(){return t.subscriptOffset*G.convertSizeToPixelValue(this.fontInfo.size)}setReportWidth(i){return this.reportWidth=i,this}getReportWidth(){return this.reportWidth}getSymbolBlock(i={}){var e,n;let r=new Hu((e=i.text)!==null&&e!==void 0?e:"",(n=i.symbolModifier)!==null&&n!==void 0?n:Bi.NONE,0,0,!1);if(r.isSubscript()&&r.setYShift(this.subscriptOffset),r.isSuperscript()&&r.setYShift(this.superscriptOffset),r.isSubscript()||r.isSuperscript()){let{family:o,size:s,weight:a,style:c}=this.fontInfo,l=G.scaleSize(s,t.superSubRatio);r.setFont(o,l,a,c)}else r.setFont(this.fontInfo);return r}addSymbolBlock(i){return this.symbolBlocks.push(this.getSymbolBlock(i)),this}addText(i,e={}){return this.addSymbolBlock(Object.assign(Object.assign({},e),{text:i}))}addTextSuperscript(i){let e=Bi.SUPERSCRIPT;return this.addSymbolBlock({text:i,symbolModifier:e})}addTextSubscript(i){let e=Bi.SUBSCRIPT;return this.addSymbolBlock({text:i,symbolModifier:e})}addGlyphSuperscript(i){return this.addTextSuperscript(t.glyphs[i])}addGlyph(i,e={}){return this.addText(t.glyphs[i],e)}addGlyphOrText(i,e={}){let n="";for(let r=0;r<i.length;++r){let o=i[r],s=t.glyphs[o];s?n+=s:n+=o}return n.length>0&&this.addText(n,e),this}addLine(i={}){return this.addText("\uE874\uE874",i)}setVertical(i){return this.vertical=typeof i=="string"?t.VerticalJustifyString[i]:i,this}getVertical(){return this.vertical}setHorizontal(i){return this.horizontal=typeof i=="string"?t.HorizontalJustifyString[i]:i,this}getHorizontal(){return this.horizontal}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered(),i.openGroup("chordsymbol",this.getAttribute("id"));let n=e.getModifierStartXY(B.Position.ABOVE,this.index);i.setFont(this.fontInfo);let r,o=e.hasStem(),s=e.checkStave();if(this.vertical===li.BOTTOM){if(r=s.getYForBottomText(this.textLine+T.TEXT_HEIGHT_OFFSET_HACK),o){let c=e.checkStem().getExtents(),l=s.getSpacingBetweenLines(),u=e.getStemDirection()===1?c.baseY:c.topY;r=Math.max(r,u+l*(this.textLine+2))}}else{let c=Math.min(...e.getYs());if(r=Math.min(s.getYForTopText(this.textLine),c-10),o){let l=e.checkStem().getExtents(),u=s.getSpacingBetweenLines();r=Math.min(r,l.topY-5-u*this.textLine)}}let a=n.x;this.horizontal===ye.LEFT?a=n.x:this.horizontal===ye.RIGHT?a=n.x+this.getWidth():this.horizontal===ye.CENTER?a=n.x-this.getWidth()/2:a=e.getStemX()-this.getWidth()/2,hm("Rendering ChordSymbol: ",a,r),this.symbolBlocks.forEach(c=>{hm("Rendering Text: ",c.getText(),a+c.getXShift(),r+c.getYShift()),c.setX(a),c.setY(r),c.renderText(i,0,0)}),i.closeGroup()}getBoundingBox(){let i=this.symbolBlocks[0].getBoundingBox();for(let e=1;e<this.symbolBlocks.length;e++)i.mergeWith(this.symbolBlocks[e].getBoundingBox());return i}};pe.DEBUG=!1;pe.HorizontalJustify=ye;pe.HorizontalJustifyString={left:ye.LEFT,right:ye.RIGHT,center:ye.CENTER,centerStem:ye.CENTER_STEM};pe.VerticalJustify=li;pe.VerticalJustifyString={top:li.TOP,above:li.TOP,below:li.BOTTOM,bottom:li.BOTTOM};pe.glyphs={diminished:m.csymDiminished,dim:m.csymDiminished,halfDiminished:m.csymHalfDiminished,"+":m.csymAugmented,augmented:m.csymAugmented,majorSeventh:m.csymMajorSeventh,minor:m.csymMinor,"-":m.csymMinor,"(":"(",leftParen:"(",")":")",rightParen:")",leftBracket:m.csymBracketLeftTall,rightBracket:m.csymBracketRightTall,leftParenTall:"(",rightParenTall:")","/":m.csymDiagonalArrangementSlash,over:m.csymDiagonalArrangementSlash,"#":m.csymAccidentalSharp,b:m.csymAccidentalFlat};pe.symbolModifiers=Bi;function r1(...t){Ti.DEBUG&&J("VexFlow.Clef",t)}var Ti=(()=>{class t extends Lt{static get CATEGORY(){return"Clef"}static get types(){let{gClef:e,fClef:n,cClef:r,unpitchedPercussionClef1:o,sixStringTabClef:s}=m;return{treble:{code:e,line:3},bass:{code:n,line:1},alto:{code:r,line:2},tenor:{code:r,line:1},percussion:{code:o,line:2},soprano:{code:r,line:4},"mezzo-soprano":{code:r,line:3},"baritone-c":{code:r,line:0},"baritone-f":{code:n,line:2},subbass:{code:n,line:0},french:{code:e,line:4},tab:{code:s,line:2.5}}}constructor(e,n,r){super(),this.code=t.types.treble.code,this.line=t.types.treble.line,this.size="default",this.type="treble",this.setPosition(z.BEGIN),this.setType(e,n,r),r1("Creating clef:",e)}setType(e,n="default",r){return this.type=e,this.code=t.types[e].code,this.line=t.types[e].line,this.size=n??"default",r==="8va"&&(this.code===m.gClef&&(this.code=m.gClef8va),this.code===m.fClef&&(this.code=m.fClef8va)),r==="8vb"&&(this.code===m.gClef&&(this.code=m.gClef8vb),this.code===m.fClef&&(this.code=m.fClef8vb)),this.text=this.code,this.fontInfo.size=Math.floor(t.getPoint(this.size)),this}static getPoint(e){return e==="default"?O.get("fontSize"):O.get("fontSize")*2/3}setStave(e){return this.stave=e,this}draw(){let e=this.checkStave(),n=e.checkContext();this.setRendered(),n.openGroup("clef",this.getAttribute("id")),this.y=e.getYForLine(this.line),this.renderText(n,0,0),n.closeGroup()}}return t.DEBUG=!1,t})();var Ir=class extends pt{static get CATEGORY(){return"ClefNote"}constructor(i,e="default",n){super({duration:"b"}),this.setType(i,e,n),this.ignoreTicks=!0}setType(i,e,n){return this.clef=new Ti(i,e,n),this.setWidth(this.clef.getWidth()),this}getClef(){return this.clef}preFormat(){return this.preFormatted=!0,this}draw(){let i=this.checkStave(),e=this.checkContext();this.setRendered(),this.clef.setX(this.getAbsoluteX()),this.clef.setY(i.getYForLine(this.clef.line)),this.clef.renderText(e,0,0)}getBoundingBox(){return this.clef.getBoundingBox()}};var ui=class{static getNextContext(i){let e=i.tContexts,n=e.indexOf(i);if(n+1<e.length)return e[n+1]}constructor(i){var e;this.preFormatted=!1,this.postFormatted=!1,this.tickID=(e=i?.tickID)!==null&&e!==void 0?e:0,this.currentTick=new rt(0,1),this.maxTicks=new rt(0,1),this.maxTickable=void 0,this.minTicks=void 0,this.minTickable=void 0,this.padding=1,this.x=0,this.xBase=0,this.xOffset=0,this.tickables=[],this.tickablesByVoice={},this.notePx=0,this.glyphPx=0,this.leftDisplacedHeadPx=0,this.rightDisplacedHeadPx=0,this.modLeftPx=0,this.modRightPx=0,this.totalLeftPx=0,this.totalRightPx=0,this.tContexts=[],this.width=0,this.formatterMetrics={freedom:{left:0,right:0}}}getTickID(){return this.tickID}getX(){return this.x}setX(i){return this.x=i,this.xBase=i,this.xOffset=0,this}getXBase(){return this.xBase}setXBase(i){this.xBase=i,this.x=i+this.xOffset}getXOffset(){return this.xOffset}setXOffset(i){this.xOffset=i,this.x=this.xBase+i}getWidth(){return this.width+this.padding*2}setPadding(i){return this.padding=i,this}getMaxTicks(){return this.maxTicks}getMinTicks(){return this.minTicks}getMaxTickable(){return this.maxTickable}getMinTickable(){return this.minTickable}getTickables(){return this.tickables}getTickableForVoice(i){return this.tickablesByVoice[i]}getTickablesByVoice(){return this.tickablesByVoice}getCenterAlignedTickables(){return this.tickables.filter(i=>i.isCenterAligned())}getMetrics(){let{width:i,glyphPx:e,notePx:n,leftDisplacedHeadPx:r,rightDisplacedHeadPx:o,modLeftPx:s,modRightPx:a,totalLeftPx:c,totalRightPx:l}=this;return{width:i,glyphPx:e,notePx:n,leftDisplacedHeadPx:r,rightDisplacedHeadPx:o,modLeftPx:s,modRightPx:a,totalLeftPx:c,totalRightPx:l}}getCurrentTick(){return this.currentTick}setCurrentTick(i){this.currentTick=i,this.preFormatted=!1}addTickable(i,e){if(!i)throw new S("BadArgument","Invalid tickable added.");if(!i.shouldIgnoreTicks()){let n=i.getTicks();n.greaterThan(this.maxTicks)&&(this.maxTicks=n.clone(),this.maxTickable=i),this.minTicks===void 0?(this.minTicks=n.clone(),this.minTickable=i):n.lessThan(this.minTicks)&&(this.minTicks=n.clone(),this.minTickable=i)}return i.setTickContext(this),this.tickables.push(i),this.tickablesByVoice[e??0]=i,this.preFormatted=!1,this}preFormat(){var i;if(this.preFormatted)return this;for(let e=0;e<this.tickables.length;++e){let n=this.tickables[e];n.preFormat();let r=n.getMetrics();this.leftDisplacedHeadPx=Math.max(this.leftDisplacedHeadPx,r.leftDisplacedHeadPx),this.rightDisplacedHeadPx=Math.max(this.rightDisplacedHeadPx,r.rightDisplacedHeadPx),this.notePx=Math.max(this.notePx,r.notePx),this.glyphPx=Math.max(this.glyphPx,(i=r.glyphWidth)!==null&&i!==void 0?i:0),this.modLeftPx=Math.max(this.modLeftPx,r.modLeftPx),this.modRightPx=Math.max(this.modRightPx,r.modRightPx),this.totalLeftPx=Math.max(this.totalLeftPx,r.modLeftPx+r.leftDisplacedHeadPx),this.totalRightPx=Math.max(this.totalRightPx,r.modRightPx+r.rightDisplacedHeadPx),this.width=this.notePx+this.totalLeftPx+this.totalRightPx}return this}postFormat(){return this.postFormatted?this:(this.postFormatted=!0,this)}getFormatterMetrics(){return this.formatterMetrics}move(i,e,n){this.setX(this.getX()+i),this.getFormatterMetrics().freedom.left+=i,this.getFormatterMetrics().freedom.right-=i,e&&(e.getFormatterMetrics().freedom.right+=i),n&&(n.getFormatterMetrics().freedom.left-=i)}getDeviationCost(){return on(this.tickables.map(i=>i.getFormatterMetrics().space.deviation))}getAverageDeviationCost(){return this.tickables.length?this.getDeviationCost()/this.tickables.length:0}};function o1(...t){ju.DEBUG&&J("VexFlow.Crescendo",t)}function s1(t,i){let e=i.beginX,n=i.endX,r=i.y,o=i.height/2;t.beginPath(),i.reverse?(t.moveTo(e,r-o),t.lineTo(n,r),t.lineTo(e,r+o)):(t.moveTo(n,r-o),t.lineTo(e,r),t.lineTo(n,r+o)),t.stroke(),t.closePath()}var ju=(()=>{class t extends pt{static get CATEGORY(){return"Crescendo"}constructor(e){var n;super(e),this.options={extendLeft:0,extendRight:0,yShift:0},this.decrescendo=!1,this.line=(n=e.line)!==null&&n!==void 0?n:0,this.height=15}setLine(e){return this.line=e,this}setHeight(e){return this.height=e,this}setDecrescendo(e){return this.decrescendo=e,this}preFormat(){return this.preFormatted=!0,this}draw(){let e=this.checkContext(),n=this.checkStave();this.setRendered();let r=this.getTickContext(),o=ui.getNextContext(r),s=this.getAbsoluteX(),a=o?o.getX():n.getX()+n.getWidth(),c=n.getYForLine(this.line+-3)+1;o1("Drawing ",this.decrescendo?"decrescendo ":"crescendo ",this.height,"x",s-a),s1(e,{beginX:s-this.options.extendLeft,endX:a+this.options.extendRight,y:c+this.options.yShift,height:this.height,reverse:this.decrescendo})}}return t.DEBUG=!1,t})();var di=function(t){return t[t.NEAR_HEAD=1]="NEAR_HEAD",t[t.NEAR_TOP=2]="NEAR_TOP",t}(di||{}),Pr=class t extends L{static get CATEGORY(){return"Curve"}static get Position(){return di}static get PositionString(){return{nearHead:di.NEAR_HEAD,nearTop:di.NEAR_TOP}}constructor(i,e,n){super(),this.renderOptions=Object.assign({thickness:2,xShift:0,yShift:10,position:di.NEAR_HEAD,positionEnd:di.NEAR_HEAD,invert:!1,cps:[{x:0,y:10},{x:0,y:10}],openingDirection:"auto"},n),this.setNotes(i,e)}setNotes(i,e){if(!i&&!e)throw new S("BadArguments","Curve needs to have either `from` or `to` set.");return this.from=i,this.to=e,this}isPartial(){return!this.from||!this.to}renderCurve(i){var e,n;let r=this.checkContext(),o=this.renderOptions.xShift,s=this.renderOptions.yShift*i.direction,a=i.firstX+o,c=i.firstY+s,l=i.lastX-o,u=i.lastY+s,h=this.renderOptions.thickness,f=this.renderOptions.cps,{x:d,y:p}=f[0],{x:g,y:b}=f[1],E=(l-a)/(f.length+2);r.beginPath(),r.moveTo(a,c),r.bezierCurveTo(a+E+d,c+p*i.direction,l-E+g,u+b*i.direction,l,u),!((e=this.style)===null||e===void 0)&&e.lineDash||r.bezierCurveTo(l-E+g,u+(b+h)*i.direction,a+E+d,c+(p+h)*i.direction,a,c),r.stroke(),r.closePath(),!((n=this.style)===null||n===void 0)&&n.lineDash||r.fill()}draw(){this.checkContext(),this.setRendered();let i=this.from,e=this.to,n,r,o,s,a=0,c="baseY",l="baseY";function u(d){return typeof d=="string"?t.PositionString[d]:d}let h=u(this.renderOptions.position),f=u(this.renderOptions.positionEnd);return h===di.NEAR_TOP&&(c="topY",l="topY"),f===di.NEAR_HEAD?l="baseY":f===di.NEAR_TOP&&(l="topY"),i?(n=i.getTieRightX(),a=i.getStemDirection(),o=i.getStemExtents()[c]):(n=e.checkStave().getTieStartX(),o=e.getStemExtents()[c]),e?(r=e.getTieLeftX(),a=e.getStemDirection(),s=e.getStemExtents()[l]):(r=i.checkStave().getTieEndX(),s=i.getStemExtents()[l]),this.renderOptions.openingDirection==="up"&&(a=1),this.renderOptions.openingDirection==="down"&&(a=-1),this.renderCurve({firstX:n,lastX:r,firstY:o,lastY:s,direction:a*(this.renderOptions.invert===!0?-1:1)}),!0}};var un=class t extends B{static get CATEGORY(){return"Dot"}static getDots(i){return i.getModifiersByType(t.CATEGORY)}static buildAndAttach(i,e){for(let n of i)if(e?.all)for(let r=0;r<n.keys.length;r++){let o=new t;n.addModifier(o,r)}else if(e?.index!==void 0){let r=new t;n.addModifier(r,e?.index)}else{let r=new t;n.addModifier(r,0)}}static format(i,e){let n=e.rightShift,r=1;if(!i||i.length===0)return!1;let o=[],s={};for(let d=0;d<i.length;++d){let p=i[d],g=p.getNote(),b,E;if(ee(g)){let w=p.checkIndex();b=g.getKeyProps()[w],E=g.getFirstDotPx()}else if(ie(g))b={line:.5},E=n;else throw new S("Internal","Unexpected instance.");let v=g.getAttribute("id");o.push({line:b.line,note:g,noteId:v,dot:p}),s[v]=Math.max(s[v]||E,E)}o.sort((d,p)=>p.line-d.line);let a=n,c=0,l=null,u=null,h=null,f=0;for(let d=0;d<o.length;++d){let{dot:p,note:g,noteId:b,line:E}=o[d];(E!==l||g!==u)&&(a=s[b]),!g.isRest()&&E!==l&&(Math.abs(E%1)===.5?f=0:(f=.5,(u!==null&&!u.isRest()&&l!==null&&l-E===.5||E+f===h)&&(f=-.5))),g.isRest()?p.dotShiftY+=-f:p.dotShiftY=-f,h=E+f,p.setXShift(a),a+=p.getWidth()+r,c=a>c?a:c,l=E,u=g}return e.rightShift+=c,!0}constructor(){super(),this.position=B.Position.RIGHT,this.setText(m.augmentationDot),this.dotShiftY=0}setNote(i){return this.note=i,this.font=i.font,this}setDotShiftY(i){return this.dotShiftY=i,this}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let r=e.checkStave().getSpacingBetweenLines(),o=e.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});ie(e)&&(o.y=e.getStemExtents().baseY),this.x=o.x,this.y=o.y+this.dotShiftY*r,this.renderText(i,0,0)}};var Di=class extends B{static get CATEGORY(){return"FretHandFinger"}static format(i,e){let{leftShift:n,rightShift:r}=e,o=1;if(!i||i.length===0)return!1;let s=[],a=null,c=0,l=0;for(let b=0;b<i.length;++b){let E=i[b],v=E.getNote(),w=E.getPosition(),C=E.checkIndex(),D=v.getKeyProps()[C],x=O.get("FretHandFinger.fontSize");if(E.position===ut.ABOVE&&(e.topTextLine+=x/T.STAVE_LINE_DISTANCE+.5),E.position===ut.BELOW&&(e.textLine+=x/T.STAVE_LINE_DISTANCE+.5),v!==a){for(let k=0;k<v.keys.length;++k)n===0&&(c=Math.max(v.getLeftDisplacedHeadPx(),c)),r===0&&(l=Math.max(v.getRightDisplacedHeadPx(),l));a=v}s.push({note:v,num:E,pos:w,line:D.line,shiftL:c,shiftR:l})}s.sort((b,E)=>E.line-b.line);let u=0,h=0,f=0,d=0,p=null,g=null;for(let b=0;b<s.length;++b){let E=0,{note:v,pos:w,num:C,line:D,shiftL:x,shiftR:k}=s[b];(D!==p||v!==g)&&(u=n+x,h=r+k);let U=C.getWidth()+o;w===B.Position.LEFT?(C.setXShift(n+u),E=n+U,f=E>f?E:f):w===B.Position.RIGHT&&(C.setXShift(h),E=l+U,d=E>d?E:d),p=D,g=v}return e.leftShift+=f,e.rightShift+=d,!0}static easyScoreHook({fingerings:i}={},e,n){i?.split(",").map(r=>{let o=r.trim().split("."),s={number:o[0]};return o[1]&&(s.position=o[1]),n.getFactory().Fingering(s)}).map((r,o)=>e.addModifier(r,o))}constructor(i){super(),this.setFretHandFinger(i),this.position=B.Position.LEFT,this.xOffset=0,this.yOffset=0}setFretHandFinger(i){return this.text=i,this}getFretHandFinger(){return this.text}setOffsetX(i){return this.xOffset=i,this}setOffsetY(i){return this.yOffset=i,this}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let n=e.getModifierStartXY(this.position,this.index),r=n.x+this.xOffset,o=n.y+this.yOffset+5;switch(this.position){case B.Position.ABOVE:r-=4,o-=12;break;case B.Position.BELOW:r-=2,o+=10;break;case B.Position.LEFT:r-=this.width;break;case B.Position.RIGHT:r+=1;break;default:throw new S("InvalidPosition",`The position ${this.position} does not exist`)}this.renderText(i,r,o)}};function fm(...t){ss.DEBUG&&J("VexFlow.Parser",t)}var ja=-1;function Ua(t){if("matchedString"in t)return t.matchedString;if("results"in t)return Ua(t.results);let i=t;return i.length===1?Ua(i[0]):i.length===0?null:i.map(Ua)}var ss=(()=>{class t{constructor(e){this.grammar=e,this.line="",this.pos=0,this.errorPos=ja}parse(e){this.line=e,this.pos=0,this.errorPos=ja;let n=this.expect(this.grammar.begin());return n.errorPos=this.errorPos,n}matchFail(e){this.errorPos===ja&&(this.errorPos=this.pos),this.pos=e}matchSuccess(){this.errorPos=ja}matchToken(e,n=!1){let r=n?new RegExp("^(("+e+"))"):new RegExp("^(("+e+")\\s*)"),s=this.line.slice(this.pos).match(r);return s!==null?{success:!0,matchedString:s[2],incrementPos:s[1].length,pos:this.pos}:{success:!1,pos:this.pos}}expectOne(e,n=!1){let r=[],o=this.pos,s=!0,a=!1;if(n=n===!0||e.maybe===!0,e.expect)for(let h of e.expect){let f=this.pos,d=this.expect(h);if(d.success){if(r.push(d),a=!0,e.or)break}else if(s=!1,!e.or){this.pos=f;break}}let c=e.or&&a||s,l=c||n===!0,u=c?1:0;return n&&!c&&(this.pos=o),l?this.matchSuccess():this.matchFail(o),{success:l,results:r,numMatches:u}}expectOneOrMore(e,n=!1){let r=[],o=this.pos,s=0,a=!0;do{let l=this.expectOne(e);l.success&&l.results?(s++,r.push(l.results)):a=!1}while(a);let c=s>0||n===!0;return n&&!(s>0)&&(this.pos=o),c?this.matchSuccess():this.matchFail(o),{success:c,results:r,numMatches:s}}expectZeroOrMore(e){return this.expectOneOrMore(e,!0)}expect(e){if(fm("Evaluating rule function:",e),!e)throw new S("Invalid rule function");let n,r=e.bind(this.grammar)();if(r.token)n=this.matchToken(r.token,r.noSpace===!0),n.success&&(this.pos+=n.incrementPos);else if(r.expect)r.oneOrMore?n=this.expectOneOrMore(r):r.zeroOrMore?n=this.expectZeroOrMore(r):n=this.expectOne(r);else throw fm(r),new S("Bad grammar! No `token` or `expect` property "+r);let o=[];return n.matches=o,n.results&&n.results.forEach(s=>o.push(Ua(s))),r.run&&n.success&&r.run({matches:o}),n}}return t.DEBUG=!1,t})();function hi(...t){as.DEBUG&&J("VexFlow.EasyScore",t)}var Uu=class{constructor(i){this.builder=i}begin(){return this.LINE}LINE(){return{expect:[this.PIECE,this.PIECES,this.EOL]}}PIECE(){return{expect:[this.CHORDORNOTE,this.PARAMS],run:()=>this.builder.commitPiece()}}PIECES(){return{expect:[this.COMMA,this.PIECE],zeroOrMore:!0}}PARAMS(){return{expect:[this.DURATION,this.TYPE,this.DOTS,this.OPTS]}}CHORDORNOTE(){return{expect:[this.CHORD,this.SINGLENOTE],or:!0}}CHORD(){return{expect:[this.LPAREN,this.NOTES,this.RPAREN],run:i=>this.builder.addChord(i.matches[1])}}NOTES(){return{expect:[this.NOTE],oneOrMore:!0}}NOTE(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE]}}SINGLENOTE(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE],run:i=>{let e=i;this.builder.addSingleNote(e.matches[0],e.matches[1],e.matches[2])}}}ACCIDENTAL(){return{expect:[this.MICROTONES,this.ACCIDENTALS],maybe:!0,or:!0}}DOTS(){return{expect:[this.DOT],zeroOrMore:!0,run:i=>this.builder.setNoteDots(i.matches)}}TYPE(){return{expect:[this.SLASH,this.MAYBESLASH,this.TYPES],maybe:!0,run:i=>this.builder.setNoteType(i.matches[2])}}DURATION(){return{expect:[this.SLASH,this.DURATIONS],maybe:!0,run:i=>this.builder.setNoteDuration(i.matches[1])}}OPTS(){return{expect:[this.LBRACKET,this.KEYVAL,this.KEYVALS,this.RBRACKET],maybe:!0}}KEYVALS(){return{expect:[this.COMMA,this.KEYVAL],zeroOrMore:!0}}KEYVAL(){let i=e=>e.slice(1,-1);return{expect:[this.KEY,this.EQUALS,this.VAL],run:e=>this.builder.addNoteOption(e.matches[0],i(e.matches[2]))}}VAL(){return{expect:[this.SVAL,this.DVAL],or:!0}}KEY(){return{token:"[a-zA-Z][a-zA-Z0-9]*"}}DVAL(){return{token:'["][^"]*["]'}}SVAL(){return{token:"['][^']*[']"}}NOTENAME(){return{token:"[a-gA-G]"}}OCTAVE(){return{token:"[0-9]+"}}ACCIDENTALS(){return{token:"bb|b|##|#|n"}}MICROTONES(){return{token:"bbs|bss|bs|db|d|\\+\\+-|\\+-|\\+\\+|\\+|k|o"}}DURATIONS(){return{token:"[0-9whq]+"}}TYPES(){return{token:"[rRsSmMhHgG]"}}LPAREN(){return{token:"[(]"}}RPAREN(){return{token:"[)]"}}COMMA(){return{token:"[,]"}}DOT(){return{token:"[.]"}}SLASH(){return{token:"[/]"}}MAYBESLASH(){return{token:"[/]?"}}EQUALS(){return{token:"[=]"}}LBRACKET(){return{token:"\\["}}RBRACKET(){return{token:"\\]"}}EOL(){return{token:"$"}}},Wu=class{constructor(i){this.chord=[],this.dots=0,this.options={},this.duration=i}},zu=class{constructor(i){this.commitHooks=[],this.factory=i,this.reset()}reset(i){this.options=Object.assign({stem:"auto",clef:"treble"},i),this.elements={notes:[],accidentals:[]},this.rollingDuration="8",this.resetPiece()}getFactory(){return this.factory}getElements(){return this.elements}addCommitHook(i){this.commitHooks.push(i)}resetPiece(){hi("resetPiece"),this.piece=new Wu(this.rollingDuration)}setNoteDots(i){hi("setNoteDots:",i),i&&(this.piece.dots=i.length)}setNoteDuration(i){hi("setNoteDuration:",i),this.rollingDuration=this.piece.duration=i||this.rollingDuration}setNoteType(i){hi("setNoteType:",i),i&&(this.piece.type=i)}addNoteOption(i,e){hi("addNoteOption: key:",i,"value:",e),this.piece.options[i]=e}addNote(i,e,n){hi("addNote:",i,e,n),this.piece.chord.push({key:i,accid:e,octave:n})}addSingleNote(i,e,n){hi("addSingleNote:",i,e,n),this.addNote(i,e,n)}addChord(i){hi("startChord"),typeof i[0]!="object"?this.addSingleNote(i[0]):i.forEach(e=>{e&&this.addNote(...e)}),hi("endChord")}commitPiece(){hi("commitPiece");let{factory:i}=this;if(!i)return;let e=Object.assign(Object.assign({},this.options),this.piece.options),n=$(e.stem,"BadArguments","options.stem is not defined").toLowerCase(),r=$(e.clef,"BadArguments","options.clef is not defined").toLowerCase(),{chord:o,duration:s,dots:a,type:c}=this.piece,l=he.accidentals,u=o.map(p=>{var g;return p.key+(l.includes((g=p.accid)!==null&&g!==void 0?g:"")?p.accid:"")+"/"+p.octave}),h=n==="auto",f=c?.toLowerCase()==="g"?i.GhostNote({duration:s,dots:a}):i.StaveNote({keys:u,duration:s,dots:a,type:c,clef:r,autoStem:h});h||f.setStemDirection(n==="up"?y.UP:y.DOWN);let d=[];o.forEach((p,g)=>{let b=p.accid;if(typeof b=="string"){let E=i.Accidental({type:b});f.addModifier(E,g),d.push(E)}else d.push(void 0)});for(let p=0;p<a;p++)un.buildAndAttach([f],{all:!0});this.commitHooks.forEach(p=>p(e,f,this)),this.elements.notes.push(f),this.elements.accidentals.push(d),this.resetPiece()}};function a1(t,i){t.id!==void 0&&i.setAttribute("id",t.id)}var c1=/\s*,\s*/;function l1(t,i){t.class!==void 0&&t.class.split(c1).forEach(e=>i.addClass(e))}var as=(()=>{class t{constructor(e={}){this.defaults={clef:"treble",time:"4/4",stem:"auto"},this.setOptions(e)}set(e){return this.defaults=Object.assign(Object.assign({},this.defaults),e),this}setOptions(e){var n,r;let o=e.factory,s=(n=e.builder)!==null&&n!==void 0?n:new zu(o);return this.options=Object.assign(Object.assign({commitHooks:[a1,l1,Pi.easyScoreHook,Di.easyScoreHook],throwOnError:!1},e),{factory:o,builder:s}),this.factory=o,this.builder=s,this.grammar=new Uu(this.builder),this.parser=new ss(this.grammar),(r=this.options.commitHooks)===null||r===void 0||r.forEach(a=>this.addCommitHook(a)),this}setContext(e){return this.factory.setContext(e),this}parse(e,n={}){this.builder.reset(n);let r=this.parser.parse(e);if(!r.success&&this.options.throwOnError)throw hi(r),new S("Error parsing line: "+e);return r}beam(e,n){return this.factory.Beam({notes:e,options:n}),e}tuplet(e,n){return this.factory.Tuplet({notes:e,options:n}),e}notes(e,n={}){return n=Object.assign({clef:this.defaults.clef,stem:this.defaults.stem},n),this.parse(e,n),this.builder.getElements().notes}voice(e,n={}){return n=Object.assign({time:this.defaults.time},n),this.factory.Voice(n).addTickables(e)}addCommitHook(e){this.builder.addCommitHook(e)}}return t.DEBUG=!1,t})();function u1(...t){cs.DEBUG&&J("VexFlow.NoteHead",t)}var cs=(()=>{class t extends pt{static get CATEGORY(){return"NoteHead"}constructor(e){var n;super(e),this.customGlyph=!1,this.ledger={"\uE4E3":"\uE4F4","\uE4E4":"\uE4F5"},this.index=e.index,this.x=e.x||0,this.y=e.y||0,e.noteType&&(this.noteType=e.noteType),this.displaced=e.displaced||!1,this.stemDirection=e.stemDirection||y.UP,this.line=e.line||0,this.glyphProps=pt.getGlyphProps(this.duration,this.noteType),$(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),(this.line>5||this.line<0)&&this.ledger[this.glyphProps.codeHead]&&(this.glyphProps.codeHead=this.ledger[this.glyphProps.codeHead]),this.text=this.glyphProps.codeHead,e.customGlyphCode&&(this.customGlyph=!0,this.text=e.customGlyphCode),this.setStyle((n=e.style)!==null&&n!==void 0?n:{}),this.slashed=e.slashed||!1,this.renderOptions=Object.assign({},this.renderOptions)}getWidth(){return this.width}isDisplaced(){return this.displaced===!0}getLine(){return this.line}setLine(e){return this.line=e,this}getAbsoluteX(){let e=this.preFormatted?super.getAbsoluteX():this.x,n=y.WIDTH/2;return e+(this.displaced?(this.width-n)*this.stemDirection:0)}setStave(e){let n=this.getLine();return this.stave=e,this.stave&&(this.setY(this.stave.getYForNote(n)),this.setContext(this.stave.getContext())),this}preFormat(){return this.preFormatted?this:(this.preFormatted=!0,this)}draw(){var e;let n=this.checkContext();this.setRendered(),n.openGroup("notehead",this.getAttribute("id")),u1("Drawing note head '",this.noteType,this.duration,"' at",this.x,this.y),this.x=this.getAbsoluteX(),this.renderText(n,0,0),(e=this.parent)===null||e===void 0||e.drawModifiers(this),n.closeGroup()}}return t.DEBUG=!1,t})();function d1(...t){Xu.DEBUG&&J("VexFlow.Flag",t)}var Xu=(()=>{class t extends L{static get CATEGORY(){return"Flag"}draw(){let e=this.checkContext();this.setRendered(),e.openGroup("flag",this.getAttribute("id")),d1("Drawing flag '",this.text,"' at",this.x,this.y),this.renderText(e,0,0),e.closeGroup()}}return t.DEBUG=!1,t})();var dn=class extends pt{static get CATEGORY(){return"StemmableNote"}constructor(i){super(i),this.flag=new Xu}getStem(){return this.stem}checkStem(){if(!this.stem)throw new S("NoStem","No stem attached to instance");return this.stem}setStem(i){return this.stem=i,this.addChild(i),this}buildStem(){let i=new y;return this.setStem(i),this}buildFlag(){var i,e,n;let{glyphProps:r}=this;if(this.hasFlag()){let o=this.getStemDirection()===y.DOWN?String.fromCodePoint(((e=(i=r.codeFlagUp)===null||i===void 0?void 0:i.codePointAt(0))!==null&&e!==void 0?e:-1)+1):(n=r.codeFlagUp)!==null&&n!==void 0?n:m.null;this.flag.setText(o),this.flag.fontInfo=this.fontInfo}}getBaseCustomNoteHeadGlyphProps(){return this.getStemDirection()===y.DOWN?this.customGlyphs[this.customGlyphs.length-1]:this.customGlyphs[0]}getStemLength(){return y.HEIGHT+this.getStemExtension()}getBeamCount(){let i=this.getGlyphProps();return i?i.beamCount:0}getStemMinimumLength(){let i=T.durationToFraction(this.duration),e=this.beam===void 0,n=i.value()<=1?0:20;switch(this.duration){case"8":case"16":n=e?35:25;break;case"32":n=e?45:35;break;case"64":n=e?50:40;break;case"128":n=e?55:45;break;default:break}return n}getStemDirection(){if(!this.stemDirection)throw new S("NoStem","No stem attached to this note.");return this.stemDirection}setStemDirection(i){if(i||(i=y.UP),i!==y.UP&&i!==y.DOWN)throw new S("BadArgument",`Invalid stem direction: ${i}`);return this.stemDirection=i,this.reset(),this.hasFlag()&&this.buildFlag(),this.beam=void 0,this.stem&&(this.stem.setDirection(i),this.stem.setExtension(this.getStemExtension())),this.preFormatted&&this.preFormat(),this}getStemX(){let i=this.getAbsoluteX()+this.xShift,e=this.getAbsoluteX()+this.xShift+this.getGlyphWidth();return this.stemDirection===y.DOWN?i:e}getCenterGlyphX(){return this.getAbsoluteX()+this.xShift+this.getGlyphWidth()/2}getStemExtension(){let i=this.getGlyphProps(),e=this.flag.getHeight(),n=this.getFontScale();return this.stemExtensionOverride!==void 0?this.stemExtensionOverride:this.beam?i.stemBeamExtension*n:e>y.HEIGHT*n?e-y.HEIGHT*n:0}setStemLength(i){return this.stemExtensionOverride=i-y.HEIGHT,this}getStemExtents(){if(!this.stem)throw new S("NoStem","No stem attached to this note.");return this.stem.getExtents()}getYForTopText(i){let e=this.checkStave();if(this.hasStem()){let n=this.getStemExtents();if(!n)throw new S("InvalidState","Stem does not have extents.");return Math.min(e.getYForTopText(i),n.topY-this.renderOptions.annotationSpacing*(i+1))}else return e.getYForTopText(i)}getYForBottomText(i){let e=this.checkStave();if(this.hasStem()){let n=this.getStemExtents();if(!n)throw new S("InvalidState","Stem does not have extents.");return Math.max(e.getYForTopText(i),n.baseY+this.renderOptions.annotationSpacing*i)}else return e.getYForBottomText(i)}hasFlag(){return this.glyphProps.codeFlagUp!==void 0&&!this.beam&&!this.isRest()}postFormat(){var i;return(i=this.beam)===null||i===void 0||i.postFormat(),this.postFormatted=!0,this}drawStem(i){var e;this.checkContext(),this.setRendered(),this.setStem(new y(i)),(e=this.stem)===null||e===void 0||e.setContext(this.getContext()).drawWithStyle()}};function h1(...t){Le.DEBUG&&J("VexFlow.StaveNote",t)}var f1=(t,i)=>i===(t.getStemDirection()===y.UP?t.keyProps.length-1:0);function Wa(t,i,e){let n=e;t.line+=n,t.maxLine+=n,t.minLine+=n,t.note.setKeyLine(0,t.note.getKeyLine(0)+n)}function m1(t,i,e){let n=t.line-is(i.minLine,e.maxLine);t.note.setKeyLine(0,t.note.getKeyLine(0)-n),t.line-=n,t.maxLine-=n,t.minLine-=n}var Le=(()=>{class t extends dn{static get CATEGORY(){return"StaveNote"}static get LEDGER_LINE_OFFSET(){return 3}static get minNoteheadPadding(){return O.get("NoteHead.minPadding")}static format(e,n){if(!e||e.length<2)return!1;let r=[];for(let f=0;f<e.length;f++){let d=e[f].sortedKeyProps,p=d[0].keyProps.line,g=d[d.length-1].keyProps.line,b=e[f].getStemDirection(),E=e[f].getStemLength()/10,v=e[f].getStemMinimumLength()/10,w;e[f].isRest()?(w=p+Math.ceil(e[f]._noteHeads[0].getTextMetrics().actualBoundingBoxAscent/T.STAVE_LINE_DISTANCE),g=p-Math.ceil(e[f]._noteHeads[0].getTextMetrics().actualBoundingBoxDescent/T.STAVE_LINE_DISTANCE)):(w=b===1?d[d.length-1].keyProps.line+E:d[d.length-1].keyProps.line,g=b===1?d[0].keyProps.line:d[0].keyProps.line-E),r.push({line:d[0].keyProps.line,maxLine:w,minLine:g,isrest:e[f].isRest(),stemDirection:b,stemMax:E,stemMin:v,voiceShift:e[f].getVoiceShiftWidth(),isDisplaced:e[f].isDisplaced(),note:e[f]})}let o=0,s,a,c,l=[!1,!1,!1];for(let f=0;f<r.length;f++)l[f]=r[f].note.renderOptions.draw!==!1;if(l[0]&&l[1]&&l[2])o=3,s=r[0],a=r[1],c=r[2];else if(l[0]&&l[1])o=2,s=r[0],c=r[1];else if(l[0]&&l[2])o=2,s=r[0],c=r[2];else if(l[1]&&l[2])o=2,s=r[1],c=r[2];else return!0;o===2&&s.stemDirection===-1&&c.stemDirection===1&&(s=r[1],c=r[0]);let u=Math.max(s.voiceShift,c.voiceShift),h=0;if(o===2){let f=s.note.hasStem()&&c.note.hasStem()&&s.stemDirection===c.stemDirection?0:.5;if(c.isrest&&s.isrest&&s.note.duration===c.note.duration)c.note.renderOptions.draw=!1;else if(s.minLine<=c.maxLine+f)if(s.isrest)Wa(s,c,1);else if(c.isrest)Wa(c,s,-1);else{let d=Math.abs(s.line-c.line);if(s.note.hasStem()&&c.note.hasStem()){let p=s.note.sortedKeyProps[0].keyProps.code,g=c.note.sortedKeyProps[c.note.sortedKeyProps.length-1].keyProps.code;!T.UNISON||p!==g||s.note.getModifiers().filter(b=>b.getCategory()==="Dot"&&b.getIndex()===0).length!==c.note.getModifiers().filter(b=>b.getCategory()==="Dot"&&b.getIndex()===0).length||d<1&&d>0||JSON.stringify(s.note.getStyle())!==JSON.stringify(c.note.getStyle())?(h=u+2,s.stemDirection===c.stemDirection?s.note.setXShift(h):c.note.setXShift(h)):s.note.voice!==c.note.voice&&s.stemDirection===c.stemDirection&&(s.line!==c.line?(h=u+2,s.note.setXShift(h)):c.stemDirection===1&&(c.stemDirection=-1,c.note.setStemDirection(-1)))}else d<1?(h=u+2,s.note.duration<c.note.duration?s.note.setXShift(h):c.note.setXShift(h)):s.note.hasStem()?(s.stemDirection=-s.note.getStemDirection(),s.note.setStemDirection(s.stemDirection)):c.note.hasStem()&&(c.stemDirection=-c.note.getStemDirection(),c.note.setStemDirection(c.stemDirection))}return n.rightShift+=h,!0}if(!a)throw new S("InvalidState","noteM not defined.");if(a.isrest&&!s.isrest&&!c.isrest&&(s.minLine<=a.maxLine||a.minLine<=c.maxLine)){let f=a.maxLine-a.minLine,d=s.minLine-c.maxLine;return f<d?m1(a,s,c):(h=u+2,a.note.setXShift(h),c.note.hasBeam()===!1&&(c.stemDirection=-1,c.note.setStemDirection(-1)),s.minLine<=c.maxLine&&s.note.hasBeam()===!1&&(s.stemDirection=1,s.note.setStemDirection(1))),n.rightShift+=h,!0}return s.isrest&&a.isrest&&c.isrest?(s.note.renderOptions.draw=!1,c.note.renderOptions.draw=!1,n.rightShift+=h,!0):(a.isrest&&s.isrest&&a.minLine<=c.maxLine&&(a.note.renderOptions.draw=!1),a.isrest&&c.isrest&&s.minLine<=a.maxLine&&(a.note.renderOptions.draw=!1),s.isrest&&s.minLine<=a.maxLine&&Wa(s,a,1),c.isrest&&a.minLine<=c.maxLine&&Wa(c,a,-1),(s.minLine<=a.maxLine+.5||a.minLine<=c.maxLine)&&(h=u+2,a.note.setXShift(h),c.note.hasBeam()===!1&&(c.stemDirection=-1,c.note.setStemDirection(-1)),s.minLine<=c.maxLine&&s.note.hasBeam()===!1&&(s.stemDirection=1,s.note.setStemDirection(1))),n.rightShift+=h,!0)}static postFormat(e){return e?(e.forEach(n=>n.postFormat()),!0):!1}constructor(e){var n,r,o;super(e),this.minLine=0,this.maxLine=0,this.sortedKeyProps=[],this.ledgerLineStyle={},this.clef=(n=e.clef)!==null&&n!==void 0?n:"treble",this.octaveShift=(r=e.octaveShift)!==null&&r!==void 0?r:0,this.glyphProps=pt.getGlyphProps(this.duration,this.noteType),$(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),this.displaced=!1,this.dotShiftY=0,this.useDefaultHeadX=!1,this._noteHeads=[],this.modifiers=[],this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{strokePx:e.strokePx||t.LEDGER_LINE_OFFSET}),this.calculateKeyProps(),this.buildStem(),e.autoStem?this.autoStem():this.setStemDirection((o=e.stemDirection)!==null&&o!==void 0?o:y.UP),this.reset(),this.buildFlag()}reset(){super.reset();let e=this._noteHeads.map(r=>r.getStyle());this.buildNoteHeads(),this._noteHeads.forEach((r,o)=>{let s=e[o];s&&r.setStyle(s)});let n=this.stave;return n&&this.setStave(n),this.calcNoteDisplacements(),this}setBeam(e){return this.beam=e,this.calcNoteDisplacements(),this.stem&&this.stem.setExtension(this.getStemExtension()),this}buildStem(){return this.setStem(new y({hide:this.isRest()})),this}buildNoteHeads(){this._noteHeads=[];let e=this.getStemDirection(),n=this.getKeys(),r,o,s=!1,a,c,l;e===y.UP?(a=0,c=n.length,l=1):(a=n.length-1,c=-1,l=-1);for(let u=a;u!==c;u+=l){let h=this.sortedKeyProps[u].keyProps,f=h.line;r===void 0?r=f:(o=Math.abs(r-f),o===0||o===.5?s=!s:(s=!1,this.useDefaultHeadX=!0)),r=f;let d=new cs({duration:this.duration,noteType:this.noteType,displaced:s,stemDirection:e,customGlyphCode:h.code,line:h.line});d.fontInfo=this.fontInfo,this.addChild(d),this._noteHeads[this.sortedKeyProps[u].index]=d}return this._noteHeads}autoStem(){this.setStemDirection(this.calculateOptimalStemDirection())}calculateOptimalStemDirection(){return this.minLine=this.sortedKeyProps[0].keyProps.line,this.maxLine=this.sortedKeyProps[this.keyProps.length-1].keyProps.line,(this.minLine+this.maxLine)/2<3?y.UP:y.DOWN}calculateKeyProps(){var e;let n;for(let r=0;r<this.keys.length;++r){let o=this.keys[r],s={octaveShift:(e=this.octaveShift)!==null&&e!==void 0?e:0,duration:this.duration},a=T.keyProperties(o,this.clef,this.noteType,s);if(!a)throw new S("BadArguments",`Invalid key for note properties: ${o}`);a.key==="R"&&(this.duration==="1"||this.duration==="w"?a.line=4:a.line=3);let c=a.line;n===void 0?n=c:Math.abs(n-c)<1&&(this.displaced=!0,a.displaced=!0,this.keyProps.length>0&&(this.keyProps[r-1].displaced=!0)),n=c,this.keyProps.push(a)}this.keyProps.forEach((r,o)=>{this.sortedKeyProps.push({keyProps:r,index:o})}),this.sortedKeyProps.sort((r,o)=>r.keyProps.line-o.keyProps.line)}getBoundingBox(){let e=new Ce(this.getAbsoluteX(),this.ys[0],0,0);this._noteHeads.forEach(o=>{e.mergeWith(o.getBoundingBox())});let{yTop:n,yBottom:r}=this.getNoteHeadBounds();if(!this.isRest()&&this.hasStem()){let o=this.stem.getHeight(),s=this.getStemDirection()===y.DOWN?n-o-this.flag.getTextMetrics().actualBoundingBoxDescent:r-o+this.flag.getTextMetrics().actualBoundingBoxAscent;e.mergeWith(new Ce(this.getAbsoluteX(),s,0,0))}if(this.hasFlag()){let o=this.flag.getBoundingBox();e.mergeWith(o)}for(let o=0;o<this.modifiers.length;o++)e.mergeWith(this.modifiers[o].getBoundingBox());return e}getLineNumber(e){if(!this.keyProps.length)throw new S("NoKeyProps","Can't get bottom note line, because note is not initialized properly.");let n=this.keyProps[0].line;for(let r=0;r<this.keyProps.length;r++){let o=this.keyProps[r].line;e?o>n&&(n=o):o<n&&(n=o)}return n}isRest(){let e=this.glyphProps.codeHead;return e>="\uE4E0"&&e<="\uE4FF"}isChord(){return!this.isRest()&&this.keys.length>1}hasStem(){return this.glyphProps.stem}hasFlag(){return super.hasFlag()&&!this.isRest()}getStemX(){return this.noteType==="r"?this.getCenterGlyphX():super.getStemX()+(this.stemDirection?y.WIDTH/(2*-this.stemDirection):0)}getYForTopText(e){let n=this.getStemExtents();return Math.min(this.checkStave().getYForTopText(e),n.topY-this.renderOptions.annotationSpacing*(e+1))}getYForBottomText(e){let n=this.getStemExtents();return Math.max(this.checkStave().getYForTopText(e),n.baseY+this.renderOptions.annotationSpacing*e)}setStave(e){super.setStave(e);let n=this._noteHeads.map(r=>(r.setStave(e),r.getY()));if(this.setYs(n),this.stem){let{yTop:r,yBottom:o}=this.getNoteHeadBounds();this.stem.setYBounds(r,o)}return this}isDisplaced(){return this.displaced}setNoteDisplaced(e){return this.displaced=e,this}getTieRightX(){let e=this.getAbsoluteX();return e+=this.getGlyphWidth()+this.xShift+this.rightDisplacedHeadPx,this.modifierContext&&(e+=this.modifierContext.getRightShift()),e}getTieLeftX(){let e=this.getAbsoluteX();return e+=this.xShift-this.leftDisplacedHeadPx,e}getLineForRest(){let e=this.keyProps[0].line;if(this.keyProps.length>1){let n=this.keyProps[this.keyProps.length-1].line,r=Math.max(e,n),o=Math.min(e,n);e=is(r,o)}return e}getModifierStartXY(e,n,r={}){if(!this.preFormatted)throw new S("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(this.ys.length===0)throw new S("NoYValues","No Y-Values calculated for this note.");let{ABOVE:o,BELOW:s,LEFT:a,RIGHT:c}=B.Position,l=0;e===a?l=-1*2:e===c?(l=this.getGlyphWidth()+this.xShift+2,this.stemDirection===y.UP&&this.hasFlag()&&(r.forceFlagRight||f1(this,n))&&(l+=this.flag.getWidth())):(e===s||e===o)&&(l=this.getGlyphWidth()/2);let u=0;switch(this._noteHeads[n].getText()){case m.restDoubleWhole:case m.restWhole:u+=.5;break;case m.restHalf:case m.restQuarter:case m.rest8th:case m.rest16th:u-=.5;break;case m.rest32nd:case m.rest64th:u-=1.5;break;case m.rest128th:u-=2.5;break}return{x:this.getAbsoluteX()+l,y:this.ys[n]+u*this.checkStave().getSpacingBetweenLines()}}setStyle(e){return super.setGroupStyle(e)}setStemStyle(e){let n=this.getStem();return n&&n.setStyle(e),this}getStemStyle(){var e;return(e=this.stem)===null||e===void 0?void 0:e.getStyle()}setLedgerLineStyle(e){this.ledgerLineStyle=e}getLedgerLineStyle(){return this.ledgerLineStyle}setFlagStyle(e){this.flag.setStyle(e)}getFlagStyle(){return this.flag.getStyle()}getGlyphWidth(){return this.noteHeads[0].getWidth()}setKeyStyle(e,n){return this._noteHeads[e].setStyle(n),this}setKeyLine(e,n){return this.keyProps[e].line=n,this.reset(),this}getKeyLine(e){return this.keyProps[e].line}getVoiceShiftWidth(){return this.getGlyphWidth()*(this.displaced?2:1)}calcNoteDisplacements(){this.setLeftDisplacedHeadPx(this.displaced&&this.stemDirection===y.DOWN?this.getGlyphWidth():0),this.setRightDisplacedHeadPx(!this.hasFlag()&&this.displaced&&this.stemDirection===y.UP?this.getGlyphWidth():0)}preFormat(){if(this.preFormatted)return;let e=0;this.modifierContext&&(this.modifierContext.preFormat(),this.modifierContext.getWidth()===0&&(e=t.minNoteheadPadding));let n=this.getGlyphWidth()+this.leftDisplacedHeadPx+this.rightDisplacedHeadPx+e;this.shouldDrawFlag()&&this.stemDirection===y.UP&&(n+=this.getGlyphWidth()),this.setWidth(n),this.preFormatted=!0}getNoteHeadBounds(){let e=1/0,n=-1/0,r,o,s=this.checkStave().getNumLines(),a=1,c,l,u=s,h=a;return this._noteHeads.forEach(f=>{let d=f.getLine(),p=f.getY();e=Math.min(p,e),n=Math.max(p,n),o===void 0&&f.isDisplaced()&&(o=f.getAbsoluteX()),r===void 0&&!f.isDisplaced()&&(r=f.getAbsoluteX()),s=Math.max(d,s),a=Math.min(d,a),f.isDisplaced()?(c=c===void 0?d:Math.max(d,c),l=l===void 0?d:Math.min(d,l)):(u=Math.max(d,u),h=Math.min(d,h))},this),{yTop:e,yBottom:n,displacedX:o,nonDisplacedX:r,highestLine:s,lowestLine:a,highestDisplacedLine:c,lowestDisplacedLine:l,highestNonDisplacedLine:u,lowestNonDisplacedLine:h}}getNoteHeadBeginX(){return this.getAbsoluteX()+this.xShift}getNoteHeadEndX(){return this.getNoteHeadBeginX()+this.getGlyphWidth()}get noteHeads(){return this._noteHeads.slice()}drawLedgerLines(){let e=this.checkStave(),{renderOptions:{strokePx:n}}=this,r=this.checkContext(),o=this.getGlyphWidth()+n*2,s=2*(this.getGlyphWidth()+n)-y.WIDTH/2;if(this.isRest())return;if(!r)throw new S("NoCanvasContext","Can't draw without a canvas context.");let{highestLine:a,lowestLine:c,highestDisplacedLine:l,highestNonDisplacedLine:u,lowestDisplacedLine:h,lowestNonDisplacedLine:f,displacedX:d,nonDisplacedX:p}=this.getNoteHeadBounds();if(a<6&&c>0)return;let g=Math.min(d??0,p??0),b=(v,w,C)=>{let D;C&&w?D=g-n:w?D=(p??0)-n:D=(d??0)-n;let x=w&&C?s:o;r.beginPath(),r.moveTo(D,v),r.lineTo(D+x,v),r.stroke()},E=Object.assign(Object.assign({},e.getDefaultLedgerLineStyle()),this.getLedgerLineStyle());r.save(),this.applyStyle(r,E);for(let v=6;v<=a;++v){let w=p!==void 0&&v<=u,C=l!==void 0&&v<=l;b(e.getYForNote(v),w,C)}for(let v=0;v>=c;--v){let w=p!==void 0&&v>=f,C=h!==void 0&&v>=h;b(e.getYForNote(v),w,C)}r.restore()}drawModifiers(e){let n=this.checkContext();for(let r=0;r<this.modifiers.length;r++){let o=this.modifiers[r],s=o.checkIndex();this._noteHeads[s]===e&&(o.setContext(n),o.drawWithStyle())}}shouldDrawFlag(){let e=this.stem!==void 0,n=this.glyphProps.codeFlagUp!==void 0,r=this.beam===void 0;return e&&n&&r&&!this.isRest()}drawFlag(){let e=this.checkContext();if(!e)throw new S("NoCanvasContext","Can't draw without a canvas context.");if(this.shouldDrawFlag()){let{yTop:n,yBottom:r}=this.getNoteHeadBounds(),o=this.stem.getHeight(),s=this.getStemX()-T.STEM_WIDTH/2,a=this.getStemDirection()===y.DOWN?n-o-this.flag.getTextMetrics().actualBoundingBoxDescent:r-o+this.flag.getTextMetrics().actualBoundingBoxAscent;this.flag.setContext(e).setX(s).setY(a).drawWithStyle()}}drawNoteHeads(){let e=this.checkContext();this._noteHeads.forEach(n=>{n.setContext(e).drawWithStyle()})}drawStem(e){let n=this.checkContext();e&&this.setStem(new y(e)),this.shouldDrawFlag()&&this.stem&&this.stem.adjustHeightForFlag(),this.stem&&this.stem.setContext(n).drawWithStyle()}getStemExtension(){let e=super.getStemExtension();if(!this.glyphProps.stem)return e;let n=this.getStemDirection();if(n!==this.calculateOptimalStemDirection())return e;let r,o=3;n===y.UP?r=o-this.maxLine:r=this.minLine-o;let s=r-3.5;if(s<=0)return e;let a=this.getStave(),c=10;return a!==void 0&&(c=a.getSpacingBetweenLines()),e+s*c}draw(){if(this.renderOptions.draw===!1)return;if(this.ys.length===0)throw new S("NoYValues","Can't draw note without Y values.");let e=this.checkContext(),n=this.getNoteHeadBeginX(),r=this.hasStem()&&!this.beam;if(this._noteHeads.forEach(s=>s.setX(n)),this.stem){let s=this.getStemX();this.stem.setNoteHeadXBounds(s,s)}h1("Rendering ",this.isChord()?"chord :":"note :",this.keys),e.openGroup("stavenote",this.getAttribute("id")),this.drawLedgerLines(),r&&this.drawStem(),this.drawNoteHeads(),this.drawFlag();let o=this.getBoundingBox();e.pointerRect(o.getX(),o.getY(),o.getW(),o.getH()),e.closeGroup(),this.setRendered()}}return t.DEBUG=!1,t})();var xi=class extends L{static get CATEGORY(){return"StaveTie"}constructor(i,e=""){super(),this.setNotes(i),this.text=e,this.renderOptions={cp1:8,cp2:12,shortTieCutoff:10,cp1Short:2,cp2Short:8,textShiftX:0,firstXShift:0,lastXShift:0,yShift:7,tieSpacing:0}}getDirection(){return this.direction!==void 0&&this.direction!==null?this.direction:this.notes.lastNote?this.notes.lastNote.getStemDirection():this.notes.firstNote?this.notes.firstNote.getStemDirection():0}setDirection(i){return this.direction=i,this}setNotes(i){if(!i.firstNote&&!i.lastNote)throw new S("BadArguments","Tie needs to have either firstNote or lastNote set.");if(i.firstIndexes||(i.firstIndexes=[0]),i.lastIndexes||(i.lastIndexes=[0]),i.firstIndexes.length!==i.lastIndexes.length)throw new S("BadArguments","Tied notes must have same number of indexes.");return this.notes=i,this}isPartial(){return!this.notes.firstNote||!this.notes.lastNote}renderTie(i){if(i.firstYs.length===0||i.lastYs.length===0)throw new S("BadArguments","No Y-values to render");let e=this.checkContext(),n=this.renderOptions.cp1,r=this.renderOptions.cp2;Math.abs(i.lastX-i.firstX)<this.renderOptions.shortTieCutoff&&(n=this.renderOptions.cp1Short,r=this.renderOptions.cp2Short);let o=this.renderOptions.firstXShift,s=this.renderOptions.lastXShift,a=this.renderOptions.yShift*i.direction,c=this.notes.firstIndexes,l=this.notes.lastIndexes;e.openGroup("stavetie",this.getAttribute("id"));for(let u=0;u<c.length;++u){let h=(i.lastX+s+(i.firstX+o))/2,f=i.firstYs[c[u]]+a,d=i.lastYs[l[u]]+a;if(isNaN(f)||isNaN(d))throw new S("BadArguments","Bad indexes for tie rendering.");let p=(f+d)/2+n*i.direction,g=(f+d)/2+r*i.direction;e.beginPath(),e.moveTo(i.firstX+o,f),e.quadraticCurveTo(h,p,i.lastX+s,d),e.quadraticCurveTo(h,g,i.firstX+o,f),e.closePath(),e.fill()}e.closeGroup()}renderTieText(i,e){var n,r,o;let s=this.checkContext(),a=(i+e)/2;a-=s.measureText(this.text).width/2;let c=(r=(n=this.notes.firstNote)===null||n===void 0?void 0:n.checkStave())!==null&&r!==void 0?r:(o=this.notes.lastNote)===null||o===void 0?void 0:o.checkStave();c&&(s.setFont(this.fontInfo),s.fillText(this.text,a+this.renderOptions.textShiftX,c.getYForTopText()-1))}getNotes(){return this.notes}getFirstX(){return this.notes.firstNote?this.notes.firstNote.getTieRightX()+this.renderOptions.tieSpacing:this.notes.lastNote?this.notes.lastNote.checkStave().getTieStartX():0}getLastX(){return this.notes.lastNote?this.notes.lastNote.getTieLeftX()+this.renderOptions.tieSpacing:this.notes.firstNote?this.notes.firstNote.checkStave().getTieEndX():0}getFirstYs(){return this.notes.firstNote?this.notes.firstNote.getYs():this.notes.lastNote?this.notes.lastNote.getYs():[0]}getLastYs(){return this.notes.lastNote?this.notes.lastNote.getYs():this.notes.firstNote?this.notes.firstNote.getYs():[0]}synchronizeIndexes(){if(!(this.notes.firstNote&&this.notes.lastNote)){if(!this.notes.firstNote&&!this.notes.lastNote)return;this.notes.firstNote?this.notes.lastIndexes=this.notes.firstIndexes:this.notes.firstIndexes=this.notes.lastIndexes}}draw(){this.checkContext(),this.setRendered(),this.synchronizeIndexes();let i=this.getFirstX(),e=this.getLastX();return this.renderTie({firstX:i,lastX:e,firstYs:this.getFirstYs(),lastYs:this.getLastYs(),direction:this.getDirection()}),this.renderTieText(i,e),!0}};var hn=class t extends xi{static get CATEGORY(){return"TabTie"}static createHammeron(i){return new t(i,"H")}static createPulloff(i){return new t(i,"P")}constructor(i,e){super(i,e),this.renderOptions.cp1=9,this.renderOptions.cp2=11,this.renderOptions.yShift=3,this.direction=-1}};var fi=function(t){return t[t.STRICT=1]="STRICT",t[t.SOFT=2]="SOFT",t[t.FULL=3]="FULL",t}(fi||{}),ne=class extends L{static get CATEGORY(){return"Voice"}static get Mode(){return fi}constructor(i){super(),this.resolutionMultiplier=1,this.mode=fi.STRICT,this.preFormatted=!1,this.ticksUsed=new rt(0,1),this.largestTickWidth=0,this.tickables=[],this.options={softmaxFactor:T.SOFTMAX_FACTOR};let e;if(typeof i=="string"){let n=i.match(/(\d+)\/(\d+)/);n&&(e={numBeats:parseInt(n[1]),beatValue:parseInt(n[2])})}else e=i;this.time=Object.assign({numBeats:4,beatValue:4,resolution:T.RESOLUTION},e),this.totalTicks=new rt(this.time.numBeats*(this.time.resolution/this.time.beatValue),1),this.smallestTickCount=this.totalTicks.clone()}getTotalTicks(){return this.totalTicks}getTicksUsed(){return this.ticksUsed}getLargestTickWidth(){return this.largestTickWidth}getSmallestTickCount(){return this.smallestTickCount}getTickables(){return this.tickables}getMode(){return this.mode}setMode(i){return this.mode=i,this}getResolutionMultiplier(){return this.resolutionMultiplier}getActualResolution(){return this.resolutionMultiplier*this.time.resolution}setStave(i){return this.stave=i,this}getStave(){return this.stave}getBoundingBox(){let i=this.tickables[0].getBoundingBox();for(let e=1;e<this.tickables.length;++e){let n=this.tickables[e];!n.getStave()&&this.stave&&n.setStave(this.stave);let r=n.getBoundingBox();i.mergeWith(r)}return i}setStrict(i){return this.mode=i?fi.STRICT:fi.SOFT,this}isComplete(){return this.mode===fi.STRICT||this.mode===fi.FULL?this.ticksUsed.equals(this.totalTicks):!0}setSoftmaxFactor(i){return this.options.softmaxFactor=i,this.expTicksUsed=0,this}reCalculateExpTicksUsed(){let i=this.ticksUsed.value(),e=n=>Math.pow(this.options.softmaxFactor,n.getTicks().value()/i);return this.expTicksUsed=on(this.tickables.map(e)),this.expTicksUsed}softmax(i){this.expTicksUsed||(this.expTicksUsed=this.reCalculateExpTicksUsed());let e=this.ticksUsed.value();return(o=>Math.pow(this.options.softmaxFactor,o/e))(i)/this.expTicksUsed}addTickable(i){if(!i.shouldIgnoreTicks()){let e=i.getTicks();if(this.ticksUsed.add(e),this.expTicksUsed=0,(this.mode===fi.STRICT||this.mode===fi.FULL)&&this.ticksUsed.greaterThan(this.totalTicks))throw this.ticksUsed.subtract(e),new S("BadArgument","Too many ticks.");e.lessThan(this.smallestTickCount)&&(this.smallestTickCount=e.clone()),this.resolutionMultiplier=this.ticksUsed.denominator,this.totalTicks.add(0,this.ticksUsed.denominator)}return this.tickables.push(i),i.setVoice(this),this}addTickables(i){for(let e=0;e<i.length;++e)this.addTickable(i[e]);return this}preFormat(){if(this.preFormatted)return this;let i=this.checkStave();return this.tickables.forEach(e=>{e.getStave()||e.setStave(i)}),this.preFormatted=!0,this}checkStave(){return $(this.stave,"NoStave","No stave attached to instance.")}draw(i=this.checkContext(),e){e=e??this.stave,this.setRendered();for(let n=0;n<this.tickables.length;++n){let r=this.tickables[n];e&&r.setStave(e),$(r.getStave(),"MissingStave","The voice cannot draw tickables without staves."),r.setContext(i),r.drawWithStyle()}}};function p1(...t){qn.DEBUG&&J("VexFlow.GraceNoteGroup",t)}var qn=(()=>{class t extends B{static get CATEGORY(){return"GraceNoteGroup"}static format(e,n){if(!e||e.length===0)return!1;let s=[],a=null,c=0;for(let d=0;d<e.length;++d){let p=e[d],g=p.getNote(),b=ee(g),E=b?4:0;if(b&&g!==a){for(let v=0;v<g.keys.length;++v)c=Math.max(g.getLeftDisplacedHeadPx(),c);a=g}s.push({shift:c,gracenoteGroup:p,spacing:E})}let l=s[0].shift,u,h=!1,f=!1;for(let d=0;d<s.length;++d){let p=s[d].gracenoteGroup;p.position===B.Position.RIGHT?h=!0:f=!0,p.preFormat(),u=p.getWidth()+s[d].spacing,l=Math.max(u,l)}for(let d=0;d<s.length;++d){let p=s[d].gracenoteGroup;u=p.getWidth()+s[d].spacing,p.setSpacingFromNextModifier(l-Math.min(u,l)+Le.minNoteheadPadding)}return h&&(n.rightShift+=l),f&&(n.leftShift+=l),!0}constructor(e,n){return super(),this.preFormatted=!1,this.position=B.Position.LEFT,this.graceNotes=e,this.width=0,this.showSlur=n,this.slur=void 0,this.voice=new ne({numBeats:4,beatValue:4,resolution:T.RESOLUTION}).setStrict(!1),this.renderOptions={slurYShift:0},this.beams=[],this.voice.addTickables(this.graceNotes),this}preFormat(){this.preFormatted||(this.formatter||(this.formatter=new we),this.formatter.joinVoices([this.voice]).format([this.voice],0,{}),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}beamNotes(e){if(e=e||this.graceNotes,e.length>1){let n=new ci(e);n.renderOptions.beamWidth=3,n.renderOptions.partialBeamLength=4,this.beams.push(n)}return this}setWidth(e){return this.width=e,this}getWidth(){return this.width+Le.minNoteheadPadding}getGraceNotes(){return this.graceNotes}draw(){let e=this.checkContext(),n=this.checkAttachedNote();if(this.setRendered(),p1("Drawing grace note group for:",n),this.alignSubNotesWithNote(this.getGraceNotes(),n,this.position),this.graceNotes.forEach(r=>r.setContext(e).drawWithStyle()),this.beams.forEach(r=>r.setContext(e).drawWithStyle()),this.showSlur){let r=ee(n),o=r?xi:hn;this.slur=new o({lastNote:this.graceNotes[0],firstNote:n,firstIndexes:[0],lastIndexes:[0]}),this.slur.renderOptions.cp2=12,this.slur.renderOptions.yShift=(r?7:5)+this.renderOptions.slurYShift,this.slur.setContext(e).drawWithStyle()}}}return t.DEBUG=!1,t})();var fn=class extends B{static get CATEGORY(){return"NoteSubGroup"}static format(i,e){if(!i||i.length===0)return!1;let n=0;for(let r=0;r<i.length;++r){let o=i[r];o.preFormat(),n+=o.getWidth()}return e.leftShift+=n,!0}constructor(i){super(),this.preFormatted=!1,this.position=B.Position.LEFT,this.subNotes=i,this.subNotes.forEach(e=>{e.setIgnoreTicks(!1)}),this.width=0,this.formatter=new we,this.voice=new ne({numBeats:4,beatValue:4,resolution:T.RESOLUTION}).setStrict(!1),this.voice.addTickables(this.subNotes)}preFormat(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}setWidth(i){return this.width=i,this}getWidth(){return this.width}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered(),this.alignSubNotesWithNote(this.subNotes,e),this.subNotes.forEach(n=>n.setContext(i).drawWithStyle())}};function g1(...t){Zn.DEBUG&&J("VexFlow.Ornament",t)}var Zn=(()=>{class t extends B{static get CATEGORY(){return"Ornament"}static get minPadding(){return O.get("NoteHead.minPadding")}static format(e,n){var r,o;if(!e||e.length===0)return!1;let s=0,a=n.rightShift,c=n.leftShift;for(let l=0;l<e.length;++l){let u=e[l],h=2;if(u.position===ut.RIGHT)u.xShift+=a+2,a+=u.width+t.minPadding;else if(u.position===ut.LEFT)u.xShift-=c+u.width+2,c+=u.width+t.minPadding;else if(u.position===ut.ABOVE){s=Math.max(u.getWidth(),s);let f=u.getNote(),d=f.getLineNumber(!0)+n.topTextLine,p=f.getStem();p&&f.getStemDirection()===y.UP&&(d+=Math.abs(p.getHeight())/T.STAVE_LINE_DISTANCE);let g=(o=(r=f.getStave())===null||r===void 0?void 0:r.getNumLines())!==null&&o!==void 0?o:0;d<g&&(n.topTextLine+=g-d),u.setTextLine(n.topTextLine),n.topTextLine+=h}else s=Math.max(u.getWidth(),s),u.setTextLine(n.textLine),n.textLine+=h}return n.leftShift=c+s/2,n.rightShift=a+s/2,!0}static get ornamentNoteTransition(){return["flip","jazzTurn","smear"]}static get ornamentAttack(){return["scoop"]}static get ornamentAlignWithNoteHead(){return["doit","fall","fallLong","doitLong","scoop"]}static get ornamentRelease(){return["doit","fall","fallLong","doitLong","jazzTurn","smear","flip"]}static get ornamentLeft(){return["scoop"]}static get ornamentRight(){return["doit","fall","fallLong","doitLong"]}static get ornamentYShift(){return["fallLong"]}static get ornamentArticulation(){return["bend","plungerClosed","plungerOpen"]}constructor(e){super(),this.position=ut.ABOVE,t.ornamentRight.indexOf(e)>=0&&(this.position=ut.RIGHT),t.ornamentLeft.indexOf(e)>=0&&(this.position=ut.LEFT),this.type=e,this.delayed=!1,this.renderOptions={accidentalLowerPadding:3,accidentalUpperPadding:3},this.adjustForStemDirection=!1,this.ornamentAlignWithNoteHead=t.ornamentAlignWithNoteHead.indexOf(this.type)>=0,t.ornamentNoteTransition.indexOf(this.type)>=0&&(this.delayed=!0),this.text=T.ornamentCodes(this.type)}setNote(e){return super.setNote(e),t.ornamentArticulation.indexOf(this.type)>=0&&(e.getLineNumber()>=3?this.position=B.Position.ABOVE:this.position=B.Position.BELOW),this}setDelayed(e){return this.delayed=e,this}setUpperAccidental(e){return this.accidentalUpper=new L,this.accidentalUpper.setText(T.accidentalCodes(e)),this}setLowerAccidental(e){return this.accidentalLower=new L,this.accidentalLower.setText(T.accidentalCodes(e)),this}draw(){let e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();let r=n.checkStave();e.openGroup("ornament",this.getAttribute("id"));let o=n.getModifierStartXY(this.position,this.index),s=o.x,a=r.getSpacingBetweenLines(),c=Lu(n,this.position),l=this.ornamentAlignWithNoteHead?o.y:0;if(this.position===ut.ABOVE&&(l=Bu(n,this.textLine)-(this.textLine+c)*a),this.position===ut.BELOW&&(l=Fu(n,this.textLine)+(this.textLine+c+1.5)*a),this.delayed){let u=0,h=n.getTickContext().getX();if(this.delayXShift!==void 0)u=this.delayXShift;else{let f=n.getVoice().getTickables(),d=f.indexOf(n),p=d+1<f.length?f[d+1].checkTickContext():void 0;p?u+=(p.getX()-h)*.5:u+=(r.getX()+r.getWidth()-s)*.5,this.delayXShift=u}s+=u}g1("Rendering ornament: ",this.text.charCodeAt(0),s,l),this.accidentalLower&&(this.accidentalLower.renderText(e,s+this.xShift-this.accidentalLower.getWidth()*.5,l+this.yShift-this.accidentalLower.getTextMetrics().actualBoundingBoxDescent),l-=this.accidentalLower.getHeight()+this.renderOptions.accidentalLowerPadding),t.ornamentYShift.indexOf(this.type)>=0&&(this.yShift+=this.getHeight()),this.x=s-(this.position===ut.ABOVE||this.position===ut.BELOW?this.width*.5:0),this.y=l,this.renderText(e,0,0),this.accidentalUpper&&(l-=this.getHeight()+this.renderOptions.accidentalUpperPadding,this.accidentalUpper.renderText(e,s+this.xShift-this.accidentalUpper.getWidth()*.5,l+this.yShift-this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent)),e.closeGroup()}}return t.DEBUG=!1,t})();var Br=class t extends B{static get CATEGORY(){return"Parenthesis"}static buildAndAttach(i){for(let e of i)for(let n=0;n<e.keys.length;n++)e.addModifier(new t(ut.LEFT),n),e.addModifier(new t(ut.RIGHT),n)}static format(i,e){if(!i||i.length===0)return!1;let n=0,r=0;for(let o=0;o<i.length;++o){let s=i[o],a=s.getNote(),c=s.getPosition(),l=s.checkIndex(),u=0;c===ut.RIGHT&&(u=a.getRightParenthesisPx(l),r=r>u+s.width?r:u+s.width),c===ut.LEFT&&(u=a.getLeftParenthesisPx(l)+s.width,n=n>u+s.width?n:u+s.width),s.setXShift(u)}return e.leftShift+=n,e.rightShift+=r,!0}constructor(i){super(),this.position=i??B.Position.LEFT,this.position===B.Position.RIGHT?this.text="\uE0F6":this.position===B.Position.LEFT&&(this.text="\uE0F5")}setNote(i){return this.note=i,this.setFont(i.getFont()),this}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let n=e.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});this.renderText(i,n.x,n.y)}};var b1={path:{x:!0,y:!0,width:!0,height:!0,"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0},rect:{"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0},text:{width:!0,height:!0}},v1="http://www.w3.org/2000/svg",mm=2*Math.PI,Jn=class t extends cn{constructor(i){super(),this.width=0,this.height=0,this.precision=1,this.backgroundFillStyle="white",this.fontCSSString="",this.element=i,this.precision=Math.pow(10,T.RENDER_PRECISION_PLACES);let e=this.create("svg");e.setAttribute("pointer-events","none"),this.element.appendChild(e),this.svg=e,this.parent=this.svg,this.groups=[this.svg],this.path="",this.pen={x:NaN,y:NaN};let n={"font-family":O.get("fontFamily"),"font-size":"10pt","font-weight":sn.NORMAL,"font-style":Ii.NORMAL};this.state=Object.assign({scaleX:1,scaleY:1},n),this.attributes=Object.assign({"stroke-width":1,"stroke-dasharray":"none",fill:"black",stroke:"black",shadowBlur:0,shadowColor:"black"},n),this.groupAttributes=[],this.applyAttributes(e,this.attributes),this.groupAttributes.push(Object.assign({},this.attributes)),this.stateStack=[]}round(i){return Math.round(i*this.precision)/this.precision}create(i){return document.createElementNS(v1,i)}openGroup(i,e){let n=this.create("g");return this.groups.push(n),this.parent.appendChild(n),this.parent=n,i&&n.setAttribute("class",ns(i)),e&&n.setAttribute("id",ns(e)),this.applyAttributes(n,this.attributes),this.groupAttributes.push(Object.assign(Object.assign({},this.groupAttributes[this.groupAttributes.length-1]),this.attributes)),n}closeGroup(){this.groups.pop(),this.groupAttributes.pop(),this.parent=this.groups[this.groups.length-1]}openRotation(i,e,n){this.openGroup().setAttribute("transform",`translate(${e},${n}) rotate(${i}) translate(-${e},-${n})`)}closeRotation(){this.closeGroup()}add(i){this.parent.appendChild(i)}setFillStyle(i){return this.attributes.fill=i,this}setBackgroundFillStyle(i){return this.backgroundFillStyle=i,this}setStrokeStyle(i){return this.attributes.stroke=i,this}setShadowColor(i){return this.attributes.shadowColor=i,this}setShadowBlur(i){return this.attributes.shadowBlur=i,this}setLineWidth(i){return this.attributes["stroke-width"]=i,this}setLineDash(i){if(Object.prototype.toString.call(i)==="[object Array]")return this.attributes["stroke-dasharray"]=i.join(","),this;throw new S("ArgumentError","lineDash must be an array of integers.")}setLineCap(i){return this.attributes["stroke-linecap"]=i,this}resize(i,e){this.width=i,this.height=e,this.element.style.width=i.toString(),this.svg.style.width=i.toString(),this.svg.style.height=e.toString();let n={width:i,height:e};return this.applyAttributes(this.svg,n),this.scale(this.state.scaleX,this.state.scaleY),this}scale(i,e){this.state.scaleX=this.state.scaleX?this.state.scaleX*i:i,this.state.scaleY=this.state.scaleY?this.state.scaleY*e:e;let n=this.width/this.state.scaleX,r=this.height/this.state.scaleY;return this.setViewBox(0,0,n,r),this}setViewBox(i,e,n,r){if(typeof i=="string")this.svg.setAttribute("viewBox",i);else{let o=i+" "+e+" "+n+" "+r;this.svg.setAttribute("viewBox",o)}}applyAttributes(i,e){let n=b1[i.nodeName];for(let r in e)n&&n[r]||e[r]&&(this.groupAttributes.length===0||e[r]!=this.groupAttributes[this.groupAttributes.length-1][r])&&i.setAttributeNS(null,r,e[r]);return i}clear(){for(;this.svg.lastChild;)this.svg.removeChild(this.svg.lastChild)}rect(i,e,n,r,o){r<0&&(e+=r,r*=-1);let s=this.create("rect");return o=o??{fill:"none","stroke-width":this.attributes["stroke-width"],stroke:"black"},i=this.round(i),e=this.round(e),n=this.round(n),r=this.round(r),this.applyAttributes(s,Object.assign({x:i,y:e,width:n,height:r},o)),this.add(s),this}fillRect(i,e,n,r){let o={fill:this.attributes.fill,stroke:"none"};return this.rect(i,e,n,r,o),this}pointerRect(i,e,n,r){let o={opacity:"0","pointer-events":"auto"};return this.rect(i,e,n,r,o),this}clearRect(i,e,n,r){return this.rect(i,e,n,r,{fill:this.backgroundFillStyle,stroke:"none"}),this}beginPath(){return this.path="",this.pen.x=NaN,this.pen.y=NaN,this}moveTo(i,e){return i=this.round(i),e=this.round(e),this.path+="M"+i+" "+e,this.pen.x=i,this.pen.y=e,this}lineTo(i,e){return i=this.round(i),e=this.round(e),this.path+="L"+i+" "+e,this.pen.x=i,this.pen.y=e,this}bezierCurveTo(i,e,n,r,o,s){return o=this.round(o),s=this.round(s),i=this.round(i),e=this.round(e),n=this.round(n),r=this.round(r),this.path+="C"+i+" "+e+","+n+" "+r+","+o+" "+s,this.pen.x=o,this.pen.y=s,this}quadraticCurveTo(i,e,n,r){return n=this.round(n),r=this.round(r),i=this.round(i),e=this.round(e),this.path+="Q"+i+" "+e+","+n+" "+r,this.pen.x=n,this.pen.y=r,this}arc(i,e,n,r,o,s){let a=i+n*Math.cos(r),c=e+n*Math.sin(r);a=this.round(a),c=this.round(c);let l=Ou(r),u=Ou(o);if(!s&&o-r>=mm||s&&r-o>=mm||l===u){let h=i+n*Math.cos(r+Math.PI),f=e+n*Math.sin(r+Math.PI);h=this.round(h),f=this.round(f),n=this.round(n),this.path+=`M${a} ${c} A${n} ${n} 0 0 0 ${h} ${f} `,this.path+=`A${n} ${n} 0 0 0 ${a} ${c}`,this.pen.x=a,this.pen.y=c}else{let h=i+n*Math.cos(o),f=e+n*Math.sin(o);r=l,o=u;let d;Math.abs(o-r)<Math.PI?d=s:d=!s,r>o&&(d=!d);let p=!s;h=this.round(h),f=this.round(f),n=this.round(n),this.path+=`M${a} ${c} A${n} ${n} 0 ${+d} ${+p} ${h} ${f}`,this.pen.x=h,this.pen.y=f}return this}closePath(){return this.path+="Z",this}getShadowStyle(){return`filter: drop-shadow(0 0 ${this.attributes.shadowBlur/1.5}px ${this.attributes.shadowColor})`}fill(i){let e=this.create("path");return typeof i>"u"&&(i=Object.assign(Object.assign({},this.attributes),{stroke:"none"})),i.d=this.path,this.attributes.shadowBlur>0&&(i.style=this.getShadowStyle()),this.applyAttributes(e,i),this.add(e),this}stroke(){let i=this.create("path"),e=Object.assign(Object.assign({},this.attributes),{fill:"none",d:this.path});return this.attributes.shadowBlur>0&&(e.style=this.getShadowStyle()),this.applyAttributes(i,e),this.add(i),this}measureText(i){t.measureTextElement.setText(i),t.measureTextElement.setFont(this.attributes["font-family"],this.attributes["font-size"],this.attributes["font-weight"],this.attributes["font-style"]);let e=t.measureTextElement.getBoundingBox();return{x:e.x,y:e.y,width:e.w,height:e.h}}fillText(i,e,n){if(!i||i.length<=0)return this;e=this.round(e),n=this.round(n);let r=Object.assign(Object.assign({},this.attributes),{stroke:"none",x:e,y:n}),o=this.create("text");return o.textContent=i,this.applyAttributes(o,r),this.add(o),this}save(){return this.stateStack.push({state:structuredClone(this.state),attributes:structuredClone(this.attributes)}),this}restore(){let i=this.stateStack.pop();if(i){let e=i;this.state=structuredClone(e.state),this.attributes=structuredClone(e.attributes)}return this}set fillStyle(i){this.setFillStyle(i)}get fillStyle(){return this.attributes.fill}set strokeStyle(i){this.setStrokeStyle(i)}get strokeStyle(){return this.attributes.stroke}setFont(i,e,n,r){let o=G.validate(i,e,n,r);this.fontCSSString=G.toCSSString(o);let s={"font-family":o.family,"font-size":o.size,"font-weight":o.weight,"font-style":o.style};return this.attributes=Object.assign(Object.assign({},this.attributes),s),this.state=Object.assign(Object.assign({},this.state),s),this}getFont(){return this.fontCSSString}};Jn.measureTextElement=new L;var za=function(t){return t[t.CANVAS=1]="CANVAS",t[t.SVG=2]="SVG",t}(za||{}),Xa=function(t){return t[t.NONE=1]="NONE",t[t.UP=2]="UP",t[t.DOWN=3]="DOWN",t}(Xa||{}),Nt=class t{static buildContext(i,e,n,r,o="#FFF"){let s=new t(i,e);n&&r&&s.resize(n,r);let a=s.getContext();return a.setBackgroundFillStyle(o),t.lastContext=a,a}static getCanvasContext(i,e,n,r){return t.buildContext(i,t.Backends.CANVAS,e,n,r)}static getSVGContext(i,e,n,r){return t.buildContext(i,t.Backends.SVG,e,n,r)}static drawDashedLine(i,e,n,r,o,s){i.beginPath();let a=r-e,c=o-n,l=Math.atan2(c,a),u=e,h=n;i.moveTo(e,n);let f=0,d=!0;for(;!((a<0?u<=r:u>=r)&&(c<0?h<=o:h>=o));){let p=s[f++%s.length],g=u+Math.cos(l)*p;u=a<0?Math.max(r,g):Math.min(r,g);let b=h+Math.sin(l)*p;h=c<0?Math.max(o,b):Math.min(o,b),d?i.lineTo(u,h):i.moveTo(u,h),d=!d}i.closePath(),i.stroke()}constructor(i,e){if(om(i))this.ctx=i;else{if(e===void 0)throw new S("InvalidArgument","Missing backend argument");let n=e,r;if(typeof i=="string"){let o=document.getElementById(i);if(!o)throw new S("BadElementId",`Can't find element with ID "${o}"`);r=o}else r=i;if(n===t.Backends.CANVAS){if(!Or(r))throw new S("BadElement","CANVAS context requires an HTMLCanvasElement.");let o=r.getContext("2d",{willReadFrequently:!0});if(!o)throw new S("BadElement","Can't get canvas context");this.ctx=new kr(o)}else if(n===t.Backends.SVG){if(!dm(r))throw new S("BadElement","SVG context requires an HTMLDivElement.");this.ctx=new Jn(r)}else throw new S("InvalidBackend",`No support for backend: ${n}`)}}resize(i,e){return this.ctx.resize(i,e),this}getContext(){return this.ctx}};Nt.Backends=za;Nt.LineEndType=Xa;Nt.lastContext=void 0;var mn=class extends B{static get CATEGORY(){return"StringNumber"}static format(i,e){let n=e.leftShift,r=e.rightShift,o=1;if(!i||i.length===0)return!1;let s=[],a=null,c=0,l=0,u=0;for(let b=0;b<i.length;++b){let E=i[b],v=E.getNote(),w=E.getPosition();if(!ee(v))throw new S("NoStaveNote");let C=E.checkIndex(),D=v.getKeyProps()[C],x=v.getModifierContext(),k=E.radius*2/T.STAVE_LINE_DISTANCE+.5;if(x&&(w===ut.ABOVE?(E.textLine=x.getState().topTextLine,e.topTextLine+=k):w===ut.BELOW&&(E.textLine=x.getState().textLine,e.textLine+=k)),v!==a){for(let X=0;X<v.keys.length;++X)w===B.Position.LEFT&&(c=Math.max(v.getLeftDisplacedHeadPx(),c)),r===0&&(l=Math.max(v.getRightDisplacedHeadPx(),l));a=v}let U=u===0?D.line:u;s.push({pos:w,note:v,num:E,line:U,shiftL:c,shiftR:l})}s.sort((b,E)=>E.line-b.line);let h=0,f=0,d=0,p=null,g=null;for(let b=0;b<s.length;++b){let E=s[b].note,v=s[b].pos,w=s[b].num,C=s[b].line,D=s[b].shiftR;(C!==p||E!==g)&&(h=r+D);let x=w.getWidth()+o,k=0;v===B.Position.LEFT?(w.setXShift(n+c),k=x,f=Math.max(k,f)):v===B.Position.RIGHT&&(w.setXShift(h),k+=x,d=k>d?k:d),p=C,g=E}return e.leftShift+=f,e.rightShift+=d,!0}constructor(i){super(),this.stringNumber=i,this.position=B.Position.ABOVE,this.xShift=0,this.yShift=0,this.textLine=0,this.stemOffset=0,this.xOffset=0,this.yOffset=0,this.dashed=!0,this.leg=Nt.LineEndType.NONE,this.radius=8,this.drawCircle=!0,this.setWidth(this.radius*2+4)}setLineEndType(i){return i>=Nt.LineEndType.NONE&&i<=Nt.LineEndType.DOWN&&(this.leg=i),this}setStringNumber(i){return this.stringNumber=i,this}setOffsetX(i){return this.xOffset=i,this}setOffsetY(i){return this.yOffset=i,this}setLastNote(i){return this.lastNote=i,this}setDashed(i){return this.dashed=i,this}setDrawCircle(i){return this.drawCircle=i,this}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let n=e.getModifierStartXY(this.position,this.index),r=e.hasStem()?e.getStemDirection():y.UP,o=n.x+this.xShift+this.xOffset,s={};e.hasStem()&&(s=e.checkStem().getExtents());let a=n.y+this.yShift+this.yOffset;switch(this.position){case B.Position.ABOVE:a=e.getYs().reduce((h,f)=>h<f?h:f),e.hasStem()&&r===y.UP&&(a=s.topY+O.get("StringNumber.stemPadding")),a-=this.radius+O.get("StringNumber.verticalPadding")+this.textLine*T.STAVE_LINE_DISTANCE;break;case B.Position.BELOW:a=e.getYs().reduce((h,f)=>h>f?h:f),e.hasStem()&&r===y.DOWN&&(a=s.topY-O.get("StringNumber.stemPadding")),a+=this.radius+O.get("StringNumber.verticalPadding")+this.textLine*T.STAVE_LINE_DISTANCE;break;case B.Position.LEFT:o-=this.radius/2+O.get("StringNumber.leftPadding");break;case B.Position.RIGHT:o+=this.radius/2+O.get("StringNumber.rightPadding");break;default:throw new S("InvalidPosition",`The position ${this.position} is invalid`)}this.drawCircle&&(i.beginPath(),i.arc(o,a,this.radius,0,Math.PI*2,!1),i.setLineWidth(1.5),i.stroke()),i.setFont(this.fontInfo);let c=o-i.measureText(this.stringNumber).width/2;i.fillText(""+this.stringNumber,c,a+4.5);let l=this.lastNote;if(an(l)){let u=l.getStemX()-e.getX()+5;i.setStrokeStyle("#000000"),i.setLineCap("round"),i.setLineWidth(.6),this.dashed?Nt.drawDashedLine(i,o+10,a,o+u,a,[3,3]):Nt.drawDashedLine(i,o+10,a,o+u,a,[3,0]);let h,f;switch(this.leg){case Nt.LineEndType.UP:h=-10,f=this.dashed?[3,3]:[3,0],Nt.drawDashedLine(i,o+u,a,o+u,a+h,f);break;case Nt.LineEndType.DOWN:h=10,f=this.dashed?[3,3]:[3,0],Nt.drawDashedLine(i,o+u,a,o+u,a+h,f);break;default:break}}}};var Ya=(()=>{class t extends B{static get CATEGORY(){return"Stroke"}static format(e,n){let r=n.leftShift,o=5;if(!e||e.length===0)return!1;let s=e.map(l=>{let u=l.getNote(),h=l.checkIndex();if(ee(u)){let{line:f}=u.getKeyProps()[h],d=u.getLeftDisplacedHeadPx();return{line:f,shift:d,stroke:l}}else if(ie(u)){let{str:f}=u.getPositions()[h];return{line:f,shift:0,stroke:l}}else throw new S("Internal","Unexpected instance.")}),a=r,c=s.reduce((l,{stroke:u,shift:h})=>(u.setXShift(a+h),Math.max(u.getWidth()+o,l)),0);return n.leftShift+=c,!0}constructor(e,n){super(),this.options=Object.assign({allVoices:!0},n),this.allVoices=this.options.allVoices,this.type=e,this.position=B.Position.LEFT,this.renderOptions={fontScale:O.get("Stroke.fontSize")},this.setXShift(0),this.setWidth(10)}getPosition(){return this.position}addEndNote(e){return this.noteEnd=e,this}draw(){let e=this.checkContext(),n=this.checkAttachedNote();this.setRendered();let r=n.getModifierStartXY(this.position,this.index),o=n.getYs(),s=r.y,a=r.y,c=r.x-5,l=n.checkStave().getSpacingBetweenLines(),u=this.checkModifierContext().getMembers(n.getCategory());for(let p=0;p<u.length;p++){let g=u[p];if(La(g)){o=g.getYs();for(let b=0;b<o.length;b++)(this.note===u[p]||this.allVoices)&&(s=Math.min(s,o[b]),a=Math.max(a,o[b]))}}let h="",f=0,d=0;switch(this.type){case t.Type.BRUSH_DOWN:case t.Type.ROLL_DOWN:case t.Type.RASGUEADO_DOWN:h=m.arrowheadBlackUp,f=s,s-=l/2,a+=l/2;break;case t.Type.BRUSH_UP:case t.Type.ROLL_UP:case t.Type.RASGUEADO_UP:h=m.arrowheadBlackDown,f=a+l,s-=l/2;break;case t.Type.ARPEGGIO_DIRECTIONLESS:s-=l/2,a+=l/2;break;default:throw new S("InvalidType",`The stroke type ${this.type} does not exist`)}if(this.type===t.Type.BRUSH_DOWN||this.type===t.Type.BRUSH_UP)e.fillRect(c+this.xShift,s,1,a-s);else{let p=h===m.arrowheadBlackDown?m.wiggleArpeggiatoDown:m.wiggleArpeggiatoUp,g="",b=new L;for(;b.getWidth()<a-s;)g+=p,b.setText(g);this.type===t.Type.RASGUEADO_DOWN||this.type===t.Type.ROLL_DOWN||this.type===t.Type.ARPEGGIO_DIRECTIONLESS?(e.openRotation(90,c+this.xShift,s),b.renderText(e,c+this.xShift,s-b.getTextMetrics().actualBoundingBoxDescent+b.getHeight()/2),e.closeRotation(),d=s+b.getWidth()+5):(e.openRotation(-90,c+this.xShift,a),b.renderText(e,c+this.xShift,a-b.getTextMetrics().actualBoundingBoxDescent+b.getHeight()/2),e.closeRotation(),d=a-b.getWidth()-5)}if(f!==0){let p=new L;p.setText(h),p.renderText(e,c+this.xShift-p.getWidth()/2,f)}if(this.type===t.Type.RASGUEADO_DOWN||this.type===t.Type.RASGUEADO_UP){let p=new L("Stroke.text");p.setText("R"),p.renderText(e,c+this.xShift-p.getWidth()/2,d+(this.type===t.Type.RASGUEADO_DOWN?p.getHeight():0))}}}return t.Type={BRUSH_DOWN:1,BRUSH_UP:2,ROLL_DOWN:3,ROLL_UP:4,RASGUEADO_DOWN:5,RASGUEADO_UP:6,ARPEGGIO_DIRECTIONLESS:7},t})();var pn=class extends B{static get CATEGORY(){return"Vibrato"}static format(i,e,n){if(!i||i.length===0)return!1;let r=e.topTextLine,o=0,s=e.rightShift-7,a=n.getMembers(ln.CATEGORY);if(a&&a.length>0){let c=a.map(l=>l.getTextHeight()).reduce((l,u)=>l>u?l:u)/T.STAVE_LINE_DISTANCE;r=r-(c+1)}else e.topTextLine+=1;for(let c=0;c<i.length;++c){let l=i[c];l.setXShift(s),l.setTextLine(r),o+=l.getWidth(),s+=o}return e.rightShift+=o,!0}constructor(){super(),this.position=B.Position.RIGHT,this.renderOptions={code:60080,width:20},this.setVibratoWidth(this.renderOptions.width)}setVibratoWidth(i){this.renderOptions.width=i,this.text=String.fromCodePoint(this.renderOptions.code);let e=this.getWidth();if(!e)throw new S("Cannot set vibrato width if width is 0");let n=Math.round(this.renderOptions.width/e);for(let r=1;r<n;r++)this.text+=String.fromCodePoint(this.renderOptions.code);return this}setVibratoCode(i){return this.renderOptions.code=i,this.setVibratoWidth(this.renderOptions.width)}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let r=e.getModifierStartXY(B.Position.RIGHT,this.index).x,o=e.getYForTopText(this.textLine)+5;this.renderText(i,r,o)}};function qa(...t){gn.DEBUG&&J("VexFlow.ModifierContext",t)}var gn=(()=>{class t{constructor(){this.state={leftShift:0,rightShift:0,textLine:0,topTextLine:0},this.members={},this.preFormatted=!1,this.postFormatted=!1,this.formatted=!1,this.width=0,this.spacing=0}addModifier(e){return qa("addModifier is deprecated, use addMember instead."),this.addMember(e)}addMember(e){let n=e.getCategory();return this.members[n]||(this.members[n]=[]),this.members[n].push(e),e.setModifierContext(this),this.preFormatted=!1,this}getModifiers(e){return qa("getModifiers is deprecated, use getMembers instead."),this.getMembers(e)}getMembers(e){var n;return(n=this.members[e])!==null&&n!==void 0?n:[]}getWidth(){return this.width}getLeftShift(){return this.state.leftShift}getRightShift(){return this.state.rightShift}getState(){return this.state}getMetrics(){if(!this.formatted)throw new S("UnformattedMember","Unformatted member has no metrics.");return{width:this.state.leftShift+this.state.rightShift+this.spacing,spacing:this.spacing}}preFormat(){if(this.preFormatted)return;qa("Preformatting ModifierContext");let e=this.state,n=this.members;Le.format(n.StaveNote,e),Br.format(n.Parenthesis,e),un.format(n.Dot,e),Di.format(n.FretHandFinger,e),Yn.format(n.Accidental,e),Ya.format(n.Stroke,e),qn.format(n.GraceNoteGroup,e),fn.format(n.NoteSubGroup,e),mn.format(n.StringNumber,e),Pi.format(n.Articulation,e),Zn.format(n.Ornament,e),Me.format(n.Annotation,e),pe.format(n.ChordSymbol,e),ln.format(n.Bend,e),pn.format(n.Vibrato,e,this),this.width=e.leftShift+e.rightShift,this.preFormatted=!0}postFormat(){this.postFormatted||(qa("Postformatting ModifierContext"),Le.postFormat(this.getMembers("StaveNote")))}}return t.DEBUG=!1,t})();var mi=class extends Lt{static get CATEGORY(){return"KeySignature"}constructor(i,e,n){super(),this.accList=[],this.setKeySig(i,e,n),this.setPosition(z.BEGIN),this.children=[],this.paddingForced=!1}convertToGlyph(i,e,n){let r=T.accidentalCodes(i.type),o=new L("KeySignature");o.setText(r);let s=1;if(o.setYShift(n.getYForLine(i.line)),this.children.length>0){let a=this.children[this.children.length-1],c=u=>u.getText()===m.accidentalNatural,l=(u,h)=>Math.abs(h.getYShift()-u.getYShift());(c(a)||c(o))&&l(a,o)<10&&(s=2),o.setXShift(a.getXShift()+a.getWidth()+s)}this.children.push(o),this.width+=o.getWidth()+s}cancelKey(i){return this.formatted=!1,this.cancelKeySpec=i,this}convertToCancelAccList(i){let e=T.keySignature(i),n=this.accList.length>0&&e.length>0&&e[0].type!==this.accList[0].type,r=n?e.length:e.length-this.accList.length;if(r<1)return;let o=[];for(let s=0;s<r;s++){let a=s;n||(a=e.length-r+s);let c=e[a];o.push({type:"n",line:c.line})}return this.accList=o.concat(this.accList),{accList:o,type:e[0].type}}addToStave(i){return this.paddingForced=!0,i.addModifier(this),this}setStave(i){return this.formatted=!1,super.setStave(i)}getBoundingBox(){return this.formatted||this.format(),super.getBoundingBox()}calculateDimensions(){let i;this.children.length>0?i=this.children[0].getBoundingBox():i=new Ce(this.x+this.xShift,this.y+this.yShift,0,0),this.children.forEach(e=>{i.mergeWith(e.getBoundingBox())}),this.width=i.getW(),this.height=i.getH(),this.y=i.getY()}convertAccLines(i,e,n=this.accList){let r=0,o;switch(i){case"soprano":e==="#"?o=[2.5,.5,2,0,1.5,-.5,1]:r=-1;break;case"mezzo-soprano":e==="b"?o=[0,2,.5,2.5,1,3,1.5]:r=1.5;break;case"alto":r=.5;break;case"tenor":e==="#"?o=[3,1,2.5,.5,2,0,1.5]:r=-.5;break;case"baritone-f":case"baritone-c":e==="b"?o=[.5,2.5,1,3,1.5,3.5,2]:r=2;break;case"bass":case"french":r=1;break;default:break}let s;if(typeof o<"u")for(s=0;s<n.length;++s)n[s].line=o[s];else if(r!==0)for(s=0;s<n.length;++s)n[s].line+=r}getPadding(i){return this.formatted||this.format(),this.children.length===0||!this.paddingForced&&i<2?0:this.padding}getWidth(){return this.formatted||this.format(),this.width}setKeySig(i,e,n){return this.formatted=!1,this.keySpec=i,this.cancelKeySpec=e,this.alterKeySpec=n,this}alterKey(i){return this.formatted=!1,this.alterKeySpec=i,this}convertToAlterAccList(i){let e=Math.min(i.length,this.accList.length);for(let n=0;n<e;++n)i[n]&&(this.accList[n].type=i[n])}format(){let i=this.getStave();i||(i=new ge(0,0,100),this.setStave(i)),this.width=0,this.children=[],this.accList=T.keySignature($(this.keySpec));let e=this.accList,n=e.length>0?e[0].type:void 0,r;if(this.cancelKeySpec&&(r=this.convertToCancelAccList(this.cancelKeySpec)),this.alterKeySpec&&this.convertToAlterAccList(this.alterKeySpec),this.accList.length>0){let o=(this.position===z.END?i.getEndClef():i.getClef())||i.getClef();r&&this.convertAccLines(o,r.type,r.accList),this.convertAccLines(o,n,e);for(let s=0;s<this.accList.length;++s)this.convertToGlyph(this.accList[s],this.accList[s+1],i)}this.calculateDimensions(),this.formatted=!0}draw(){let e=this.checkStave().checkContext();this.formatted||this.format(),this.setRendered(),e.openGroup("keysignature",this.getAttribute("id"));for(let n=0;n<this.children.length;n++)this.children[n].renderText(e,this.x,0);e.closeGroup()}};var Za=(()=>{class t extends Lt{static get CATEGORY(){return"Repetition"}constructor(e,n,r){super(),this.symbolType=e,this.x=n,this.xShift=0,this.yShift=r}setShiftX(e){return this.xShift=e,this}setShiftY(e){return this.yShift=e,this}draw(){let e=this.checkStave(),n=e.getModifierXShift(this.getPosition());switch(this.setRendered(),this.symbolType){case t.type.CODA_RIGHT:this.drawCodaFixed(e,n+e.getWidth());break;case t.type.CODA_LEFT:this.drawSymbolText(e,n,"Coda",!0);break;case t.type.SEGNO_LEFT:this.drawSegnoFixed(e,n);break;case t.type.SEGNO_RIGHT:this.drawSegnoFixed(e,n+e.getWidth());break;case t.type.DC:this.drawSymbolText(e,n,"D.C.",!1);break;case t.type.DC_AL_CODA:this.drawSymbolText(e,n,"D.C. al",!0);break;case t.type.DC_AL_FINE:this.drawSymbolText(e,n,"D.C. al Fine",!1);break;case t.type.DS:this.drawSymbolText(e,n,"D.S.",!1);break;case t.type.DS_AL_CODA:this.drawSymbolText(e,n,"D.S. al",!0);break;case t.type.DS_AL_FINE:this.drawSymbolText(e,n,"D.S. al Fine",!1);break;case t.type.FINE:this.drawSymbolText(e,n,"Fine",!1);break;case t.type.TO_CODA:this.drawSymbolText(e,n,"To",!0);break;default:break}}drawCodaFixed(e,n){let r=e.getYForTopText(e.getNumLines());return this.text=m.coda,this.renderText(e.checkContext(),n,r+O.get("Repetition.coda.offsetY")),this}drawSegnoFixed(e,n){let r=e.getYForTopText(e.getNumLines());return this.text=m.segno,this.renderText(e.checkContext(),n,r+O.get("Repetition.segno.offsetY")),this}drawSymbolText(e,n,r,o){let s=e.checkContext(),a=0;switch(this.text=r,o&&(this.text+=" \uE048"),this.setFont(O.getFontInfo("Repetition.text")),this.symbolType){case t.type.CODA_LEFT:a=e.getVerticalBarWidth();break;case t.type.DC:case t.type.DC_AL_FINE:case t.type.DS:case t.type.DS_AL_FINE:case t.type.FINE:default:a=n-(e.getNoteStartX()-this.x)+e.getWidth()-this.width-O.get("Repetition.text.offsetX")}let c=e.getYForTopText(e.getNumLines())+O.get("Repetition.text.offsetY");return this.renderText(s,a,c),this}}return t.type={NONE:1,CODA_LEFT:2,CODA_RIGHT:3,SEGNO_LEFT:4,SEGNO_RIGHT:5,DC:6,DC_AL_CODA:7,DC_AL_FINE:8,DS:9,DS_AL_CODA:10,DS_AL_FINE:11,FINE:12,TO_CODA:13},t})();var Ja=class extends Lt{static get CATEGORY(){return"StaveSection"}constructor(i,e=0,n=0,r=!0){super(),this.setText(i),this.x=e,this.yShift=n,this.drawRect=r,this.padding=O.get("StaveSection.padding")}setDrawRect(i){return this.drawRect=i,this}draw(){let i=this.checkStave(),e=i.checkContext();this.setRendered(),this.x=i.getX()+i.getModifierXShift(this.getPosition());let n=-1*this.textMetrics.actualBoundingBoxDescent,r=this.width+2*this.padding,o=this.height+2*this.padding,s=i.getYForTopText(1.5)+this.yShift,a=this.x+this.xShift;this.drawRect&&(e.beginPath(),e.rect(a,s-o+n,r,o),e.stroke()),this.renderText(e,this.xShift+this.padding,s-this.padding)}};var Fr=class extends Lt{static get CATEGORY(){return"StaveTempo"}constructor(i,e,n){super(),this.durationToCode={"1/4":m.metNoteDoubleWholeSquare,long:m.metNoteDoubleWholeSquare,"1/2":m.metNoteDoubleWhole,breve:m.metNoteDoubleWhole,1:m.metNoteWhole,whole:m.metNoteWhole,w:m.metNoteWhole,2:m.metNoteHalfUp,half:m.metNoteHalfUp,h:m.metNoteHalfUp,4:m.metNoteQuarterUp,quarter:m.metNoteQuarterUp,q:m.metNoteQuarterUp,8:m.metNote8thUp,eighth:m.metNote8thUp,16:m.metNote16thUp,"16th":m.metNote16thUp,32:m.metNote32ndUp,"32nd":m.metNote32ndUp,64:m.metNote64thUp,"64th":m.metNote64thUp,128:m.metNote128thUp,"128th":m.metNote128thUp,256:m.metNote256thUp,"256th":m.metNote256thUp,512:m.metNote512thUp,"512th":m.metNote512thUp,1024:m.metNote1024thUp,"1024th":m.metNote1024thUp},this.tempo=i,this.position=z.ABOVE,this.x=e,this.setXShift(10),this.setYShift(n)}setTempo(i){return this.tempo=i,this}draw(){let i=this.checkStave(),e=i.getModifierXShift(this.getPosition()),n=i.checkContext();this.setRendered();let{name:r,duration:o,dots:s,bpm:a,duration2:c,dots2:l,parenthesis:u}=this.tempo,h=this.x+e,f=i.getYForTopText(1),d=new L("StaveTempo.glyph"),p=new L("StaveTempo");if(r&&(this.text=r,this.fontInfo=O.getFontInfo("StaveTempo.name"),this.renderText(n,e,f),h+=this.getWidth()+3),(r&&o||u)&&(p.setText("("),p.renderText(n,h+this.xShift,f+this.yShift),h+=p.getWidth()+3),o){if(d.setText(this.durationToCode[o]),d.renderText(n,h+this.xShift,f+this.yShift),h+=d.getWidth()+3,s){d.setText(m.metAugmentationDot);for(let g=0;g<s;g++)d.renderText(n,h+this.xShift,f+2+this.yShift),h+=d.getWidth()+3}if(p.setText("="),p.renderText(n,h+this.xShift,f+this.yShift),h+=p.getWidth()+3,c){if(d.setText(this.durationToCode[c]),d.renderText(n,h+this.xShift,f+this.yShift),h+=d.getWidth()+3,l){d.setText(m.metAugmentationDot);for(let g=0;g<l;g++)d.renderText(n,h+this.xShift,f+2+this.yShift),h+=d.getWidth()+3}}else a&&(p.setText(""+a),p.renderText(n,h+this.xShift,f+this.yShift),h+=p.getWidth()+3);(r||u)&&(p.setText(")"),p.renderText(n,h+this.xShift,f+this.yShift))}}};var Oe=function(t){return t[t.LEFT=1]="LEFT",t[t.CENTER=2]="CENTER",t[t.RIGHT=3]="RIGHT",t}(Oe||{}),Lr=(()=>{class t extends pt{static get CATEGORY(){return"TextNote"}static get GLYPHS(){return{segno:m.segno,tr:m.ornamentTrill,mordent:m.ornamentMordent,mordentUpper:m.ornamentShortTrill,mordentLower:m.ornamentMordent,f:m.dynamicForte,p:m.dynamicPiano,m:m.dynamicMezzo,s:m.dynamicSforzando,z:m.dynamicZ,coda:m.coda,pedalOpen:m.keyboardPedalPed,pedalClose:m.keyboardPedalUp,caesuraStraight:m.caesura,caesuraCurved:m.caesuraCurved,breath:m.breathMarkComma,tick:m.breathMarkTick,turn:m.ornamentTurn,turnInverted:m.ornamentTurnSlash}}constructor(e){var n,r;super(e),this.text=(n=e.text)!==null&&n!==void 0?n:"",e.glyph&&(this.text+=t.GLYPHS[e.glyph]||e.glyph),e.font?this.setFont(e.font):e.glyph===void 0&&this.setFont(O.getFontInfo("TextNote.text.fontSize"));let o=G.convertSizeToPointValue(this.fontInfo.size)*.769231;e.superscript&&(this.superscript=new L("TexNote.subSuper"),this.superscript.setText(e.superscript),this.superscript.setFontSize(o)),e.subscript&&(this.subscript=new L("TexNote.subSuper"),this.subscript.setText(e.subscript),this.subscript.setFontSize(o)),this.line=(r=e.line)!==null&&r!==void 0?r:0,this.smooth=e.smooth||!1,this.ignoreTicks=e.ignoreTicks||!1,this.justification=Oe.LEFT}setJustification(e){return this.justification=e,this}setLine(e){return this.line=e,this}getLine(){return this.line}preFormat(){if(this.preFormatted)return;let e=this.checkTickContext("Can't preformat without a TickContext.");this.justification===Oe.CENTER?this.leftDisplacedHeadPx=this.width/2:this.justification===Oe.RIGHT&&(this.leftDisplacedHeadPx=this.width),this.rightDisplacedHeadPx=e.getMetrics().glyphPx/2,this.preFormatted=!0}draw(){let e=this.checkContext(),n=this.checkStave(),r=this.checkTickContext("Can't draw without a TickContext.");this.setRendered();let o=this.getAbsoluteX()+r.getMetrics().glyphPx/2,s=this.getWidth();this.justification===Oe.CENTER?o-=s/2:this.justification===Oe.RIGHT&&(o-=s);let a=n.getYForLine(this.line+-3);this.renderText(e,o,a);let c=this.getHeight();this.superscript&&this.superscript.renderText(e,o+this.width+2,a-c/2.2),this.subscript&&this.subscript.renderText(e,o+this.width+2,a+c/2.2-1)}}return t.Justification=Oe,t})();var Vr=class extends Lt{static get CATEGORY(){return"StaveText"}constructor(i,e,n={}){var r,o,s;super(),this.setText(i),this.setXShift((r=n.shiftX)!==null&&r!==void 0?r:0),this.setYShift((o=n.shiftY)!==null&&o!==void 0?o:0),this.position=e,this.justification=(s=n.justification)!==null&&s!==void 0?s:Lr.Justification.CENTER}draw(){let i=this.checkStave(),e=i.checkContext();this.setRendered();let n,r;switch(this.position){case z.LEFT:case z.RIGHT:r=(i.getYForLine(0)+i.getBottomLineY())/2,this.position===z.LEFT?n=i.getX()-this.width-24:n=i.getX()+i.getWidth()+24;break;case z.ABOVE:case z.BELOW:n=i.getX(),this.justification===Oe.CENTER?n+=i.getWidth()/2-this.width/2:this.justification===Oe.RIGHT&&(n+=i.getWidth()-this.width),this.position===z.ABOVE?r=i.getYForTopText(2):r=i.getYForBottomText(2);break;default:throw new S("InvalidPosition","Value Must be in Modifier.Position.")}this.renderText(e,n,r+4)}};var Fi=function(t){return t[t.NONE=1]="NONE",t[t.BEGIN=2]="BEGIN",t[t.MID=3]="MID",t[t.END=4]="END",t[t.BEGIN_END=5]="BEGIN_END",t}(Fi||{}),Hr=class extends Lt{static get CATEGORY(){return"Volta"}static get type(){return Fi}constructor(i,e,n,r){super(),this.type=i,this.x=n,this.yShift=r,this.text=e}draw(){let i=this.checkStave(),e=i.getModifierXShift(this.getPosition()),n=i.checkContext();this.setRendered();let r=i.getWidth()-e,o=i.getYForTopText(i.getNumLines())+this.yShift,s=1.5*i.getSpacingBetweenLines();switch(this.type){case Fi.BEGIN:n.fillRect(this.x+e,o,1,s);break;case Fi.END:r-=5,n.fillRect(this.x+e+r,o,1,s);break;case Fi.BEGIN_END:r-=3,n.fillRect(this.x+e,o,1,s),n.fillRect(this.x+e+r,o,1,s);break;default:break}(this.type===Fi.BEGIN||this.type===Fi.BEGIN_END)&&this.renderText(n,e+5,o-this.yShift+15),n.fillRect(this.x+e,o,r,1)}};var E1=t=>{t.split("/").forEach(e=>{if(/^[0-9+\-()]+$/.test(e)===!1)throw new S("BadTimeSignature",`Invalid time spec: ${t}. Must contain valid signatures.`)})},pi=class t extends Lt{static get CATEGORY(){return"TimeSignature"}constructor(i="4/4",e=15,n=!0){super(),this.timeSpec="4/4",this.line=0,this.isNumeric=!0,this.topStartX=0,this.botStartX=0,this.lineShift=0,this.topText=new L,this.botText=new L,this.validateArgs=n;let r=e;this.topLine=1,this.bottomLine=3,this.setPosition(z.BEGIN),this.setTimeSig(i),this.setPadding(r)}static getTimeSigCode(i,e=!1){let n=m.null;switch(i){case"C":n=m.timeSigCommon;break;case"C|":n=m.timeSigCutCommon;break;case"+":n=e?m.timeSigPlusSmall:m.timeSigPlus;break;case"-":n=m.timeSigMinus;break;case"(":n=e?m.timeSigParensLeftSmall:m.timeSigParensLeft;break;case")":n=e?m.timeSigParensRightSmall:m.timeSigParensRight;break;default:n=String.fromCodePoint(57472+Number(i[0]));break}return n}makeTimeSignatureGlyph(i,e){let n="",r=0,o=0;for(let a=0;a<i.length;++a){let c=t.getTimeSigCode(i[a],e.length>0);n+=c}this.topText.setText(n),r=this.topText.getWidth(),o=this.topText.getHeight();let s=0;n="";for(let a=0;a<e.length;++a){let c=t.getTimeSigCode(e[a],!0);n+=c}this.botText.setText(n),s=this.botText.getWidth(),o=Math.max(o,this.botText.getHeight()),this.lineShift=o>30?.5:0,this.width=Math.max(r,s),this.topStartX=(this.width-r)/2,this.botStartX=(this.width-s)/2}setTimeSig(i){var e,n;if(this.timeSpec=i,i==="C"||i==="C|"){let r=t.getTimeSigCode(i);this.line=2,this.text=r,this.isNumeric=!1}else{this.validateArgs&&E1(i);let r=i.split("/");this.line=0,this.isNumeric=!0,this.makeTimeSignatureGlyph((e=r[0])!==null&&e!==void 0?e:"",(n=r[1])!==null&&n!==void 0?n:"")}return this}getTimeSpec(){return this.timeSpec}getLine(){return this.line}setLine(i){this.line=i}getIsNumeric(){return this.isNumeric}setIsNumeric(i){this.isNumeric=i}draw(){let i=this.checkStave(),e=i.checkContext();this.setRendered(),e.openGroup("timesignature",this.getAttribute("id")),this.drawAt(e,i,this.x),e.closeGroup()}drawAt(i,e,n){if(this.setRendered(),this.isNumeric){let r=n+this.topStartX,o=0;this.botText.getText().length>0?o=e.getYForLine(this.topLine-this.lineShift):o=(e.getYForLine(this.topLine)+e.getYForLine(this.bottomLine))/2,this.topText.renderText(i,r,o),r=n+this.botStartX,o=e.getYForLine(this.bottomLine+this.lineShift),this.botText.renderText(i,r,o)}else this.renderText(i,n-this.x,e.getYForLine(this.line))}};var S1={[Re.CATEGORY]:0,[Ti.CATEGORY]:1,[mi.CATEGORY]:2,[pi.CATEGORY]:3},C1={[pi.CATEGORY]:0,[mi.CATEGORY]:1,[Re.CATEGORY]:2,[Ti.CATEGORY]:3},ge=class extends L{static get CATEGORY(){return"Stave"}static get defaultPadding(){return O.get("Stave.padding")+O.get("Stave.endPaddingMax")}static get rightPadding(){return O.get("Stave.endPaddingMax")}constructor(i,e,n,r){super(),this.x=i,this.y=e,this.width=n,this.formatted=!1,this.startX=i+5,this.endX=i+n,this.modifiers=[],this.measure=0,this.clef="treble",this.endClef=void 0,this.options=Object.assign({verticalBarWidth:10,numLines:5,leftBar:!0,rightBar:!0,spacingBetweenLinesPx:T.STAVE_LINE_DISTANCE,spaceAboveStaffLn:4,spaceBelowStaffLn:4,topTextPosition:1,bottomTextPosition:4,lineConfig:[]},r),this.bounds={x:this.x,y:this.y,w:this.width,h:0},this.defaultLedgerLineStyle={strokeStyle:"#444",lineWidth:2},this.resetLines(),this.addModifier(new Re(this.options.leftBar?ct.SINGLE:ct.NONE)),this.addEndModifier(new Re(this.options.rightBar?ct.SINGLE:ct.NONE))}setDefaultLedgerLineStyle(i){this.defaultLedgerLineStyle=i}getDefaultLedgerLineStyle(){return Object.assign(Object.assign({},this.getStyle()),this.defaultLedgerLineStyle)}space(i){return this.options.spacingBetweenLinesPx*i}resetLines(){this.options.lineConfig=[];for(let i=0;i<this.options.numLines;i++)this.options.lineConfig.push({visible:!0});this.height=(this.options.numLines+this.options.spaceAboveStaffLn)*this.options.spacingBetweenLinesPx,this.options.bottomTextPosition=this.options.numLines}setNoteStartX(i){return this.formatted||this.format(),this.startX=i,this}getNoteStartX(){return this.formatted||this.format(),this.startX}getNoteEndX(){return this.formatted||this.format(),this.endX}getTieStartX(){return this.startX}getTieEndX(){return this.endX}getNumLines(){return this.options.numLines}setNumLines(i){return this.options.numLines=i,this.resetLines(),this}getTopLineTopY(){return this.getYForLine(0)}getBottomLineBottomY(){var i;return this.getYForLine(this.getNumLines()-1)+((i=this.getStyle().lineWidth)!==null&&i!==void 0?i:1)}setX(i){let e=i-this.x;this.formatted=!1,this.x=i,this.startX+=e,this.endX+=e;for(let n=0;n<this.modifiers.length;n++){let r=this.modifiers[n];r.setX(r.getX()+e)}return this}setWidth(i){return this.formatted=!1,this.width=i,this.endX=this.x+i,this}setMeasure(i){return this.measure=i,this}getMeasure(){return this.measure}getModifierXShift(i=0){if(typeof i!="number")throw new S("InvalidIndex","Must be of number type");if(this.formatted||this.format(),this.getModifiers(z.BEGIN).length===1||this.modifiers[i].getPosition()===z.RIGHT)return 0;let e=this.startX-this.x,n=this.modifiers[0];return n.getType()===ct.REPEAT_BEGIN&&e>n.getWidth()&&(e-=n.getWidth()),e}setRepetitionType(i,e=0){return this.modifiers.push(new Za(i,this.x,e)),this}setVoltaType(i,e,n){return this.modifiers.push(new Hr(i,e,this.x,n)),this}setSection(i,e,n=0,r,o=!0){let s=new Ja(i).setYShift(e).setXShift(n).setDrawRect(o);return r&&s.setFontSize(r),this.addModifier(s),this}setTempo(i,e){return this.modifiers.push(new Fr(i,this.x,e)),this}setStaveText(i,e,n={}){return this.modifiers.push(new Vr(i,e,n)),this}getSpacingBetweenLines(){return this.options.spacingBetweenLinesPx}getBoundingBox(){return new Ce(this.x,this.y,this.width,this.getBottomY()-this.y)}getBottomY(){let i=this.options,e=i.spacingBetweenLinesPx;return this.getYForLine(i.numLines)+i.spaceBelowStaffLn*e}getBottomLineY(){return this.getYForLine(this.options.numLines)}getYForLine(i){let e=this.options,n=e.spacingBetweenLinesPx,r=e.spaceAboveStaffLn;return this.y+i*n+r*n}getLineForY(i){let e=this.options,n=e.spacingBetweenLinesPx,r=e.spaceAboveStaffLn;return(i-this.y)/n-r}getYForTopText(i=0){return this.getYForLine(-i-this.options.topTextPosition)}getYForBottomText(i=0){return this.getYForLine(this.options.bottomTextPosition+i)}getYForNote(i){let e=this.options,n=e.spacingBetweenLinesPx,r=e.spaceAboveStaffLn;return this.y+r*n+5*n-i*n}getYForGlyphs(){return this.getYForLine(3)}addModifier(i,e){return e!==void 0&&i.setPosition(e),i.setStave(this),this.formatted=!1,this.modifiers.push(i),this}addEndModifier(i){return this.addModifier(i,z.END),this}setBegBarType(i){let{SINGLE:e,REPEAT_BEGIN:n,NONE:r}=ct;return(i===e||i===n||i===r)&&(this.modifiers[0].setType(i),this.formatted=!1),this}setEndBarType(i){return i!==ct.REPEAT_BEGIN&&(this.modifiers[1].setType(i),this.formatted=!1),this}setClef(i,e,n,r){r===void 0&&(r=z.BEGIN),r===z.END?this.endClef=i:this.clef=i;let o=this.getModifiers(r,Ti.CATEGORY);return o.length===0?this.addClef(i,e,n,r):o[0].setType(i,e,n),this}getClef(){return this.clef}setEndClef(i,e,n){return this.setClef(i,e,n,z.END),this}getEndClef(){return this.endClef}setKeySignature(i,e,n){n===void 0&&(n=z.BEGIN);let r=this.getModifiers(n,mi.CATEGORY);return r.length===0?this.addKeySignature(i,e,n):r[0].setKeySig(i,e),this}setEndKeySignature(i,e){return this.setKeySignature(i,e,z.END),this}setTimeSignature(i,e,n){n===void 0&&(n=z.BEGIN);let r=this.getModifiers(n,pi.CATEGORY);return r.length===0?this.addTimeSignature(i,e,n):r[0].setTimeSig(i),this}setEndTimeSignature(i,e){return this.setTimeSignature(i,e,z.END),this}addKeySignature(i,e,n){return n===void 0&&(n=z.BEGIN),this.addModifier(new mi(i,e).setPosition(n),n),this}addClef(i,e,n,r){return r===void 0||r===z.BEGIN?this.clef=i:r===z.END&&(this.endClef=i),this.addModifier(new Ti(i,e,n),r),this}addEndClef(i,e,n){return this.addClef(i,e,n,z.END),this}addTimeSignature(i,e,n){return this.addModifier(new pi(i,e),n),this}addEndTimeSignature(i,e){return this.addTimeSignature(i,e,z.END),this}addTrebleGlyph(){return this.addClef("treble"),this}getModifiers(i,e){let n=i===void 0,r=e===void 0;return n&&r?this.modifiers:n?this.modifiers.filter(o=>e===o.getCategory()):r?this.modifiers.filter(o=>i===o.getPosition()):this.modifiers.filter(o=>i===o.getPosition()&&e===o.getCategory())}sortByCategory(i,e){for(let n=i.length-1;n>=0;n--)for(let r=0;r<n;r++)if(e[i[r].getCategory()]>e[i[r+1].getCategory()]){let o=i[r];i[r]=i[r+1],i[r+1]=o}}format(){var i,e,n,r;let o=this.modifiers[0],s=this.modifiers[1],a=this.getModifiers(z.BEGIN),c=this.getModifiers(z.END);this.sortByCategory(a,S1),this.sortByCategory(c,C1),a.length>1&&o.getType()===ct.REPEAT_BEGIN&&(a.push(a.splice(0,1)[0]),a.splice(0,0,new Re(ct.SINGLE))),c.indexOf(s)>0&&c.splice(0,0,new Re(ct.NONE));let l,u,h,f=0,d=this.x;for(let b=0;b<a.length;b++)h=a[b],u=h.getPadding(b+f),l=h.getWidth(),d+=u,h.setX(d),d+=l,u+l===0&&f--;this.startX=d,d=this.x+this.width;let p={left:0,right:0,paddingRight:0,paddingLeft:0},g=0;for(let b=0;b<c.length;b++){h=c[b],g=Ba(h)?b:g,p.right=0,p.left=0,p.paddingRight=0,p.paddingLeft=0;let E=h.getLayoutMetrics();E?(b!==0&&(p.right=(i=E.xMax)!==null&&i!==void 0?i:0,p.paddingRight=(e=E.paddingRight)!==null&&e!==void 0?e:0),p.left=-((n=E.xMin)!==null&&n!==void 0?n:0),p.paddingLeft=(r=E.paddingLeft)!==null&&r!==void 0?r:0,b===c.length-1&&(p.paddingLeft=0)):(p.paddingRight=h.getPadding(b-g),b!==0&&(p.right=h.getWidth()),b===0&&(p.left=h.getWidth())),d-=p.paddingRight,d-=p.right,h.setX(d),d-=p.left,d-=p.paddingLeft}this.endX=c.length===1?this.x+this.width:d,this.formatted=!0}draw(){var i;let e=this.checkContext();this.setRendered(),e.openGroup("stave",this.getAttribute("id")),this.formatted||this.format();let n=this.options.numLines,r=this.width,o=this.x,s,c=((i=this.getStyle().lineWidth)!==null&&i!==void 0?i:1)%2===0?0:.5;for(let l=0;l<n;l++)s=this.getYForLine(l),this.options.lineConfig[l].visible&&(e.beginPath(),e.moveTo(o,s+c),e.lineTo(o+r,s+c),e.stroke());e.closeGroup();for(let l=0;l<this.modifiers.length;l++){let u=this.modifiers[l];u.setContext(e),u.setStave(this),u.drawWithStyle()}if(this.measure>0){e.setFont(this.fontInfo);let l=e.measureText(""+this.measure).width;s=this.getYForTopText(0)+3,e.fillText(""+this.measure,this.x-l/2,s)}}getVerticalBarWidth(){return this.options.verticalBarWidth}getConfigForLines(){return this.options.lineConfig}setConfigForLine(i,e){if(i>=this.options.numLines||i<0)throw new S("StaveConfigError","The line number must be within the range of the number of lines in the Stave.");if(e.visible===void 0)throw new S("StaveConfigError","The line configuration object is missing the 'visible' property.");if(typeof e.visible!="boolean")throw new S("StaveConfigError","The line configuration objects 'visible' property must be true or false.");return this.options.lineConfig[i]=e,this}setConfigForLines(i){if(i.length!==this.options.numLines)throw new S("StaveConfigError","The length of the lines configuration array must match the number of lines in the Stave");for(let e in i)i[e].visible===void 0&&(i[e]=this.options.lineConfig[e]),this.options.lineConfig[e]=Object.assign(Object.assign({},this.options.lineConfig[e]),i[e]);return this.options.lineConfig=i,this}static formatBegModifiers(i){let e=r=>{let o=0;i.forEach(a=>{let c=a.getModifiers(z.BEGIN,r);c.length>0&&c[0].getX()>o&&(o=c[0].getX())});let s=0;i.forEach(a=>{s=0,a.getModifiers(z.BEGIN,r).forEach(h=>{o-h.getX()>s&&(s=o-h.getX())});let l=a.getModifiers(z.BEGIN),u=!1;l.forEach(h=>{h.getCategory()===r&&(u=!0),u&&s>0&&h.setX(h.getX()+s)}),a.setNoteStartX(a.getNoteStartX()+s)})};i.forEach(r=>{r.formatted||r.format()}),e("Clef"),e("KeySignature"),e("TimeSignature");let n=0;i.forEach(r=>{r.getNoteStartX()>n&&(n=r.getNoteStartX())}),i.forEach(r=>{r.setNoteStartX(n)}),n=0,i.forEach(r=>{r.getModifiers(z.BEGIN,"Barline").forEach(s=>{s.getType()===ct.REPEAT_BEGIN&&s.getX()>n&&(n=s.getX())})}),i.forEach(r=>{r.getModifiers(z.BEGIN,"Barline").forEach(s=>{s.getType()===ct.REPEAT_BEGIN&&s.setX(n)})})}};function pm(t,i,e,n,r){if(i!==yt.type.BOLD_DOUBLE_LEFT&&i!==yt.type.BOLD_DOUBLE_RIGHT)throw new S("InvalidConnector","A REPEAT_BEGIN or REPEAT_END type must be provided.");let o=3,s=3.5,a=2;i===yt.type.BOLD_DOUBLE_RIGHT&&(o=-5,s=3),t.fillRect(e+o,n,1,r-n),t.fillRect(e-a,n,s,r-n)}var yt=class t extends L{static get CATEGORY(){return"StaveConnector"}constructor(i,e){super(),this.thickness=T.STAVE_LINE_THICKNESS,this.topStave=i,this.bottomStave=e,this.type=t.type.DOUBLE,this.xShift=0,this.texts=[]}setType(i){let e=typeof i=="string"?t.typeString[i]:i;return Object.values(t.type).includes(e)&&(this.type=e),this}getType(){return this.type}setText(i,e={}){var n,r;let o=new L("StaveConnector.text");return o.setText(i),o.setXShift((n=e.shiftX)!==null&&n!==void 0?n:0),o.setYShift((r=e.shiftY)!==null&&r!==void 0?r:0),this.texts.push(o),this}draw(){let i=this.checkContext();this.setRendered();let e=this.topStave.getYForLine(0),n=this.bottomStave.getYForLine(this.bottomStave.getNumLines()-1)+this.thickness,r=3,o=this.topStave.getX();(this.type===t.type.SINGLE_RIGHT||this.type===t.type.BOLD_DOUBLE_RIGHT||this.type===t.type.THIN_DOUBLE)&&(o=this.topStave.getX()+this.topStave.getWidth());let a=n-e,c=new L;switch(this.type){case t.type.SINGLE:r=1;break;case t.type.SINGLE_LEFT:r=1;break;case t.type.SINGLE_RIGHT:r=1;break;case t.type.DOUBLE:o-=5,e-=this.thickness,a+=.5;break;case t.type.BRACE:{r=12;let l=this.topStave.getX()-2+this.xShift,u=e,h=l,f=n,d=l-r,p=u+a/2,g=d-.9*r,b=u+.2*a,E=l+1.1*r,v=p-.135*a,w=E,C=p+.135*a,D=g,x=f-.2*a,k=d-r,U=x,X=l+.4*r,nt=p+.135*a,et=X,St=p-.135*a,mt=k,bt=b;i.beginPath(),i.moveTo(l,u),i.bezierCurveTo(g,b,E,v,d,p),i.bezierCurveTo(w,C,D,x,h,f),i.bezierCurveTo(k,U,X,nt,d,p),i.bezierCurveTo(et,St,mt,bt,l,u),i.fill(),i.stroke();break}case t.type.BRACKET:e-=6,n+=6,a=n-e,c.setText(m.bracketTop),c.renderText(i,o-5,e),c.setText(m.bracketBottom),c.renderText(i,o-5,n),o-=5;break;case t.type.BOLD_DOUBLE_LEFT:pm(i,this.type,o+this.xShift,e,n-this.thickness);break;case t.type.BOLD_DOUBLE_RIGHT:pm(i,this.type,o,e,n-this.thickness);break;case t.type.THIN_DOUBLE:r=1,a-=this.thickness;break;case t.type.NONE:break;default:throw new S("InvalidType",`The provided StaveConnector.type (${this.type}) is invalid.`)}this.type!==t.type.BRACE&&this.type!==t.type.BOLD_DOUBLE_LEFT&&this.type!==t.type.BOLD_DOUBLE_RIGHT&&this.type!==t.type.NONE&&i.fillRect(o,e,r,a),this.type===t.type.THIN_DOUBLE&&i.fillRect(o-3,e,r,a);for(let l=0;l<this.texts.length;l++){let u=this.texts[l],h=this.topStave.getX()-u.getWidth()-24,f=(this.topStave.getYForLine(0)+this.bottomStave.getBottomLineY())/2;u.renderText(i,h,f+4)}}};yt.type={SINGLE_RIGHT:0,SINGLE_LEFT:1,SINGLE:1,DOUBLE:2,BRACE:3,BRACKET:4,BOLD_DOUBLE_LEFT:5,BOLD_DOUBLE_RIGHT:6,THIN_DOUBLE:7,NONE:8};yt.typeString={singleRight:yt.type.SINGLE_RIGHT,singleLeft:yt.type.SINGLE_LEFT,single:yt.type.SINGLE,double:yt.type.DOUBLE,brace:yt.type.BRACE,bracket:yt.type.BRACKET,boldDoubleLeft:yt.type.BOLD_DOUBLE_LEFT,boldDoubleRight:yt.type.BOLD_DOUBLE_RIGHT,thinDouble:yt.type.THIN_DOUBLE,none:yt.type.NONE};function w1(t,i,e){if(t.length===0)return{map:{},array:[],list:[],resolutionMultiplier:0};let n={},r=[],o=[],s=we.getResolutionMultiplier(t);return t.forEach((a,c)=>{let l=new rt(0,s);a.getTickables().forEach(u=>{let h=l.numerator;if(!n[h]){let f=i({tickID:h});o.push(f),n[h]=f,r.push(h)}e(u,n[h],c),l.add(u.getTicks())})}),{map:n,array:o,list:r.sort((a,c)=>a-c),resolutionMultiplier:s}}function T1(...t){we.DEBUG&&J("VexFlow.Formatter",t)}function gm(t,i,e,n){let r=i;for(let o=e+1;o<t.length;o++){let s=t[o];if(La(s)&&!s.isRest()&&!s.shouldIgnoreTicks()){r=s.getLineForRest();break}}if(n&&i!==r){let o=Math.max(i,r),s=Math.min(i,r);r=is(o,s)}return r}var we=(()=>{class t{static SimpleFormat(e,n=0,{paddingBetween:r=10}={}){e.reduce((o,s)=>{s.addToModifierContext(new gn);let a=new ui().addTickable(s).preFormat(),c=a.getMetrics();return a.setX(o+c.totalLeftPx),o+a.getWidth()+c.totalRightPx+r},n)}static plotDebugging(e,n,r,o,s,a){var c,l;a=Object.assign({stavePadding:O.get("Stave.padding")},a);let u=r+a.stavePadding,h=n.contextGaps;function f(d,p,g){e.beginPath(),e.setStrokeStyle(g),e.setFillStyle(g),e.setLineWidth(1),e.fillRect(d,o,Math.max(p-d,0),s-o)}e.save(),e.setFont(O.get("fontFamily"),8),h.gaps.forEach(d=>{f(u+d.x1,u+d.x2,"rgba(100,200,100,0.4)"),e.setFillStyle("green"),e.fillText(Math.round(d.x2-d.x1).toString(),u+d.x1,s+12)}),e.setFillStyle("red"),e.fillText(`Loss: ${((c=n.totalCost)!==null&&c!==void 0?c:0).toFixed(2)} Shift: ${((l=n.totalShift)!==null&&l!==void 0?l:0).toFixed(2)} Gap: ${h.total.toFixed(2)}`,u-20,s+27),e.restore()}static FormatAndDraw(e,n,r,o){let s={autoBeam:!1,alignRests:!1};typeof o=="object"?s=Object.assign(Object.assign({},s),o):typeof o=="boolean"&&(s.autoBeam=o);let a=new ne(T.TIME4_4).setMode(ne.Mode.SOFT).addTickables(r),c=s.autoBeam?ci.applyAndGetBeams(a):[];return new t().joinVoices([a]).formatToStave([a],n,{alignRests:s.alignRests,stave:n}),a.setContext(e).setStave(n).drawWithStyle(),c.forEach(l=>l.setContext(e).drawWithStyle()),a.getBoundingBox()}static FormatAndDrawTab(e,n,r,o,s,a,c){let l={autoBeam:a,alignRests:!1};typeof c=="object"?l=Object.assign(Object.assign({},l),c):typeof c=="boolean"&&(l.autoBeam=c);let u=new ne(T.TIME4_4).setMode(ne.Mode.SOFT).addTickables(s),h=new ne(T.TIME4_4).setMode(ne.Mode.SOFT).addTickables(o),f=l.autoBeam?ci.applyAndGetBeams(u):[];new t().joinVoices([u]).joinVoices([h]).formatToStave([u,h],r,{alignRests:l.alignRests}),u.draw(e,r),h.draw(e,n),f.forEach(d=>d.setContext(e).drawWithStyle()),new yt(r,n).setContext(e).drawWithStyle()}static AlignRestsToNotes(e,n,r){e.forEach((o,s)=>{if(ee(o)&&o.isRest()){if(o.getTuplet()&&!r||o.getLineForRest()!==3)return;if(n||o.getBeam()){let c=o.getKeyProps()[0];if(s===0)c.line=gm(e,c.line,s,!1);else if(s>0&&s<e.length){let l=e[s-1];if(ee(l))if(l.isRest())c.line=l.getKeyProps()[0].line;else{let u=l.getLineForRest();c.line=gm(e,u,s,!0)}}o.setKeyLine(0,c.line)}}})}constructor(e){this.formatterOptions=Object.assign({globalSoftmax:!1,softmaxFactor:T.SOFTMAX_FACTOR,maxIterations:5},e),this.justifyWidth=0,this.totalCost=0,this.totalShift=0,this.durationStats={},this.minTotalWidth=0,this.hasMinTotalWidth=!1,this.tickContexts={map:{},array:[],list:[],resolutionMultiplier:0},this.modifierContexts=[],this.contextGaps={total:0,gaps:[]},this.voices=[],this.lossHistory=[]}alignRests(e,n){if(!e||!e.length)throw new S("BadArgument","No voices to format rests");e.forEach(r=>t.AlignRestsToNotes(r.getTickables(),n))}preCalculateMinTotalWidth(e){let n=O.get("Stave.unalignedNotePadding"),r=0,o=0,s=0,a=[],c=[];if(this.hasMinTotalWidth)return this.minTotalWidth;if(!e)throw new S("BadArgument","'voices' required to run preCalculateMinTotalWidth");this.createTickContexts(e);let{list:l,map:u}=this.tickContexts;this.minTotalWidth=0,l.forEach(w=>{let C=u[w];C.preFormat(),C.getTickables().length<e.length&&(r+=1),C.getTickables().forEach(x=>{o+=x.getMetrics().width,s+=x.getTicks().value(),a.push(x.getMetrics().width),c.push(x.getTicks().value())});let D=C.getWidth();this.minTotalWidth+=D}),this.hasMinTotalWidth=!0;let h=o>0?o/a.length:1/a.length,f=on(a.map(w=>Math.pow(w-h,2))),d=Math.pow(f/a.length,.5)/h,p=s/c.length,g=on(c.map(w=>Math.pow(w-p,2))),b=Math.pow(g/c.length,.5)/p,E=Math.max(b,d)*l.length*n,v=n*r;return this.minTotalWidth+Math.max(v,E)}getMinTotalWidth(){if(!this.hasMinTotalWidth)throw new S("NoMinTotalWidth","Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'");return this.minTotalWidth}static getResolutionMultiplier(e){if(!e||!e.length)throw new S("BadArgument","No voices to format");let n=e[0].getTotalTicks();return e.reduce((o,s)=>{if(!s.getTotalTicks().equals(n))throw new S("TickMismatch","Voices should have same total note duration in ticks.");if(s.getMode()===ne.Mode.STRICT&&!s.isComplete())throw new S("IncompleteVoice","Voice does not have enough notes.");return Math.max(o,rt.LCM(o,s.getResolutionMultiplier()))},1)}createModifierContexts(e){if(e.length===0)return;let n=t.getResolutionMultiplier(e),r=new Map,o=[];e.forEach(s=>{let a=new rt(0,n);s.getTickables().forEach(c=>{let l=a.numerator,u=r.get(c.getStave());if(u||(r.set(c.getStave(),{}),u=r.get(c.getStave())),!(u&&u[l])){let h=new gn;o.push(h),u[l]=h}c.addToModifierContext(u[l]),a.add(c.getTicks())})}),this.modifierContexts.push({map:r,array:o,resolutionMultiplier:n})}createTickContexts(e){let r=w1(e,s=>new ui(s),(s,a,c)=>a.addTickable(s,c));this.tickContexts=r;let o=this.tickContexts.array;return o.forEach(s=>{s.tContexts=o}),r}getTickContexts(){return this.tickContexts}preFormat(e=0,n,r,o){let s=this.tickContexts;if(!s)throw new S("NoTickContexts","preFormat requires TickContexts");let{list:a,map:c}=s;this.lossHistory=[],r&&o&&r.forEach(Mt=>Mt.setStave(o).preFormat());let l=0,u=0;this.minTotalWidth=0;let h=0;a.forEach(Mt=>{let Vt=c[Mt];Vt.preFormat();let Ht=Vt.getWidth();this.minTotalWidth+=Ht;let jt=Vt.getMaxTicks().value();h+=jt;let be=Vt.getMetrics();l=l+u+be.totalLeftPx,Vt.setX(l),u=Ht-be.totalLeftPx});let{globalSoftmax:f,softmaxFactor:d,maxIterations:p}=this.formatterOptions,g=Mt=>Math.pow(d,c[Mt].getMaxTicks().value()/h),b=on(a.map(g));if(this.minTotalWidth=l+u,this.hasMinTotalWidth=!0,e<=0)return this.evaluate();let E=c[a[0]],v=c[a[a.length-1]];function w(Mt){return a.map((Ht,jt)=>{let be=c[Ht],De=be.getTickablesByVoice(),Qt;if(jt>0){let Qe=c[a[jt-1]];for(let ke=jt-1;ke>=0;ke--){let Ai=c[a[ke]].getTickablesByVoice(),Kr=[];if(Object.keys(De).forEach(Ge=>{Ai[Ge]&&Kr.push(Ge)}),Kr.length>0){let Ge=0,En=1/0,Qn=0;return Kr.forEach(Li=>{let fs=Ai[Li].getTicks().value();fs>Ge&&(Qt=Ai[Li],Ge=fs);let Kn=De[Li],ms=Kn.getX()-(Kn.getMetrics().modLeftPx+Kn.getMetrics().leftDisplacedHeadPx),Gr=Ai[Li].getMetrics(),lc=Ai[Li].getX()+Gr.notePx+Gr.modRightPx+Gr.rightDisplacedHeadPx;En=Math.min(En,ms-lc)}),En=Math.min(En,be.getX()-(Qe.getX()+Mt*.05)),f?Qn=Math.pow(d,Ge/h)/b*Mt:typeof Qt<"u"&&(Qn=Qt.getVoice().softmax(Ge)*Mt),{expectedDistance:Qn,maxNegativeShiftPx:En,fromTickable:Qt}}}}return{expectedDistance:0,fromTickablePx:0,maxNegativeShiftPx:0}})}function C(Mt){let Vt=D/2,Ht=0;return a.forEach((jt,be)=>{let De=c[jt];if(be>0){let Qt=De.getX(),Qe=Mt[be],ke=$(Qe.fromTickable).getX()+Qe.expectedDistance-(Qt+Ht),Ke=0;ke>0?Ht+=ke:ke<0&&(Ke=Math.min(Qe.maxNegativeShiftPx,Math.abs(ke)),Ht+=-Ke),De.setX(Qt+Ht)}De.getCenterAlignedTickables().forEach(Qt=>{Qt.setCenterXShift(Vt-De.getX())})}),v.getX()-E.getX()}let D=e-v.getMetrics().notePx-v.getMetrics().totalRightPx-E.getMetrics().totalLeftPx,x=O.get("Stave.endPaddingMin"),k=O.get("Stave.endPaddingMax"),U=O.get("Stave.padding"),X=D,nt=w(X),et=C(nt);if(a.length===1)return 0;let mt=((Mt,Vt)=>{let Ht=Mt/2;if(Vt.length>1)for(let jt=1;jt<Vt.length;++jt)Ht=Math.min(Vt[jt].expectedDistance/2,Ht);return Ht})(X,nt),bt=Mt=>{let Vt=0,Ht=v&&v.getMaxTickable();if(Ht){let jt=Ht.getVoice();if(jt.getTicksUsed().value()>jt.getTotalTicks().value())return k*2<mt?mt:k;let be=Ht.getWidth();Vt=jt.softmax(v.getMaxTicks().value())*Mt-(be+U)}return k*2<Vt?Vt:k},Ot=bt(X),Tt=Ot-(k-x),Yt=D-Tt,Je=p;for(;et>Yt&&Je>0||et+Ot<Yt&&Je>1;)X-=et-Yt,Ot=bt(X),Tt=Ot-(k-x),et=C(w(X)),Je--;return this.justifyWidth=e,this.evaluate()}evaluate(){let e=this.tickContexts,n=this.justifyWidth;this.contextGaps={total:0,gaps:[]},e.list.forEach((a,c)=>{if(c===0)return;let l=e.list[c-1],u=e.map[l],h=e.map[a],f=u.getMetrics(),d=h.getMetrics(),p=u.getX()+f.notePx+f.totalRightPx,g=h.getX()-d.totalLeftPx,b=g-p;this.contextGaps.total+=b,this.contextGaps.gaps.push({x1:p,x2:g}),h.getFormatterMetrics().freedom.left=b,u.getFormatterMetrics().freedom.right=b}),this.durationStats={};let r=this.durationStats;function o(a,c){let l=r[a];l===void 0?r[a]={mean:c,count:1,total:c}:(l.count+=1,l.total+=c,l.mean=l.total/l.count)}this.voices.forEach(a=>{a.getTickables().forEach((c,l,u)=>{let h=c.getTicks().clone().simplify().toString(),f=c.getMetrics(),d=c.getFormatterMetrics(),p=c.getX()+f.notePx+f.modRightPx+f.rightDisplacedHeadPx,g=0;if(l<u.length-1){let b=u[l+1],E=b.getMetrics();g=b.getX()-E.modLeftPx-E.leftDisplacedHeadPx-p,d.space.used=b.getX()-c.getX(),b.getFormatterMetrics().freedom.left=g}else g=n-p,d.space.used=n-c.getX();d.freedom.right=g,o(h,d.space.used)})});let s=0;return this.voices.forEach(a=>{a.getTickables().forEach(c=>{let l=c.getTicks().clone().simplify().toString(),u=c.getFormatterMetrics();u.space.mean=r[l].mean,u.duration=l,u.iterations+=1,u.space.deviation=u.space.used-u.space.mean,s+=Math.pow(u.space.deviation,2)})}),this.totalCost=Math.sqrt(s),this.lossHistory.push(this.totalCost),this.totalCost}tune(e){var n;let r=this.tickContexts;if(!r)return 0;let o=(n=e?.alpha)!==null&&n!==void 0?n:.5,s=0;return this.totalShift=0,r.list.forEach((a,c,l)=>{let u=r.map[a],h=c>0?r.map[l[c-1]]:void 0,f=c<l.length-1?r.map[l[c+1]]:void 0;u.move(s,h,f);let d=-u.getDeviationCost();d>0?s=-Math.min(u.getFormatterMetrics().freedom.right,Math.abs(d)):d<0&&(f?s=Math.min(f.getFormatterMetrics().freedom.right,Math.abs(d)):s=0),s*=o,this.totalShift+=s}),this.evaluate()}postFormat(){return this.modifierContexts.forEach(e=>{e.array.forEach(n=>n.postFormat())}),this.tickContexts.list.forEach(e=>{this.tickContexts.map[e].postFormat()}),this}joinVoices(e){return this.createModifierContexts(e),this.hasMinTotalWidth=!1,this}format(e,n,r){let o=Object.assign({alignRests:!1},r);this.voices=e;let s=this.formatterOptions.softmaxFactor;return s&&this.voices.forEach(a=>a.setSoftmaxFactor(s)),this.alignRests(e,o.alignRests),this.createTickContexts(e),this.preFormat(n,o.context,e,o.stave),o.stave&&this.postFormat(),this}formatToStave(e,n,r){let o=Object.assign({context:n.getContext()},r),s=n.getNoteEndX()-n.getNoteStartX()-ge.defaultPadding;return T1("Formatting voices to width: ",s),this.format(e,s,o)}getTickContext(e){var n;return(n=this.tickContexts)===null||n===void 0?void 0:n.map[e]}}return t.DEBUG=!1,t})();var bm="Ghost note must have valid initialization data to identify duration.",jr=class extends dn{static get CATEGORY(){return"GhostNote"}constructor(i){if(!i)throw new S("BadArguments",bm);let e;if(typeof i=="string")e={duration:i};else if(typeof i=="object")e=i;else throw new S("BadArguments",bm);super(e),this.setWidth(0)}isRest(){return!0}setStave(i){return super.setStave(i),this}addToModifierContext(i){return this}preFormat(){return this.preFormatted=!0,this}draw(){this.setRendered();for(let i=0;i<this.modifiers.length;++i){let e=this.modifiers[i];im(e)&&(e.setContext(this.getContext()),e.drawWithStyle())}}};var bn=class extends pt{static get CATEGORY(){return"GlyphNote"}constructor(i,e,n){super(e),this.options=Object.assign({ignoreTicks:!1,line:2},n),this.ignoreTicks=this.options.ignoreTicks,this.setGlyph(i)}setGlyph(i){return this.text=i,this}preFormat(){return!this.preFormatted&&this.modifierContext&&this.modifierContext.preFormat(),this.preFormatted=!0,this}drawModifiers(){let i=this.checkContext();for(let e=0;e<this.modifiers.length;e++){let n=this.modifiers[e];n.setContext(i),n.drawWithStyle()}}draw(){let i=this.checkStave(),e=i.checkContext();this.setRendered(),e.openGroup("glyphNote",this.getAttribute("id")),this.x=this.isCenterAligned()?this.getAbsoluteX()-this.getWidth()/2:this.getAbsoluteX(),this.y=i.getYForLine(this.options.line),this.renderText(e,0,0),this.drawModifiers(),e.closeGroup()}};var Ur=class t extends Le{static get CATEGORY(){return"GraceNote"}static get LEDGER_LINE_OFFSET(){return 2}constructor(i){super(Object.assign({strokePx:t.LEDGER_LINE_OFFSET},i)),this.slash=i.slash||!1,this.slur=!0,this.buildNoteHeads(),this.width=3}getStemExtension(){if(this.stemExtensionOverride)return this.stemExtensionOverride;let i=super.getStemExtension();return i=y.HEIGHT*this.getFontScale()-y.HEIGHT+i,i}draw(){super.draw(),this.setRendered();let i=this.stem;if(this.slash&&i){let e=this.getFontScale(),n,r=this.beam;if(r)r.postFormatted||r.postFormat(),n=this.calcBeamedNotesSlashBBox(8*e,8*e,{stem:6*e,beam:5*e});else{let s=this.getStemDirection(),a=this.getNoteHeadBounds(),c=this.noteHeads[0].getWidth(),l=s===y.DOWN?this.getAbsoluteX():this.getAbsoluteX()+c,u=T.STEM_HEIGHT*e/2,h=s===y.DOWN?a.yBottom+u:a.yTop-u;s===y.DOWN?n={x1:l-c,y1:h-c,x2:l+c,y2:h+c}:n={x1:l-c,y1:h+c,x2:l+c,y2:h-c}}let o=this.checkContext();o.setLineWidth(1*e),o.beginPath(),o.moveTo(n.x1,n.y1),o.lineTo(n.x2,n.y2),o.closePath(),o.stroke()}}calcBeamedNotesSlashBBox(i,e,n){let r=this.beam;if(!r)throw new S("NoBeam","Can't calculate without a beam.");let o=r.slope,a=r.notes[r.notes.length-1]===this?-1:1,c=Math.atan(o*a),l={dx:Math.cos(c)*e,dy:Math.sin(c)*e};i*=this.getStemDirection();let u=Math.atan((l.dy-i)/l.dx),h=Math.cos(u)*n.stem*a,f=Math.sin(u)*n.stem,d=Math.cos(u)*n.beam*a,p=Math.sin(u)*n.beam,g=this.getStemX(),b=r.notes[0].getStemX(),E=r.getBeamYToDraw()+(g-b)*o;return{x1:g-h,y1:E+i-f,x2:g+l.dx*a+d,y2:E+l.dy+p}}};var Wr=class extends pt{static get CATEGORY(){return"KeySigNote"}constructor(i,e,n){super({duration:"b"}),this.keySignature=new mi(i,e,n),this.ignoreTicks=!0}addToModifierContext(i){return this}preFormat(){return this.preFormatted=!0,this.keySignature.setStave(this.checkStave()),this.setWidth(this.keySignature.getWidth()),this}draw(){let i=this.checkStave().checkContext();this.setRendered(),this.keySignature.setX(this.getAbsoluteX()),this.keySignature.setContext(i),this.keySignature.drawWithStyle()}};var zr=class extends L{static get CATEGORY(){return"MultiMeasureRest"}constructor(i,e){var n;super(),this.xs={left:NaN,right:NaN},this.hasPaddingLeft=!1,this.hasPaddingRight=!1,this.hasLineThickness=!1,this.hasSymbolSpacing=!1;let r=(n=e.numberGlyphPoint)!==null&&n!==void 0?n:O.get("MultiMeasureRest.fontSize");this.fontInfo.size=r,this.numberOfMeasures=i,this.text="";let o=`${this.numberOfMeasures}`;for(let s of o)this.text+=String.fromCodePoint(57472+Number(s));this.hasPaddingLeft=typeof e.paddingLeft=="number",this.hasPaddingRight=typeof e.paddingRight=="number",this.hasLineThickness=typeof e.lineThickness=="number",this.hasSymbolSpacing=typeof e.symbolSpacing=="number",this.renderOptions=Object.assign({useSymbols:!1,showNumber:!0,numberLine:-.5,numberGlyphPoint:r,line:2,spacingBetweenLinesPx:T.STAVE_LINE_DISTANCE,serifThickness:2,semibreveRestGlyphScale:O.get("fontSize"),paddingLeft:0,paddingRight:0,lineThickness:5,symbolSpacing:0},e)}getXs(){return this.xs}setStave(i){return this.stave=i,this}getStave(){return this.stave}checkStave(){return $(this.stave,"NoStave","No stave attached to instance.")}drawLine(i,e,n,r){let o=this.renderOptions,s=i.getYForLine(o.line),a=(r-n)*.1;n+=a,r-=a;let c="\uE4EF",l=new L;l.setText(c);let u=l.getWidth();if(!u)throw new S("Cannot drawLine if width is 0");for(let h=1;(h+2)*u+n<=r;h++)c+="\uE4F0";c+="\uE4F1",l.setText(c),l.renderText(e,n+(r-n)*.5-l.getWidth()*.5,s)}drawSymbols(i,e,n,r){let o=Math.floor(this.numberOfMeasures/4),s=this.numberOfMeasures%4,a=Math.floor(s/2),c=s%2,l=this.renderOptions,u=new L,h="";for(let v=0;v<o;++v)h+=m.restLonga+" ";for(let v=0;v<a;++v)h+=m.restDoubleWhole+" ";u.setText(h);let f=new L;h="";for(let v=0;v<c;++v)h+=m.restWhole+" ";f.setText(h);let d=u.getWidth()+f.getWidth(),p=n+(r-n)*.5-d*.5,g=l.line,b=i.getYForLine(g-1),E=i.getYForLine(g);u.renderText(e,p,E),p+=u.getWidth(),f.renderText(e,p,b),p+=f.getWidth()}draw(){let i=this.checkContext();this.setRendered();let e=this.checkStave(),n=e.getNoteStartX(),r=e.getNoteEndX(),o=e.getModifiers(z.BEGIN);o.length===1&&Ba(o[0])&&(n-=o[0].getWidth());let s=this.renderOptions;this.hasPaddingLeft&&(n=e.getX()+s.paddingLeft),this.hasPaddingRight&&(r=e.getX()+e.getWidth()-s.paddingRight),this.xs.left=n,this.xs.right=r,s.useSymbols?this.drawSymbols(e,i,n,r):this.drawLine(e,i,n,r),s.showNumber&&this.renderText(i,n+(r-n)*.5-this.width*.5,e.getYForLine(s.numberLine)-this.height*.5)}};function D1(...t){Te.DEBUG&&J("VexFlow.PedalMarking",t)}var Te=class t extends L{static get CATEGORY(){return"PedalMarking"}static createSustain(i){return new t(i)}static createSostenuto(i){let e=new t(i);return e.setType(t.type.MIXED),e.setCustomText("Sost. Ped."),e}static createUnaCorda(i){let e=new t(i);return e.setType(t.type.TEXT),e.setCustomText("una corda","tre corda"),e}constructor(i){super(),this.notes=i,this.type=t.type.TEXT,this.line=0,this.depressText=t.GLYPHS.pedalDepress,this.releaseText=t.GLYPHS.pedalRelease,this.renderOptions={bracketHeight:10,textMarginRight:6,bracketLineWidth:1,color:"black"}}setType(i){return i=typeof i=="string"?t.typeString[i]:i,i>=t.type.TEXT&&i<=t.type.MIXED&&(this.type=i),this}setCustomText(i,e){return this.depressText=i||"",this.releaseText=e||"",this.setFont(O.getFontInfo("PedalMarking.text")),this}setLine(i){return this.line=i,this}drawBracketed(){let i=this.checkContext(),e=!1,n,r,o=0;this.notes.forEach((s,a,c)=>{var l,u,h,f;e=!e;let d=s.getAbsoluteX(),p=s.checkStave().getYForBottomText(this.line+3);if(d<n)throw new S("InvalidConfiguration","The notes provided must be in order of ascending x positions");let g=c[a+1]===s,b=c[a-1]===s,E=0;if(e)E=b?5:0,this.type===t.type.MIXED&&!b?(o=i.measureText(this.depressText).width,i.fillText(this.depressText,d,p),E=o+this.renderOptions.textMarginRight):(i.beginPath(),i.moveTo(d,p-this.renderOptions.bracketHeight),i.lineTo(d+E,p),i.stroke(),i.closePath());else{let v=s.getVoice().getTickables().indexOf(s),w=s.getVoice().getTickables().length,C=v+1<w?s.getVoice().getTickables()[v+1].getAbsoluteX():((u=(l=s.getStave())===null||l===void 0?void 0:l.getX())!==null&&u!==void 0?u:0)+((f=(h=s.getStave())===null||h===void 0?void 0:h.getWidth())!==null&&f!==void 0?f:0);i.beginPath(),i.moveTo(n,r),i.lineTo(g?d-5:C-5,p),i.lineTo(g?d:C-5,p-this.renderOptions.bracketHeight),i.stroke(),i.closePath()}n=d+E,r=p})}drawText(){let i=this.checkContext(),e=!1,n=0;this.notes.forEach(r=>{var o,s,a,c;e=!e;let l=r.checkStave(),u=r.getAbsoluteX(),h=l.getYForBottomText(this.line+3);if(e)n=i.measureText(this.depressText).width,i.fillText(this.depressText,u,h);else{let f=r.getVoice().getTickables().indexOf(r),d=r.getVoice().getTickables().length,p=f+1<d?r.getVoice().getTickables()[f+1].getAbsoluteX():((s=(o=r.getStave())===null||o===void 0?void 0:o.getX())!==null&&s!==void 0?s:0)+((c=(a=r.getStave())===null||a===void 0?void 0:a.getWidth())!==null&&c!==void 0?c:0);n=i.measureText(this.releaseText).width,i.fillText(this.releaseText,p-n,h)}})}draw(){let i=this.checkContext();this.setRendered(),i.setStrokeStyle(this.renderOptions.color),i.setFillStyle(this.renderOptions.color),i.setFont(this.font),D1("Rendering Pedal Marking"),this.type===t.type.BRACKET||this.type===t.type.MIXED?(i.setLineWidth(this.renderOptions.bracketLineWidth),this.drawBracketed()):this.type===t.type.TEXT&&this.drawText()}};Te.DEBUG=!1;Te.GLYPHS={pedalDepress:m.keyboardPedalPed,pedalRelease:m.keyboardPedalUp};Te.type={TEXT:1,BRACKET:2,MIXED:3};Te.typeString={text:Te.type.TEXT,bracket:Te.type.BRACKET,mixed:Te.type.MIXED};var x1={1:m.repeat1Bar,2:m.repeat2Bars,4:m.repeat4Bars,slash:m.repeatBarSlash},Xr=class extends bn{static get CATEGORY(){return"RepeatNote"}constructor(i,e,n){let r=x1[i]||"\uE500";super(r,Object.assign({duration:"q",alignCenter:i!=="slash"},e),n)}};function vm(t,i,e,n,r,o,s){t.beginPath(),t.moveTo(i,e),t.lineTo(n,r),t.lineTo(o,s),t.lineTo(i,e),t.closePath(),t.fill()}var Qa=(()=>{class t extends L{static get CATEGORY(){return"StaveLine"}constructor(e){super(),this.setNotes(e),this.text="",this.renderOptions={paddingLeft:4,paddingRight:3,lineWidth:1,lineDash:void 0,roundedEnd:!0,color:void 0,drawStartArrow:!1,drawEndArrow:!1,arrowheadLength:10,arrowheadAngle:Math.PI/8,textPositionVertical:t.TextVerticalPosition.TOP,textJustification:t.TextJustification.CENTER}}setText(e){return this.text=e,this}setNotes(e){if(!e.firstNote&&!e.lastNote)throw new S("BadArguments","Notes needs to have either firstNote or lastNote set.");if(e.firstIndexes||(e.firstIndexes=[0]),e.lastIndexes||(e.lastIndexes=[0]),e.firstIndexes.length!==e.lastIndexes.length)throw new S("BadArguments","Connected notes must have same number of indexes.");return this.notes=e,this.firstNote=e.firstNote,this.firstIndexes=e.firstIndexes,this.lastNote=e.lastNote,this.lastIndexes=e.lastIndexes,this}applyLineStyle(){let e=this.checkContext(),n=this.renderOptions;n.lineDash&&e.setLineDash(n.lineDash),n.lineWidth&&e.setLineWidth(n.lineWidth),n.roundedEnd?e.setLineCap("round"):e.setLineCap("square")}drawArrowLine(e,n,r){let o=this.renderOptions.drawStartArrow&&this.renderOptions.drawEndArrow,s=n.x,a=n.y,c=r.x,l=r.y,u=Math.sqrt((c-s)*(c-s)+(l-a)*(l-a)),h=(u-this.renderOptions.arrowheadLength/3)/u,f,d,p,g;this.renderOptions.drawEndArrow||o?(f=Math.round(s+(c-s)*h),d=Math.round(a+(l-a)*h)):(f=c,d=l),this.renderOptions.drawStartArrow||o?(p=s+(c-s)*(1-h),g=a+(l-a)*(1-h)):(p=s,g=a),this.renderOptions.color&&(e.setStrokeStyle(this.renderOptions.color),e.setFillStyle(this.renderOptions.color)),e.beginPath(),e.moveTo(p,g),e.lineTo(f,d),e.stroke(),e.closePath();let b=Math.atan2(l-a,c-s),E=Math.abs(this.renderOptions.arrowheadLength/Math.cos(this.renderOptions.arrowheadAngle)),v,w,C,D,x,k;(this.renderOptions.drawEndArrow||o)&&(v=b+Math.PI+this.renderOptions.arrowheadAngle,C=c+Math.cos(v)*E,D=l+Math.sin(v)*E,w=b+Math.PI-this.renderOptions.arrowheadAngle,x=c+Math.cos(w)*E,k=l+Math.sin(w)*E,vm(e,C,D,c,l,x,k)),(this.renderOptions.drawStartArrow||o)&&(v=b+this.renderOptions.arrowheadAngle,C=s+Math.cos(v)*E,D=a+Math.sin(v)*E,w=b-this.renderOptions.arrowheadAngle,x=s+Math.cos(w)*E,k=a+Math.sin(w)*E,vm(e,C,D,s,a,x,k))}draw(){let e=this.checkContext();this.setRendered();let n=this.firstNote,r=this.lastNote,o=this.renderOptions;this.applyLineStyle();let s={x:0,y:0},a={x:0,y:0};this.firstIndexes.forEach((p,g)=>{let b=this.lastIndexes[g];s=n.getModifierStartXY(2,p),a=r.getModifierStartXY(1,b);let E=s.y>a.y;s.x+=n.getMetrics().modRightPx+o.paddingLeft,a.x-=r.getMetrics().modLeftPx+o.paddingRight;let v=n.getGlyphWidth();n.getKeyProps()[p].displaced&&n.getStemDirection()===1&&(s.x+=v+o.paddingLeft),r.getKeyProps()[b].displaced&&r.getStemDirection()===-1&&(a.x-=v+o.paddingRight),s.y+=E?-3:1,a.y+=E?2:0,this.drawArrowLine(e,s,a)});let c=this.width,l=o.textJustification,u=0;l===t.TextJustification.LEFT?u=s.x:l===t.TextJustification.CENTER?u=(a.x-s.x)/2+s.x-c/2:l===t.TextJustification.RIGHT&&(u=a.x-c);let h=0,f=o.textPositionVertical;f===t.TextVerticalPosition.TOP?h=n.checkStave().getYForTopText():f===t.TextVerticalPosition.BOTTOM&&(h=n.checkStave().getYForBottomText(T.TEXT_HEIGHT_OFFSET_HACK));let d=o.color;this.applyStyle(e,{fillStyle:d,strokeStyle:d}),this.renderText(e,u,h)}}return t.TextVerticalPosition={TOP:1,BOTTOM:2},t.TextJustification=Oe,t})();var Yr=class extends L{static get CATEGORY(){return"System"}constructor(i={}){super(),this.setOptions(i),this.partStaves=[],this.partStaveInfos=[],this.partVoices=[]}setOptions(i={}){if(!i.factory)throw new S("NoFactory","System.setOptions(options) requires a factory.");this.factory=i.factory,this.options=Object.assign(Object.assign({factory:this.factory,x:10,y:10,width:500,spaceBetweenStaves:12,autoWidth:!1,noJustification:!1,debugFormatter:!1,formatIterations:0,noPadding:!1},i),{details:Object.assign({alpha:.5},i.details),formatOptions:Object.assign({},i.formatOptions)}),this.options.noJustification===!1&&typeof i.width>"u"&&(this.options.autoWidth=!0)}getX(){return this.options.x}setX(i){return this.options.x=i,this.partStaves.forEach(e=>{e.setX(i)}),this}getY(){return this.options.y}setY(i){return this.options.y=i,this.partStaves.forEach(e=>{e.setY(i)}),this}getStaves(){return this.partStaves}getVoices(){return this.partVoices}setContext(i){return super.setContext(i),this.factory.setContext(i),this}addConnector(i="double"){return this.connector=this.factory.StaveConnector({topStave:this.partStaves[0],bottomStave:this.partStaves[this.partStaves.length-1],type:i}),this.connector}addStave(i){var e;let n=Object.assign({leftBar:!1},i.options),r=(e=i.stave)!==null&&e!==void 0?e:this.factory.Stave({x:this.options.x,y:this.options.y,width:this.options.width,options:n}),o=Object.assign(Object.assign({spaceAbove:0,spaceBelow:0,debugNoteMetrics:!1,noJustification:!1},i),{options:n}),s=this.getContext();return o.voices.forEach(a=>{a.setContext(s).setStave(r).getTickables().forEach(c=>c.setStave(r)),this.partVoices.push(a)}),this.partStaves.push(r),this.partStaveInfos.push(o),r}addVoices(i){let e=this.getContext();i.forEach(n=>{n.setContext(e),this.partVoices.push(n)})}format(){let i=this.options.details,e=0,n=new we(i);this.formatter=n;let r=this.options.y,o=0,s=[];this.partStaves.forEach((a,c)=>{r=r+a.space(this.partStaveInfos[c].spaceAbove),a.setY(r),r=r+a.space(this.partStaveInfos[c].spaceBelow),r=r+a.space(this.options.spaceBetweenStaves),this.partStaveInfos[c].debugNoteMetrics&&(s.push({y:r,stave:a}),r+=15),o=Math.max(o,a.getNoteStartX())}),this.partVoices.forEach(a=>{a.getTickables().forEach(c=>{let l=c.getStave();l&&c.setStave(l)})}),n.joinVoices(this.partVoices),this.partStaves.forEach(a=>a.setNoteStartX(o)),this.options.autoWidth&&this.partVoices.length>0?(e=n.preCalculateMinTotalWidth(this.partVoices),this.options.width=e+ge.rightPadding+(o-this.options.x),this.partStaves.forEach(a=>{a.setWidth(this.options.width)})):e=this.options.noPadding?this.options.width-(o-this.options.x):this.options.width-(o-this.options.x)-ge.defaultPadding,this.partVoices.length>0&&n.format(this.partVoices,this.options.noJustification?0:e,this.options.formatOptions),n.postFormat();for(let a=0;a<this.options.formatIterations;a++)n.tune(i);this.startX=o,this.debugNoteMetricsYs=s,this.lastY=r,ge.formatBegModifiers(this.partStaves)}getBoundingBox(){var i;return new Ce(this.options.x,this.options.y,this.options.width,((i=this.lastY)!==null&&i!==void 0?i:0)-this.options.y)}draw(){let i=this.checkContext();if(!this.formatter||!this.startX||!this.lastY||!this.debugNoteMetricsYs)throw new S("NoFormatter","format() must be called before draw()");this.setRendered(),this.options.debugFormatter&&we.plotDebugging(i,this.formatter,this.startX,this.options.y,this.lastY),this.debugNoteMetricsYs.forEach(e=>{this.partVoices.forEach(n=>{n.getTickables().forEach(r=>{r.getStave()===e.stave&&pt.plotMetrics(i,r,e.y)})})})}};function A1(t,i){let e=[],n=[];for(let r=1;r<=t;r++)i.indexOf(r)>-1?(e.push(n),n=[]):n.push(r);return n.length>0&&e.push(n),e}function N1(t,i,e,n){let r=n!==1,o=n!==-1,s=e.getSpacingBetweenLines(),a=e.getNumLines(),c=[];return i.forEach(l=>{let u=l.indexOf(a)>-1,h=l.indexOf(1)>-1;if(r&&h||o&&u)return;l.length===1&&l.push(l[0]);let f=[];l.forEach((d,p,g)=>{let b=d===1,E=d===a,v=e.getYForLine(d-1);p===0&&!b?v-=s/2-1:p===g.length-1&&!E&&(v+=s/2-1),f.push(v),n===1&&b?f.push(t-2):n===-1&&E&&f.push(t+2)}),c.push(f.sort((d,p)=>d-p))}),c}var vn=class t extends dn{static get CATEGORY(){return"TabNote"}constructor(i,e=!1){super(i),this.fretElement=[],this.greatestString=()=>this.positions.map(n=>n.str).reduce((n,r)=>n>r?n:r),this.leastString=()=>this.positions.map(n=>n.str).reduce((n,r)=>n<r?n:r),this.ghost=!1,this.positions=i.positions||[],this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{drawStem:e,drawDots:e,drawStemThroughStave:!1,yShift:0}),this.glyphProps=pt.getGlyphProps(this.duration,this.noteType),$(this.glyphProps,"BadArguments",`No glyph found for duration '${this.duration}' and type '${this.noteType}'`),this.buildStem(),i.stemDirection?this.setStemDirection(i.stemDirection):this.setStemDirection(y.UP),this.ghost=!1,this.updateWidth()}reset(){return super.reset(),this.stave&&this.setStave(this.stave),this}setGhost(i){return this.ghost=i,this.updateWidth(),this}hasStem(){return!!this.renderOptions.drawStem}getStemExtension(){return this.stemExtensionOverride!==void 0?this.stemExtensionOverride:this.flag.getHeight()>y.HEIGHT?this.flag.getHeight()-y.HEIGHT:0}static tabToElement(i){let e;return i.toUpperCase()==="X"?(e=new L("TabNote"),e.setText(m.accidentalDoubleSharp)):(e=new L("TabNote.text"),e.setText(i),e.setYShift(e.getHeight()/2)),e}updateWidth(){this.fretElement=[],this.width=0;for(let i=0;i<this.positions.length;++i){let e=this.positions[i].fret;this.ghost&&(e="("+e+")");let n=t.tabToElement(e.toString());this.fretElement.push(n),this.width=Math.max(n.getWidth(),this.width)}}setStave(i){super.setStave(i);let e=i.getContext();this.setContext(e);let n=this.positions.map(({str:r})=>i.getYForLine(Number(r)-1));return this.setYs(n),this.stem&&this.stem.setYBounds(this.getStemY(),this.getStemY()),this}getPositions(){return this.positions}getModifierStartXY(i,e){if(!this.preFormatted)throw new S("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(this.ys.length===0)throw new S("NoYValues","No Y-Values calculated for this note.");let n=0;return i===B.Position.LEFT?n=-1*2:i===B.Position.RIGHT?n=this.width+2:(i===B.Position.BELOW||i===B.Position.ABOVE)&&(n=this.width/2),{x:this.getAbsoluteX()+n,y:this.ys[e]}}getLineForRest(){return Number(this.positions[0].str)}preFormat(){this.preFormatted||(this.modifierContext&&this.modifierContext.preFormat(),this.preFormatted=!0)}getStemX(){return this.getCenterGlyphX()}getStemY(){let i=this.checkStave().getNumLines(),e=-.5,n=i-.5,r=y.UP===this.stemDirection?e:n;return this.checkStave().getYForLine(r)}getStemExtents(){return this.checkStem().getExtents()}drawFlag(){let{beam:i,glyphProps:e,renderOptions:{drawStem:n}}=this,r=this.checkContext(),o=i===void 0&&n;if(e.codeFlagUp&&o){let s=this.getStemX(),a=this.getStemDirection()===y.DOWN?this.getStemY()-this.checkStem().getHeight()-this.getStemExtension():this.getStemY()-this.checkStem().getHeight()+this.getStemExtension();this.flag.setContext(r).setX(s).setY(a).drawWithStyle()}}drawModifiers(){this.modifiers.forEach(i=>{nm(i)&&!this.renderOptions.drawDots||(i.setContext(this.getContext()),i.drawWithStyle())})}drawStemThrough(){let i=this.getStemX(),e=this.getStemY(),n=this.checkContext(),r=this.renderOptions.drawStem,o=this.renderOptions.drawStemThroughStave;if(r&&o){let s=this.checkStave().getNumLines(),a=this.positions.map(u=>Number(u.str)),c=A1(s,a),l=N1(e,c,this.checkStave(),this.getStemDirection());n.setLineWidth(y.WIDTH),l.forEach(u=>{u.length!==0&&(n.beginPath(),n.moveTo(i,u[0]),n.lineTo(i,u[u.length-1]),n.stroke(),n.closePath())})}}drawPositions(){let i=this.checkContext(),e=this.getAbsoluteX(),n=this.ys;for(let r=0;r<this.positions.length;++r){let o=n[r]+this.renderOptions.yShift,s=this.fretElement[r],a=e-s.getWidth()/2;i.clearRect(a-2,o-3,s.getWidth()+4,6),s.renderText(i,a,o)}}draw(){let i=this.checkContext();if(this.ys.length===0)throw new S("NoYValues","Can't draw note without Y values.");this.setRendered();let e=this.beam===void 0&&this.renderOptions.drawStem;if(i.openGroup("tabnote",this.getAttribute("id")),this.drawPositions(),this.drawStemThrough(),this.stem&&e){let n=this.getStemX();this.stem.setNoteHeadXBounds(n,n),this.stem.setContext(i).drawWithStyle()}this.drawFlag(),this.drawModifiers(),i.closeGroup()}};var qr=class extends ge{static get CATEGORY(){return"TabStave"}constructor(i,e,n,r){let o=Object.assign({spacingBetweenLinesPx:13,numLines:6,topTextPosition:1},r);super(i,e,n,o)}getYForGlyphs(){return this.getYForLine(2.5)}addTabGlyph(){return this.addClef("tab"),this}};function M1(...t){ls.DEBUG&&J("VexFlow.TextBracket",t)}var gi=function(t){return t[t.TOP=1]="TOP",t[t.BOTTOM=-1]="BOTTOM",t}(gi||{}),ls=(()=>{class t extends L{static get CATEGORY(){return"TextBracket"}static get Position(){return gi}static get PositionString(){return{top:gi.TOP,bottom:gi.BOTTOM}}constructor({start:e,stop:n,text:r="",superscript:o="",position:s=gi.TOP}){super(),this.start=e,this.stop=n,this.textElement=new L("TextBracket"),this.textElement.setText(r),this.superscriptElement=new L("TextBracket"),this.superscriptElement.setText(o);let a=G.scaleSize(this.fontInfo.size,.714286);this.superscriptElement.setFontSize(a),this.position=typeof s=="string"?t.PositionString[s]:s,this.line=1,this.renderOptions={dashed:!0,dash:[5],color:"black",lineWidth:1,showBracket:!0,bracketHeight:8,underlineSuperscript:!0}}applyStyle(e){this.textElement.setFont(this.fontInfo);let{family:n,size:r,weight:o,style:s}=this.fontInfo,a=G.scaleSize(r,.714286);this.superscriptElement.setFont(n,a,o,s);let c=this.renderOptions;return e.setStrokeStyle(c.color),e.setFillStyle(c.color),e.setLineWidth(c.lineWidth),this}setDashed(e,n){return this.renderOptions.dashed=e,n&&(this.renderOptions.dash=n),this}setLine(e){return this.line=e,this}draw(){let e=this.checkContext();this.setRendered();let n=0;switch(this.position){case gi.TOP:n=this.start.checkStave().getYForTopText(this.line);break;case gi.BOTTOM:n=this.start.checkStave().getYForBottomText(this.line+T.TEXT_HEIGHT_OFFSET_HACK);break;default:throw new S("InvalidPosition",`The position ${this.position} is invalid.`)}let r={x:this.start.getAbsoluteX(),y:n},o={x:this.stop.getAbsoluteX(),y:n};M1("Rendering TextBracket: start:",r,"stop:",o,"y:",n);let s=this.renderOptions.bracketHeight*this.position;this.textElement.renderText(e,r.x,r.y);let a=this.textElement.getWidth(),c=this.textElement.getHeight(),l=r.y-c/2.5;this.superscriptElement.renderText(e,r.x+a+1,l);let u=this.superscriptElement.getWidth(),h=this.superscriptElement.getHeight(),f=r.x,d=l,p=o.x+this.stop.getGlyphWidth();this.position===gi.TOP?(f+=a+u+5,d-=h/2.7):this.position===gi.BOTTOM&&(d+=h/2.7,f+=a+2,this.renderOptions.underlineSuperscript||(f+=u)),this.renderOptions.dashed?(Nt.drawDashedLine(e,f,d,p,d,this.renderOptions.dash),this.renderOptions.showBracket&&Nt.drawDashedLine(e,p,d+1*this.position,p,d+s,this.renderOptions.dash)):(e.beginPath(),e.moveTo(f,d),e.lineTo(p,d),this.renderOptions.showBracket&&e.lineTo(p,d+s),e.stroke(),e.closePath())}}return t.DEBUG=!1,t})();function Em(...t){us.DEBUG&&J("VexFlow.TextDynamics",t)}var us=(()=>{class t extends pt{static get CATEGORY(){return"TextDynamics"}static get GLYPHS(){return{f:m.dynamicForte,p:m.dynamicPiano,m:m.dynamicMezzo,s:m.dynamicSforzando,z:m.dynamicZ,r:m.dynamicRinforzando}}constructor(e){var n,r;super(e),this.sequence=((n=e.text)!==null&&n!==void 0?n:"").toLowerCase(),this.line=(r=e.line)!==null&&r!==void 0?r:0,this.text="",Em("New Dynamics Text: ",this.sequence)}setLine(e){return this.line=e,this}preFormat(){return this.text="",this.sequence.split("").forEach(e=>{let n=t.GLYPHS[e];if(!n)throw new S("Invalid dynamics character: "+e);this.text+=n}),this.preFormatted=!0,this}draw(){this.setRendered();let e=this.getAbsoluteX(),n=this.checkStave().getYForLine(this.line+-3);Em("Rendering Dynamics: ",this.sequence),this.renderText(this.checkContext(),e,n)}}return t.DEBUG=!1,t})();var Zr=class extends pt{static get CATEGORY(){return"TimeSigNote"}constructor(i,e){super({duration:"b"}),this.timeSig=new pi(i,e),this.setWidth(this.timeSig.getWidth()),this.ignoreTicks=!0}addToModifierContext(i){return this}preFormat(){return this.preFormatted=!0,this}draw(){let i=this.checkStave(),e=this.checkContext();this.setRendered(),e.openGroup("timesignote",this.getAttribute("id")),this.timeSig.drawAt(e,i,this.getAbsoluteX()),e.closeGroup()}};var Jr=class t extends L{static get CATEGORY(){return"Tuplet"}static get LOCATION_TOP(){return 1}static get LOCATION_BOTTOM(){return-1}static get NESTING_OFFSET(){return 15}constructor(i,e={}){if(super(),!i||!i.length)throw new S("BadArguments","No notes provided for tuplet.");this.notes=i;let n=e.numNotes!==void 0?e.numNotes:i.length,r=e.notesOccupied||2,o=e.bracketed!==void 0?e.bracketed:i.some(u=>!u.hasBeam()),s=e.ratioed!==void 0?e.ratioed:Math.abs(r-n)>1,a=e.location||t.LOCATION_TOP,c=e.yOffset||O.get("Tuplet.yOffset"),l=e.textYOffset||O.get("Tuplet.textYOffset");this.options={bracketed:o,location:a,notesOccupied:r,numNotes:n,ratioed:s,yOffset:c,textYOffset:l},this.textElement=new L("Tuplet"),this.setTupletLocation(a||t.LOCATION_TOP),we.AlignRestsToNotes(i,!0,!0),this.resolveGlyphs(),this.attach()}attach(){for(let i=0;i<this.notes.length;i++)this.notes[i].setTuplet(this)}detach(){for(let i=0;i<this.notes.length;i++)this.notes[i].resetTuplet(this)}setBracketed(i){return this.options.bracketed=i,this}setRatioed(i){return this.options.ratioed=i,this}setTupletLocation(i){return i!==t.LOCATION_TOP&&i!==t.LOCATION_BOTTOM&&(console.warn(`Invalid tuplet location [${i}]. Using Tuplet.LOCATION_TOP.`),i=t.LOCATION_TOP),this.options.location=i,this}getNotes(){return this.notes}getNoteCount(){return this.options.numNotes}getNotesOccupied(){return this.options.notesOccupied}setNotesOccupied(i){this.detach(),this.options.notesOccupied=i,this.resolveGlyphs(),this.attach()}resolveGlyphs(){let i="",e="",n=this.options.numNotes;for(;n>=1;)i=String.fromCharCode(59520+n%10)+i,n=Math.floor(n/10);if(this.options.ratioed){for(n=this.options.notesOccupied;n>=1;)e=String.fromCharCode(59520+n%10)+e,n=Math.floor(n/10);e=m.tupletColon+e}this.textElement.setText(i+e)}getNestedTupletCount(){let{location:i}=this.options,e=this.notes[0],n=o(e,i),r=o(e,i);function o(s,a){return s.getTupletStack().filter(c=>c.options.location===a).length}return this.notes.forEach(s=>{let a=o(s,i);n=a>n?a:n,r=a<r?a:r}),n-r}getYPosition(){var i;let e=this.getNestedTupletCount()*t.NESTING_OFFSET*-this.options.location,n=(i=this.options.yOffset)!==null&&i!==void 0?i:0,r=this.notes[0],o;if(this.options.location===t.LOCATION_TOP){o=r.checkStave().getYForLine(0)-1.5*T.STAVE_LINE_DISTANCE;for(let s=0;s<this.notes.length;++s){let a=this.notes[s],c=0,l=a.getModifierContext();l&&(c=Math.max(c,l.getState().topTextLine));let u=a.getYForTopText(c)-2*T.STAVE_LINE_DISTANCE;if(a.hasStem()||a.isRest()){let h=a.getStemDirection()===y.UP?a.getStemExtents().topY-T.STAVE_LINE_DISTANCE:a.getStemExtents().baseY-2*T.STAVE_LINE_DISTANCE;o=Math.min(h,o),c>0&&(o=Math.min(u,o))}}}else{let s=4;this.notes.forEach(a=>{let c=a.getModifierContext();c&&(s=Math.max(s,c.getState().textLine+1))}),o=r.checkStave().getYForLine(s)+2*T.STAVE_LINE_DISTANCE;for(let a=0;a<this.notes.length;++a)if(this.notes[a].hasStem()||this.notes[a].isRest()){let c=this.notes[a].getStemDirection()===y.UP?this.notes[a].getStemExtents().baseY+2*T.STAVE_LINE_DISTANCE:this.notes[a].getStemExtents().topY+T.STAVE_LINE_DISTANCE;c>o&&(o=c)}}return o+e+n}draw(){let{location:i,bracketed:e,textYOffset:n}=this.options,r=this.checkContext(),o=0,s=0,a=this.notes[0],c=this.notes[this.notes.length-1];e?(o=a.getTieLeftX()-5,this.width=c.getTieRightX()-o+5):(o=a.getStemX(),this.width=c.getStemX()-o),s=this.getYPosition();let u=o+this.width/2-this.textElement.getWidth()/2;if(r.openGroup("tuplet",this.getAttribute("id")),e){let f=this.width/2-this.textElement.getWidth()/2-5;f>0&&(r.fillRect(o,s,f,1),r.fillRect(o+this.width/2+this.textElement.getWidth()/2+5,s,f,1),r.fillRect(o,s+(i===t.LOCATION_BOTTOM?1:0),1,i*10),r.fillRect(o+this.width,s+(i===t.LOCATION_BOTTOM?1:0),1,i*10))}this.textElement.renderText(r,u,s+this.textElement.getHeight()/2+(i===t.LOCATION_TOP?-1:1)*n);let h=this.getBoundingBox();r.pointerRect(h.getX(),h.getY(),h.getW(),h.getH()),r.closeGroup(),this.setRendered()}};function R1(...t){ds.DEBUG&&J("VexFlow.VibratoBracket",t)}var ds=(()=>{class t extends L{static get CATEGORY(){return"VibratoBracket"}constructor(e){super(),this.vibrato=new pn,e.start&&(this.start=e.start),e.stop&&(this.stop=e.stop),this.line=1}setLine(e){return this.line=e,this}setVibratoCode(e){return this.vibrato.setVibratoCode(e),this}draw(){let e=this.checkContext();this.setRendered();let n=this.start&&this.start.checkStave().getYForTopText(this.line)||this.stop&&this.stop.checkStave().getYForTopText(this.line)||0,r=this.start&&this.start.getAbsoluteX()||this.stop&&this.stop.checkStave().getTieStartX()||0,o=this.stop&&this.stop.getAbsoluteX()-this.stop.getWidth()-5||this.start&&this.start.checkStave().getTieEndX()-10||0;this.vibrato.setVibratoWidth(o-r),R1("Rendering VibratoBracket: startX:",r,"stopX:",o,"y:",n),this.vibrato.renderText(e,r,n)}}return t.DEBUG=!1,t})();function Sm(...t){hs.DEBUG&&J("VexFlow.Factory",t)}var hs=(()=>{class t{static newFromElementId(e,n=500,r=200){return new t({renderer:{elementId:e,width:n,height:r}})}constructor(e={}){Sm("New factory: ",e),this.options={stave:{space:10},renderer:{elementId:"",width:500,height:200,background:"#FFF"}},this.setOptions(e)}reset(){this.renderQ=[],this.systems=[],this.staves=[],this.voices=[],this.stave=void 0}setOptions(e){this.options=Object.assign(Object.assign({},this.options),e),this.initRenderer(),this.reset()}initRenderer(){let{elementId:e,width:n,height:r,background:o}=this.options.renderer;if(e===null)return;if(e==="")throw Sm(this),new S("renderer.elementId not set in FactoryOptions");let s=this.options.renderer.backend;if(s===void 0){let a=document.getElementById(e);Or(a)?s=Nt.Backends.CANVAS:s=Nt.Backends.SVG}this.context=Nt.buildContext(e,s,n,r,o)}getContext(){return this.context}setContext(e){return this.context=e,this}getStave(){return this.stave}getVoices(){return this.voices}Stave(e){let n=this.options.stave.space,r=Object.assign({x:0,y:0,width:this.options.renderer.width-n*1,options:{spacingBetweenLinesPx:n*1}},e),o=new ge(r.x,r.y,r.width,r.options);return this.staves.push(o),o.setContext(this.context),this.stave=o,o}TabStave(e){let n=this.options.stave.space,r=Object.assign({x:0,y:0,width:this.options.renderer.width-n*1,options:{spacingBetweenLinesPx:n*1.3}},e),o=new qr(r.x,r.y,r.width,r.options);return this.staves.push(o),o.setContext(this.context),this.stave=o,o}StaveNote(e){let n=new Le(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}GlyphNote(e,n,r){let o=new bn(e,n,r);return this.stave&&o.setStave(this.stave),o.setContext(this.context),this.renderQ.push(o),o}RepeatNote(e,n,r){let o=new Xr(e,n,r);return this.stave&&o.setStave(this.stave),o.setContext(this.context),this.renderQ.push(o),o}GhostNote(e){let n=new jr(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}TextNote(e){let n=new Lr(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}BarNote(e={}){let n=new os(e.type);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}ClefNote(e){let n=Object.assign({type:"treble",options:{size:"default",annotation:void 0}},e),r=new Ir(n.type,n.options.size,n.options.annotation);return this.stave&&r.setStave(this.stave),r.setContext(this.context),this.renderQ.push(r),r}TimeSigNote(e){let n=Object.assign({time:"4/4"},e),r=new Zr(n.time);return this.stave&&r.setStave(this.stave),r.setContext(this.context),this.renderQ.push(r),r}KeySigNote(e){let n=new Wr(e.key,e.cancelKey,e.alterKey);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}TabNote(e){let n=new vn(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),this.renderQ.push(n),n}GraceNote(e){let n=new Ur(e);return this.stave&&n.setStave(this.stave),n.setContext(this.context),n}GraceNoteGroup(e){let n=new qn(e.notes,e.slur);return n.setContext(this.context),n}Accidental(e){let n=new Yn(e.type);return n.setContext(this.context),n}Annotation(e){let n=Object.assign({text:"p",hJustify:fe.CENTER,vJustify:me.BOTTOM},e),r=new Me(n.text);return r.setJustification(n.hJustify),r.setVerticalJustification(n.vJustify),r.setFont(n.font),r.setContext(this.context),r}ChordSymbol(e){let n=Object.assign({vJustify:"top",hJustify:"center"},e),r=new pe;return r.setHorizontal(n.hJustify),r.setVertical(n.vJustify),typeof n.fontFamily=="string"&&typeof n.fontSize=="number"?typeof n.fontWeight=="string"?r.setFont(n.fontFamily,n.fontSize,n.fontWeight):r.setFont(n.fontFamily,n.fontSize,""):typeof n.fontSize=="number"&&r.setFontSize(n.fontSize),r.setContext(this.context),r}Articulation(e){var n;let r=new Pi((n=e?.type)!==null&&n!==void 0?n:"a.");return e?.position!==void 0&&r.setPosition(e.position),e?.betweenLines!==void 0&&r.setBetweenLines(e.betweenLines),r.setContext(this.context),r}Ornament(e,n){let r=Object.assign({type:e,accidental:""},n),o=new Zn(e);return n?.position!==void 0&&o.setPosition(n.position),r.upperAccidental&&o.setUpperAccidental(r.upperAccidental),r.lowerAccidental&&o.setLowerAccidental(r.lowerAccidental),typeof r.delayed<"u"&&o.setDelayed(r.delayed),o.setContext(this.context),o}TextDynamics(e){let n=Object.assign({text:"p",duration:"q",dots:0,line:0},e),r=new us({text:n.text,line:n.line,duration:n.duration,dots:n.dots});return this.stave&&r.setStave(this.stave),r.setContext(this.context),this.renderQ.push(r),r}Fingering(e){let n=Object.assign({number:"0",position:"left"},e),r=new Di(n.number);return r.setPosition(n.position),r.setContext(this.context),r}StringNumber(e,n=!0){let r=new mn(e.number);return r.setPosition(e.position),r.setContext(this.context),r.setDrawCircle(n),r}TickContext(){return new ui}ModifierContext(){return new gn}MultiMeasureRest(e){let n=$(e.numberOfMeasures,"NoNumberOfMeasures"),r=new zr(n,e);return r.setContext(this.context),this.renderQ.push(r),r}Voice(e){let n=Object.assign({time:"4/4"},e),r=new ne(n.time);return this.voices.push(r),r}StaveConnector(e){let n=new yt(e.topStave,e.bottomStave);return n.setType(e.type).setContext(this.context),this.renderQ.push(n),n}Formatter(e){return new we(e)}Tuplet(e){let n=Object.assign({notes:[],options:{}},e),r=new Jr(n.notes,n.options).setContext(this.context);return this.renderQ.push(r),r}Beam(e){var n,r,o,s,a;let c=new ci(e.notes,(n=e.options)===null||n===void 0?void 0:n.autoStem).setContext(this.context);return c.breakSecondaryAt((o=(r=e.options)===null||r===void 0?void 0:r.secondaryBeamBreaks)!==null&&o!==void 0?o:[]),!((s=e.options)===null||s===void 0)&&s.partialBeamDirections&&Object.entries((a=e.options)===null||a===void 0?void 0:a.partialBeamDirections).forEach(([l,u])=>{c.setPartialBeamSideAt(Number(l),u)}),this.renderQ.push(c),c}Curve(e){let n=new Pr(e.from,e.to,e.options).setContext(this.context);return this.renderQ.push(n),n}StaveTie(e){var n;let r=new xi({firstNote:e.from,lastNote:e.to,firstIndexes:e.firstIndexes,lastIndexes:e.lastIndexes},e.text);return!((n=e.options)===null||n===void 0)&&n.direction&&r.setDirection(e.options.direction),r.setContext(this.context),this.renderQ.push(r),r}StaveLine(e){var n,r;let o=new Qa({firstNote:e.from,lastNote:e.to,firstIndexes:e.firstIndexes,lastIndexes:e.lastIndexes});return!((n=e.options)===null||n===void 0)&&n.text&&o.setText(e.options.text),!((r=e.options)===null||r===void 0)&&r.font&&o.setFont(e.options.font),o.setContext(this.context),this.renderQ.push(o),o}VibratoBracket(e){let n=new ds({start:e.from,stop:e.to});return e.options.line&&n.setLine(e.options.line),e.options.code&&n.setVibratoCode(e.options.code),n.setContext(this.context),this.renderQ.push(n),n}TextBracket(e){let n=new ls({start:e.from,stop:e.to,text:e.text,superscript:e.options.superscript,position:e.options.position});return e.options.line&&n.setLine(e.options.line),e.options.font&&n.setFont(e.options.font),n.setContext(this.context),this.renderQ.push(n),n}System(e={}){e.factory=this;let n=new Yr(e).setContext(this.context);return this.systems.push(n),n}EasyScore(e={}){return e.factory=this,new as(e)}PedalMarking(e){let n=Object.assign({notes:[],options:{style:"mixed"}},e),r=new Te(n.notes);return r.setType(Te.typeString[n.options.style]),r.setContext(this.context),this.renderQ.push(r),r}NoteSubGroup(e){let n=Object.assign({notes:[]},e),r=new fn(n.notes);return r.setContext(this.context),r}draw(){let e=this.context;this.systems.forEach(n=>n.setContext(e).format()),this.staves.forEach(n=>n.setContext(e).drawWithStyle()),this.voices.forEach(n=>n.setContext(e).drawWithStyle()),this.renderQ.forEach(n=>{n.isRendered()||n.setContext(e).drawWithStyle()}),this.systems.forEach(n=>n.setContext(e).drawWithStyle()),this.reset()}}return t.DEBUG=!1,t})();var Ka=class extends vn{static get CATEGORY(){return"GraceTabNote"}constructor(i){super(i,!1),this.renderOptions=Object.assign(Object.assign({},this.renderOptions),{yShift:.3}),this.updateWidth()}};var Ga=class{constructor(i){this.music=new he,this.setKey(i)}setKey(i){return this.key=i,this.reset(),this}getKey(){return this.key}reset(){if(this.keyParts=this.music.getKeyParts(this.key),this.keyString=this.keyParts.root,this.keyParts.accidental&&(this.keyString+=this.keyParts.accidental),!he.scaleTypes[this.keyParts.type])throw new S("BadArguments",`Unsupported key type: ${this.key}`);this.scale=this.music.getScaleTones(this.music.getNoteValue(this.keyString),he.scaleTypes[this.keyParts.type]),this.scaleMap={},this.scaleMapByValue={},this.originalScaleMapByValue={};let e=he.rootIndexes[this.keyParts.root];for(let n=0;n<he.roots.length;++n){let r=(e+n)%he.roots.length,o=he.roots[r],s=this.music.getRelativeNoteName(o,this.scale[n]);this.scaleMap[o]=s,this.scaleMapByValue[this.scale[n]]=s,this.originalScaleMapByValue[this.scale[n]]=s}return this}getAccidental(i){let e=this.music.getKeyParts(i).root,n=this.music.getNoteParts(this.scaleMap[e]);return{note:this.scaleMap[e],accidental:n.accidental}}selectNote(i){i=i.toLowerCase();let e=this.music.getNoteParts(i),n=this.scaleMap[e.root],r=this.music.getNoteParts(n);if(n===i)return{note:n,accidental:e.accidental,change:!1};let o=this.scaleMapByValue[this.music.getNoteValue(i)];if(o!==void 0)return{note:o,accidental:this.music.getNoteParts(o).accidental,change:!1};let s=this.originalScaleMapByValue[this.music.getNoteValue(i)];return s!==void 0?(this.scaleMap[r.root]=s,delete this.scaleMapByValue[this.music.getNoteValue(n)],this.scaleMapByValue[this.music.getNoteValue(i)]=s,{note:s,accidental:this.music.getNoteParts(s).accidental,change:!0}):r.root===i?(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(r.root)]=r.root,this.scaleMap[r.root]=r.root,{note:r.root,accidental:void 0,change:!0}):(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(i)]=i,delete this.scaleMap[r.root],this.scaleMap[r.root]=i,{note:i,accidental:e.accidental,change:!0})}};var Cm=(()=>{class t extends L{static get CATEGORY(){return"StaveHairpin"}static FormatByTicksAndDraw(e,n,r,o,s,a){var c,l;let u=n.pixelsPerTick;if(u===null)throw new S("BadArguments","A valid Formatter must be provide to draw offsets by ticks.");let h=u*((c=a.leftShiftTicks)!==null&&c!==void 0?c:0),f=u*((l=a.rightShiftTicks)!==null&&l!==void 0?l:0),d={height:a.height,yShift:a.yShift,leftShiftPx:h,rightShiftPx:f,rightShiftTicks:0,leftShiftTicks:0};new t({firstNote:r.firstNote,lastNote:r.lastNote},o).setContext(e).setRenderOptions(d).setPosition(s).drawWithStyle()}constructor(e,n){super(),this.setNotes(e),this.hairpin=n,this.position=B.Position.BELOW,this.renderOptions={height:10,yShift:0,leftShiftPx:0,rightShiftPx:0,rightShiftTicks:0,leftShiftTicks:0}}setPosition(e){return(e===B.Position.ABOVE||e===B.Position.BELOW)&&(this.position=e),this}setRenderOptions(e){return this.renderOptions=e,this}setNotes(e){if(!e.firstNote&&!e.lastNote)throw new S("BadArguments","Hairpin needs to have either firstNote or lastNote set.");return this.notes=e,this.firstNote=e.firstNote,this.lastNote=e.lastNote,this}renderHairpin(e){let n=this.checkContext(),r=this.renderOptions.yShift+20,o=e.firstY;this.position===B.Position.ABOVE&&(r=-r+30,o=e.firstY-e.staffHeight);let s=this.renderOptions.leftShiftPx,a=this.renderOptions.rightShiftPx;switch(n.beginPath(),this.hairpin){case t.type.CRESC:n.moveTo(e.lastX+a,o+r),n.lineTo(e.firstX+s,o+this.renderOptions.height/2+r),n.lineTo(e.lastX+a,o+this.renderOptions.height+r);break;case t.type.DECRESC:n.moveTo(e.firstX+s,o+r),n.lineTo(e.lastX+a,o+this.renderOptions.height/2+r),n.lineTo(e.firstX+s,o+this.renderOptions.height+r);break;default:break}n.stroke(),n.closePath()}draw(){this.checkContext(),this.setRendered();let e=this.firstNote,n=this.lastNote;if(!e||!n)throw new S("NoNote","Notes required to draw");let r=e.getModifierStartXY(this.position,0),o=n.getModifierStartXY(this.position,0);this.renderHairpin({firstX:r.x,lastX:o.x,firstY:e.checkStave().getY()+e.checkStave().getHeight(),lastY:n.checkStave().getY()+n.checkStave().getHeight(),staffHeight:e.checkStave().getHeight()})}}return t.type={CRESC:1,DECRESC:2},t})();var _a=class t extends hn{static get CATEGORY(){return"TabSlide"}static get SLIDE_UP(){return 1}static get SLIDE_DOWN(){return-1}static createSlideUp(i){return new t(i,t.SLIDE_UP)}static createSlideDown(i){return new t(i,t.SLIDE_DOWN)}constructor(i,e){if(super(i,"sl."),!e){let n=i.firstNote.getPositions()[0].fret;typeof n=="string"&&(n=parseInt(n,10));let r=i.lastNote.getPositions()[0].fret;typeof r=="string"&&(r=parseInt(r,10)),isNaN(n)||isNaN(r)?e=t.SLIDE_UP:e=n>r?t.SLIDE_DOWN:t.SLIDE_UP}this.direction=e,this.renderOptions.cp1=11,this.renderOptions.cp2=14,this.renderOptions.yShift=.5}renderTie(i){if(i.firstYs.length===0||i.lastYs.length===0)throw new S("BadArguments","No Y-values to render");let e=this.checkContext(),n=i.firstX,r=i.firstYs,o=i.lastX,s=i.direction;if(s!==t.SLIDE_UP&&s!==t.SLIDE_DOWN)throw new S("BadSlide","Invalid slide direction");let a=this.notes.firstIndexes;for(let c=0;c<a.length;++c){let l=r[a[c]]+this.renderOptions.yShift;if(isNaN(l))throw new S("BadArguments","Bad indexes for slide rendering.");e.beginPath(),e.moveTo(n,l+3*s),e.lineTo(o,l-3*s),e.closePath(),e.stroke()}this.setRendered()}};var $a=class extends B{static get CATEGORY(){return"Tremolo"}constructor(i){super(),this.num=i,this.position=B.Position.CENTER,this.text=m.tremolo1}draw(){let i=this.checkContext(),e=this.checkAttachedNote();this.setRendered();let n=e.getStemDirection(),r=e.getFontScale(),o=O.get("Tremolo.spacing")*n*r,s=e.getAbsoluteX()+(n===y.UP?e.getGlyphWidth()-y.WIDTH/2:y.WIDTH/2),a=e.getStemExtents().topY+(this.num<=3?o:0);this.fontInfo.size=O.get("Tremolo.fontSize")*r;for(let c=0;c<this.num;++c)this.renderText(i,s,a),a+=o}};var tc=class t{static get names(){return{standard:"E/5,B/4,G/4,D/4,A/3,E/3",dagdad:"D/5,A/4,G/4,D/4,A/3,D/3",dropd:"E/5,B/4,G/4,D/4,A/3,D/3",eb:"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3",standardBanjo:"D/5,B/4,G/4,D/4,G/5"}}constructor(i="E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2"){this.tuningValues=[],this.setTuning(i)}noteToInteger(i){var e;return(e=T.keyProperties(i).intValue)!==null&&e!==void 0?e:-1}setTuning(i){t.names[i]&&(i=t.names[i]),this.tuningValues=[];let e=i.split(/\s*,\s*/);if(e.length===0)throw new S("BadArguments",`Invalid tuning string: ${i}`);for(let n=0;n<e.length;++n)this.tuningValues[n]=this.noteToInteger(e[n])}getValueForString(i){let e=Number(i);if(e<1||e>this.tuningValues.length)throw new S("BadArguments",`String number must be between 1 and ${this.tuningValues.length}:${i}`);return this.tuningValues[e-1]}getValueForFret(i,e){let n=this.getValueForString(e),r=Number(i);if(r<0)throw new S("BadArguments",`Fret number must be 0 or higher: ${i}`);return n+r}getNoteForFret(i,e){let n=this.getValueForFret(i,e),r=Math.floor(n/12),o=n%12;return`${T.integerToNote(o)}/${r}`}};var wm="5.0.0",Tm="0ca6f889545c33cce851b420c24945f6eb685aeb",Dm="2025-03-05T17:05:43.991Z";var y1=function(t,i,e,n){function r(o){return o instanceof e?o:new e(function(s){s(o)})}return new(e||(e=Promise))(function(o,s){function a(u){try{l(n.next(u))}catch(h){s(h)}}function c(u){try{l(n.throw(u))}catch(h){s(h)}}function l(u){u.done?o(u.value):r(u.value).then(a,c)}l((n=n.apply(t,i||[])).next())})},M=class{static loadFonts(...i){return y1(this,void 0,void 0,function*(){i||(i=Object.keys(G.FILES));let e=[];for(let n of i)e.push(G.load(n));yield Promise.all(e)})}static setFonts(...i){Rr.fontFamily=i.join(","),O.clear()}static getFonts(){return O.get("fontFamily").split(",")}static get RENDER_PRECISION_PLACES(){return T.RENDER_PRECISION_PLACES}static set RENDER_PRECISION_PLACES(i){T.RENDER_PRECISION_PLACES=i}static get SOFTMAX_FACTOR(){return T.SOFTMAX_FACTOR}static set SOFTMAX_FACTOR(i){T.SOFTMAX_FACTOR=i}static get UNISON(){return T.UNISON}static set UNISON(i){T.UNISON=i}static get NOTATION_FONT_SCALE(){return T.NOTATION_FONT_SCALE}static set NOTATION_FONT_SCALE(i){T.NOTATION_FONT_SCALE=i}static get TABLATURE_FONT_SCALE(){return T.TABLATURE_FONT_SCALE}static set TABLATURE_FONT_SCALE(i){T.TABLATURE_FONT_SCALE=i}static get RESOLUTION(){return T.RESOLUTION}static set RESOLUTION(i){T.RESOLUTION=i}static get SLASH_NOTEHEAD_WIDTH(){return T.SLASH_NOTEHEAD_WIDTH}static set SLASH_NOTEHEAD_WIDTH(i){T.SLASH_NOTEHEAD_WIDTH=i}static get STAVE_LINE_DISTANCE(){return T.STAVE_LINE_DISTANCE}static set STAVE_LINE_DISTANCE(i){T.STAVE_LINE_DISTANCE=i}static get STAVE_LINE_THICKNESS(){return Rr.Stave.lineWidth}static set STAVE_LINE_THICKNESS(i){Rr.Stave.lineWidth=i,Rr.TabStave.lineWidth=i,O.clear("Stave"),O.clear("TabStave")}static get STEM_HEIGHT(){return T.STEM_HEIGHT}static set STEM_HEIGHT(i){T.STEM_HEIGHT=i}static get STEM_WIDTH(){return T.STEM_WIDTH}static set STEM_WIDTH(i){T.STEM_WIDTH=i}static get TIME4_4(){return T.TIME4_4}static get unicode(){return T.unicode}static keySignature(i){return T.keySignature(i)}static hasKeySignature(i){return T.hasKeySignature(i)}static getKeySignatures(){return T.getKeySignatures()}static clefProperties(i){return T.clefProperties(i)}static keyProperties(i,e,n){return T.keyProperties(i,e,n)}static durationToTicks(i){return T.durationToTicks(i)}};M.BUILD={VERSION:wm,ID:Tm,DATE:Dm,INFO:""};M.Accidental=Yn;M.Annotation=Me;M.Articulation=Pi;M.Barline=Re;M.BarNote=os;M.Beam=ci;M.Bend=ln;M.BoundingBox=Ce;M.CanvasContext=kr;M.ChordSymbol=pe;M.Clef=Ti;M.ClefNote=Ir;M.Crescendo=ju;M.Curve=Pr;M.Dot=un;M.EasyScore=as;M.Element=L;M.Factory=hs;M.Font=G;M.Formatter=we;M.Fraction=rt;M.FretHandFinger=Di;M.GhostNote=jr;M.GlyphNote=bn;M.GraceNote=Ur;M.GraceNoteGroup=qn;M.GraceTabNote=Ka;M.KeyManager=Ga;M.KeySignature=mi;M.KeySigNote=Wr;M.Modifier=B;M.ModifierContext=gn;M.MultiMeasureRest=zr;M.Music=he;M.Note=pt;M.NoteHead=cs;M.NoteSubGroup=fn;M.Ornament=Zn;M.Parenthesis=Br;M.Parser=ss;M.PedalMarking=Te;M.Registry=yr;M.RenderContext=cn;M.Renderer=Nt;M.RepeatNote=Xr;M.Repetition=Za;M.Stave=ge;M.StaveConnector=yt;M.StaveHairpin=Cm;M.StaveLine=Qa;M.StaveModifier=Lt;M.StaveNote=Le;M.StaveTempo=Fr;M.StaveText=Vr;M.StaveTie=xi;M.Stem=y;M.StringNumber=mn;M.Stroke=Ya;M.SVGContext=Jn;M.System=Yr;M.TabNote=vn;M.TabSlide=_a;M.TabStave=qr;M.TabTie=hn;M.TextBracket=ls;M.TextDynamics=us;M.TextNote=Lr;M.TickContext=ui;M.TimeSignature=pi;M.TimeSigNote=Zr;M.Tremolo=$a;M.Tuning=tc;M.Tuplet=Jr;M.Vibrato=pn;M.VibratoBracket=ds;M.Voice=ne;M.Volta=Hr;M.RuntimeError=S;M.Test=void 0;M.AnnotationHorizontalJustify=fe;M.AnnotationVerticalJustify=me;M.ChordSymbolHorizontalJustify=ye;M.ChordSymbolVerticalJustify=li;M.SymbolModifiers=Bi;M.CurvePosition=di;M.FontWeight=sn;M.FontStyle=Ii;M.Glyphs=m;M.ModifierPosition=ut;M.RendererBackends=za;M.RendererLineEndType=Xa;M.BarlineType=ct;M.StaveModifierPosition=z;M.VoltaType=Fi;M.TextBracketPosition=gi;M.TextJustification=Oe;M.VoiceMode=fi;var xm="data:font/woff2;charset=utf-8;base64,";var Am="data:font/woff2;charset=utf-8;base64,";var Nm="data:font/woff2;charset=utf-8;base64,";var Mm="data:font/woff2;charset=utf-8;base64,";var Rm="data:font/woff2;charset=utf-8;base64,";var ym="data:font/woff2;charset=utf-8;base64,";var Yu={display:"block"},Om={display:"swap"},O1={display:"swap",weight:"bold"},k1=G.load("Bravura",Nm,Yu),I1=G.load("Academico",xm,Om),P1=G.load("Academico",Am,O1),B1=G.load("Gonville",Mm,Yu),F1=G.load("Petaluma",Rm,Yu),L1=G.load("Petaluma Script",ym,Om),V1=[k1,I1,P1,B1,F1,L1];M.BUILD.INFO="vexflow";M.setFonts("Bravura","Academico");Promise.allSettled(V1).then(()=>{});function H1(t,i){if(t&1&&(N(0,"div",14)(1,"div",15)(2,"p",16),I(3),A()()()),t&2){let e=i.$implicit;W(),Q("ngbPopover",e.definicion),W(2),re(e.name)}}function j1(t,i){t&1&&(N(0,"p"),I(1,"Est\xE1 representado por una subdivisi\xF3n binaria."),A(),N(2,"code"),I(3,"(2 - 3 - 4) \u2192 (2/2, 3/4, 4/4, 2/4)"),A(),Rt(4,"div",17))}function U1(t,i){t&1&&(N(0,"p"),I(1," Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente accusamus tattooed echo park. "),A())}function W1(t,i){t&1&&(N(0,"p"),I(1," Sed commodo, leo at suscipit dictum, quam est porttitor sapien, eget sodales nibh elit id diam. Nulla facilisi. Donec egestas ligula vitae odio interdum aliquet. Duis lectus turpis, luctus eget tincidunt eu, congue et odio. Duis pharetra et nisl at faucibus. Quisque luctus pulvinar arcu, et molestie lectus ultrices et. Sed diam urna, egestas ut ipsum vel, volutpat volutpat neque. Praesent fringilla tortor arcu. Vivamus faucibus nisl enim, nec tristique ipsum euismod facilisis. Morbi ut bibendum est, eu tincidunt odio. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris aliquet odio ac lorem aliquet ultricies in eget neque. Phasellus nec tortor vel tellus pulvinar feugiat. "),A())}function z1(t,i){t&1&&(N(0,"div",18)(1,"div",19)(2,"div",20)(3,"p")(4,"strong"),I(5,"Regla de oro"),A()(),N(6,"p")(7,"i"),I(8,"La tonalidad mayor esta un semitono arriba del ultimo sostenido"),A()()()()(),N(9,"h3",11),I(10,"Ejemplo:"),A(),N(11,"ul",21)(12,"li")(13,"strong"),I(14,"Armadura:"),A(),I(15," Fa#, Do#, Sol#"),A(),N(16,"li")(17,"strong"),I(18,"Ultimo sostenido:"),A(),I(19," Sol#"),A(),N(20,"li"),I(21,"Sol\u266F \u2192 La \u2192 \u{1F449} "),N(22,"strong"),I(23,"Tonalidad mayor:"),A(),I(24," La mayor"),A()())}function X1(t,i){t&1&&(N(0,"div",18)(1,"div",19)(2,"div",20)(3,"p")(4,"strong"),I(5,"Regla de oro"),A()(),N(6,"p")(7,"i"),I(8,"La tonalidad mayor est\xE1 en el pen\xFAltimo bemol."),A()()()()(),N(9,"h3",11),I(10,"Ejemplo:"),A(),N(11,"ul",21)(12,"li")(13,"strong"),I(14,"Armadura:"),A(),I(15," Si\u266D, Mi\u266D, La\u266D, Re\u266D"),A(),N(16,"li")(17,"strong"),I(18,"Pen\xFAltimo bemol: "),A(),I(19," Lab \u2192 \u{1F449} Tonalidad mayor: La\u266D mayor"),A()())}function Y1(t,i){}var Qr=class t{back=new Y;words=[{name:"Monocordio",definicion:"cercana a un bajo"},{name:"Semiolog\xEDa",definicion:"Estudio de los s\xEDmbolos"},{name:"Clave",definicion:" S\xEDmbolo que le da nombre a las l\xEDneas y espacios del pentagrama y les ofrece una altura al mismo."},{name:"Armadura de tonalidad",definicion:"Es el espacio que se le da para colocar los sostenidos y bemoles de la partitura."},{name:"Tonalidad",definicion:"es el sistema que organiza los sonidos de una obra musical alrededor de una nota principal llamada t\xF3nica."},{name:"Enarmonia",definicion:"Dos notas de diferente nombre y suenan igual"},{name:"Notas Hom\xF3nimas",definicion:" Son dos notas que se llaman igual pero suenan diferente"},{name:"Dinamicas",definicion:"Son variaci\xF3n de intensidad o volumen en la interpretaci\xF3n musical"},{name:"Articulaci\xF3n Musical",definicion:"Es la manera en que se ataca, conecta o separa cada nota para darle expresi\xF3n y car\xE1cter."},{name:"Nota",definicion:"Es un s\xEDmbolo que representa un sonido musical con una altura y duraci\xF3n determinadas."},{name:"Pentagrama",definicion:" Es un conjunto de cinco l\xEDneas y cuatro espacios donde se escriben las notas y otros signos musicales "},{name:"El ritmo",definicion:"es la organizaci\xF3n de los sonidos en el tiempo mediante patrones de duraci\xF3n y acento."},{name:"La melod\xEDa",definicion:"es una sucesi\xF3n de notas organizadas en el tiempo que forman una frase musical con sentido."},{name:"El pulso",definicion:"es la unidad b\xE1sica y constante del tiempo en la m\xFAsica"},{name:"Armon\xEDa",definicion:"es el conjunto de sonidos que suenan simult\xE1neamente y que apoyan o acompa\xF1an la melod\xEDa. "}];active=1;active2=1;onTabChange(i){i===1&&setTimeout(()=>this.drawScore(),0)}drawScore(){let i=document.getElementById("output");if(!i)return;let e=i.clientWidth;i.innerHTML="";let n=new hs({renderer:{elementId:"output",width:e,height:200}}),r=n.EasyScore();n.System({width:e-20}).addStave({voices:[r.voice(r.notes("C4/q, D4/q, E4/q, F4/q"))]}).addClef("treble").addTimeSignature("4/4"),n.draw()}ngAfterViewInit(){this.drawScore()}static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-music-fundamental"]],outputs:{back:"back"},standalone:!0,features:[st],decls:72,vars:13,consts:[["nav","ngbNav"],["nav2","ngbNav"],[3,"click"],[1,"container-fluid"],[1,"row"],["class","col-lg-2 mb-3",4,"ngFor","ngForOf"],["ngbNav","",1,"nav-tabs",3,"activeIdChange","activeId"],[3,"ngbNavItem"],["ngbNavLink",""],["ngbNavContent",""],[1,"mt-2",3,"ngbNavOutlet"],[1,"mt-5"],["ngbNav","",1,"nav-tabs",3,"activeIdChange","activeId","destroyOnHide"],[3,"ngbNavItem","destroyOnHide"],[1,"col-lg-2","mb-3"],["popoverTitle","Definici\xF3n","triggers","click","container","body",1,"card","text-center","p-4",3,"ngbPopover"],[1,"m-0"],["id","output"],[1,"card"],[1,"card-body"],[1,"d-flex","flex-column","align-items-center","text-center"],[1,"mb-4"]],template:function(e,n){if(e&1){let r=Gt();N(0,"button",2),_("click",function(){return dt(r),ht(n.back.emit())}),I(1,"\u2B05 Back to the list"),A(),N(2,"p"),I(3,"(Spanish Version)"),A(),N(4,"div",3)(5,"h2"),I(6,"Definiciones"),A(),N(7,"div",4),Et(8,H1,4,2,"div",5),A(),N(9,"h2"),I(10,"Asignatura de Medida"),A(),N(11,"p"),I(12,"Es un numero fraccionario que definen cuantos tiempos hay en un compas"),A(),N(13,"ul")(14,"li"),I(15,"Simples"),A(),N(16,"li"),I(17,"Compuestos"),A(),N(18,"li"),I(19,"Amlgamado"),A()(),N(20,"p"),I(21,"La medida por compas este tiene un numerado / denominador que detallan la m\xE9trica del comp\xE1s:"),A(),N(22,"ul")(23,"li")(24,"strong"),I(25,"Numerador:"),A(),I(26," Cantidad de figurar en el compas"),A(),N(27,"li")(28,"strong"),I(29,"Denominador:"),A(),I(30," Figura que representa en el compas "),N(31,"ul")(32,"li"),I(33,"4 = Negra"),A(),N(34,"li"),I(35,"2 = Blanca"),A(),N(36,"li"),I(37,"8 = Corchea"),A()()()(),N(38,"ul",6,0),ho("activeIdChange",function(s){return dt(r),uo(n.active,s)||(n.active=s),ht(s)}),_("activeIdChange",function(s){return dt(r),ht(n.onTabChange(s))}),N(40,"li",7)(41,"button",8),I(42,"A.M. Simple"),A(),Et(43,j1,5,0,"ng-template",9),A(),N(44,"li",7)(45,"button",8),I(46,"Two"),A(),Et(47,U1,2,0,"ng-template",9),A(),N(48,"li",7)(49,"button",8),I(50,"Three"),A(),Et(51,W1,2,0,"ng-template",9),A()(),Rt(52,"div",10),N(53,"h2",11),I(54,"Reconocimiento de escalas Mayores"),A(),N(55,"p"),I(56,"Amtes de mirar cada partitura en primera instacia hay casos practicos para reconocer que tipo de tonalidad fue escrito la partitura:"),A(),N(57,"ul",12,1),ho("activeIdChange",function(s){return dt(r),uo(n.active2,s)||(n.active2=s),ht(s)}),N(59,"li",13)(60,"button",8),I(61,"Sostenidos"),A(),Et(62,z1,25,0,"ng-template",9),A(),N(63,"li",7)(64,"button",8),I(65,"Bemoles"),A(),Et(66,X1,20,0,"ng-template",9),A(),N(67,"li",7)(68,"button",8),I(69,"Three"),A(),Et(70,Y1,0,0,"ng-template",9),A()(),Rt(71,"div",10),A()}if(e&2){let r=Yi(39),o=Yi(58);W(8),Q("ngForOf",n.words),W(30),lo("activeId",n.active),W(2),Q("ngbNavItem",1),W(4),Q("ngbNavItem",2),W(4),Q("ngbNavItem",3),W(4),Q("ngbNavOutlet",r),W(5),lo("activeId",n.active2),Q("destroyOnHide",!1),W(2),Q("ngbNavItem",1)("destroyOnHide",!0),W(4),Q("ngbNavItem",2),W(4),Q("ngbNavItem",3),W(4),Q("ngbNavOutlet",o)}},dependencies:[Kf,yu,es,ya,Zf,Jf,Oa,Qf,mo,Zi,Gf],styles:[".container-fluid[_ngcontent-%COMP%]{padding-left:3rem;padding-right:3rem}.card[_ngcontent-%COMP%]{padding:1rem;background-color:#fff;border:1px solid #ccc;border-radius:12px;box-shadow:0 2px 5px #0000001a;cursor:pointer;transition:transform .2s ease-in-out}.card[_ngcontent-%COMP%]:hover{transform:scale(1.03);box-shadow:0 4px 10px #00000026}#output[_ngcontent-%COMP%]{border:1px solid #ccc}"]})};var ec=class t{back=new Y;static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-integrated-music"]],outputs:{back:"back"},standalone:!0,features:[st],decls:2,vars:0,template:function(e,n){e&1&&(N(0,"p"),I(1,"integrated-music works!"),A())}})};function q1(t,i){if(t&1){let e=Gt();N(0,"div",4),_("click",function(){let r=dt(e).$implicit,o=wt(2);return ht(o.selectCard(r.id))}),N(1,"h3"),I(2),A(),N(3,"p"),I(4),A()()}if(t&2){let e=i.$implicit;W(2),re(e.title),W(2),re(e.description)}}function Z1(t,i){if(t&1&&(N(0,"div",2),Et(1,q1,5,2,"div",3),A()),t&2){let e=wt();W(),Q("ngForOf",e.cards)}}function J1(t,i){if(t&1){let e=Gt();N(0,"div")(1,"app-armonia",5),_("back",function(){dt(e);let r=wt();return ht(r.goBack())}),A()()}}function Q1(t,i){if(t&1){let e=Gt();N(0,"div")(1,"app-music-fundamental",5),_("back",function(){dt(e);let r=wt();return ht(r.goBack())}),A()()}}function K1(t,i){if(t&1){let e=Gt();N(0,"div")(1,"app-integrated-music",5),_("back",function(){dt(e);let r=wt();return ht(r.goBack())}),A()()}}var ic=class t{selectedId=null;cards=[{id:"1",title:"Harmony I",description:"In this notes, you are going to find basic information about harmony"},{id:"2",title:"Music Fundamental",description:"In this notes, you are going to found information about Music fundamental"},{id:"3",title:"Card 3",description:"Descripci\xF3n de la card 3"},{id:"4",title:"Card 4",description:"Descripci\xF3n de la card 4"},{id:"5",title:"Card 5",description:"Descripci\xF3n de la card 5"},{id:"6",title:"Card 6",description:"Descripci\xF3n de la card 6"},{id:"7",title:"Card 7",description:"Descripci\xF3n de la card 7"},{id:"8",title:"Card 8",description:"Descripci\xF3n de la card 8"},{id:"9",title:"Card 9",description:"Descripci\xF3n de la card 9"}];selectCard(i){this.selectedId=i}goBack(){this.selectedId=null}static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-list-music-notes"]],standalone:!0,features:[st],decls:4,vars:4,consts:[["class","grid-container",4,"ngIf"],[4,"ngIf"],[1,"grid-container"],["class","card",3,"click",4,"ngFor","ngForOf"],[1,"card",3,"click"],[3,"back"]],template:function(e,n){e&1&&Et(0,Z1,2,1,"div",0)(1,J1,2,0,"div",1)(2,Q1,2,0,"div",1)(3,K1,2,0,"div",1),e&2&&(Q("ngIf",!n.selectedId),W(),Q("ngIf",n.selectedId==="1"),W(),Q("ngIf",n.selectedId==="2"),W(),Q("ngIf",n.selectedId==="3"))},dependencies:[mo,Zi,ys,Sr,Qr,ec],styles:[".grid-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:1.5rem;padding:1rem}.card[_ngcontent-%COMP%]{padding:1rem;background-color:#fff;border:1px solid #ccc;border-radius:12px;box-shadow:0 2px 5px #0000001a;cursor:pointer;transition:transform .2s ease-in-out}.card[_ngcontent-%COMP%]:hover{transform:scale(1.03);box-shadow:0 4px 10px #00000026}@media (max-width: 768px){.grid-container[_ngcontent-%COMP%]{grid-template-columns:repeat(1,1fr)}}"]})};var nc=class t{back=new Y;static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-principle-architecture-design"]],outputs:{back:"back"},standalone:!0,features:[st],decls:13,vars:0,consts:[[1,"container-fluid"],[1,"d-flex","justify-content-center","align-content-center","mt-4"],[1,"row"],[1,"col-lg-12"],[1,"card"]],template:function(e,n){e&1&&(N(0,"div",0)(1,"h1",1),I(2,"Principios de dise\xF1o y arquitectura de software"),A(),N(3,"div",2)(4,"div",3)(5,"div",4)(6,"h2"),I(7,"Libros recomendados"),A(),N(8,"ul")(9,"li"),I(10,"Software Architecture in Practice. Third Edition. Len Bass, Paul Clements, Rick Kazman"),A(),N(11,"li"),I(12,"Design It! From Programmer to Software Architect. Michael Keeling. 2017"),A()()()()()())},styles:[".card[_ngcontent-%COMP%]{padding:1rem;background-color:#fff;border:1px solid #ccc;border-radius:12px;box-shadow:0 2px 5px #0000001a}"]})};function G1(t,i){if(t&1){let e=Gt();N(0,"div",4),_("click",function(){let r=dt(e).$implicit,o=wt(2);return ht(o.selectCard(r.id))}),N(1,"h3"),I(2),A(),N(3,"p"),I(4),A()()}if(t&2){let e=i.$implicit;W(2),re(e.title),W(2),re(e.description)}}function _1(t,i){if(t&1&&(N(0,"div",2),Et(1,G1,5,2,"div",3),A()),t&2){let e=wt();W(),Q("ngForOf",e.cards)}}function $1(t,i){if(t&1){let e=Gt();N(0,"div")(1,"app-principle-architecture-design",5),_("back",function(){dt(e);let r=wt();return ht(r.goBack())}),A()()}}function tS(t,i){if(t&1){let e=Gt();N(0,"div")(1,"app-music-fundamental",5),_("back",function(){dt(e);let r=wt();return ht(r.goBack())}),A()()}}var rc=class t{selectedId=null;cards=[{id:"1",title:"Principles of architectural design",description:"You are going to fin the basic principle of software architecture"},{id:"2",title:"Music Fundamental",description:"In this notes, you are going to found information about Music fundamental"},{id:"3",title:"Card 3",description:"Descripci\xF3n de la card 3"},{id:"4",title:"Card 4",description:"Descripci\xF3n de la card 4"},{id:"5",title:"Card 5",description:"Descripci\xF3n de la card 5"},{id:"6",title:"Card 6",description:"Descripci\xF3n de la card 6"},{id:"7",title:"Card 7",description:"Descripci\xF3n de la card 7"},{id:"8",title:"Card 8",description:"Descripci\xF3n de la card 8"},{id:"9",title:"Card 9",description:"Descripci\xF3n de la card 9"}];selectCard(i){this.selectedId=i}goBack(){this.selectedId=null}static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-list-architecture-notes"]],standalone:!0,features:[st],decls:3,vars:3,consts:[["class","grid-container",4,"ngIf"],[4,"ngIf"],[1,"grid-container"],["class","card",3,"click",4,"ngFor","ngForOf"],[1,"card",3,"click"],[3,"back"]],template:function(e,n){e&1&&Et(0,_1,2,1,"div",0)(1,$1,2,0,"div",1)(2,tS,2,0,"div",1),e&2&&(Q("ngIf",!n.selectedId),W(),Q("ngIf",n.selectedId==="1"),W(),Q("ngIf",n.selectedId==="2"))},dependencies:[Zi,ys,Qr,nc],styles:[".grid-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:1.5rem;padding:1rem}.card[_ngcontent-%COMP%]{padding:1rem;background-color:#fff;border:1px solid #ccc;border-radius:12px;box-shadow:0 2px 5px #0000001a;cursor:pointer;transition:transform .2s ease-in-out}.card[_ngcontent-%COMP%]:hover{transform:scale(1.03);box-shadow:0 4px 10px #00000026}@media (max-width: 768px){.grid-container[_ngcontent-%COMP%]{grid-template-columns:repeat(1,1fr)}}"]})};var oc=class t{static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-notes"]],standalone:!0,features:[st],decls:9,vars:0,consts:[["label","Music"],["label","Archiecture"],["label","Backend Notes"],["label","FrontEnd Notes"]],template:function(e,n){e&1&&(N(0,"mat-tab-group")(1,"mat-tab",0),Rt(2,"app-list-music-notes"),A(),N(3,"mat-tab",1),Rt(4,"app-list-architecture-notes"),A(),N(5,"mat-tab",2),I(6," Content 3 "),A(),N(7,"mat-tab",3),I(8," Content 3 "),A()())},dependencies:[of,nu,rf,ic,rc]})};function eS(t,i){if(t&1&&(N(0,"tr")(1,"td"),I(2),A(),N(3,"td"),I(4),A(),N(5,"td"),I(6),A(),N(7,"td"),I(8),A()()),t&2){let e=i.$implicit;W(2),re(e.name),W(2),re(e.author),W(2),re(e.location),W(2),re(e.subject)}}var sc=class t{constructor(i){this.http=i}searchText="";books=[];jsonBooks=[];ngOnInit(){this.http.get("data/books.json").subscribe(i=>{this.books=i,this.jsonBooks=this.shuffleArray([...this.books])})}filterbooks(){let i=this.searchText.toLowerCase();this.jsonBooks=this.books.filter(e=>e.name.toLowerCase().includes(i)||e.author.toLowerCase().includes(i)||e.subject.toLowerCase().includes(i))}shuffleArray(i){for(let e=i.length-1;e>0;e--){let n=Math.floor(Math.random()*(e+1));[i[e],i[n]]=[i[n],i[e]]}return i}static \u0275fac=function(e){return new(e||t)(F(Hc))};static \u0275cmp=ot({type:t,selectors:[["app-inventory"]],standalone:!0,features:[st],decls:14,vars:2,consts:[["type","text","placeholder","Search by Name or author",1,"form-control","mb-3",3,"ngModelChange","input","ngModel"],[1,"table","table-hover"],["scope","col"],[4,"ngFor","ngForOf"]],template:function(e,n){e&1&&(N(0,"input",0),ho("ngModelChange",function(o){return uo(n.searchText,o)||(n.searchText=o),o}),_("input",function(){return n.filterbooks()}),A(),N(1,"table",1)(2,"thead")(3,"tr")(4,"th",2),I(5,"Book Name"),A(),N(6,"th",2),I(7,"Author"),A(),N(8,"th",2),I(9,"Location"),A(),N(10,"th",2),I(11,"Subject"),A()()(),N(12,"tbody"),Et(13,eS,9,4,"tr",3),A()()),e&2&&(lo("ngModel",n.searchText),W(13),Q("ngForOf",n.jsonBooks))},dependencies:[xf,va,wf,lu,Zi]})};var km=[{path:"",redirectTo:"home",pathMatch:"full"},{path:"home",component:oa},{path:"notes",component:oc},{path:"inventory",component:sc},{path:"notes/detalle/armonia",component:Sr}];var iS="@",nS=(()=>{class t{constructor(e,n,r,o,s){this.doc=e,this.delegate=n,this.zone=r,this.animationType=o,this.moduleImpl=s,this._rendererFactoryPromise=null,this.scheduler=R(pd,{optional:!0}),this.loadingSchedulerFn=R(rS,{optional:!0})}ngOnDestroy(){this._engine?.flush()}loadImpl(){let e=()=>this.moduleImpl??import("./chunk-CTMDAVUC.js").then(r=>r),n;return this.loadingSchedulerFn?n=this.loadingSchedulerFn(e):n=e(),n.catch(r=>{throw new xt(5300,!1)}).then(({\u0275createEngine:r,\u0275AnimationRendererFactory:o})=>{this._engine=r(this.animationType,this.doc);let s=new o(this.delegate,this._engine,this.zone);return this.delegate=s,s})}createRenderer(e,n){let r=this.delegate.createRenderer(e,n);if(r.\u0275type===0)return r;typeof r.throwOnSyntheticProps=="boolean"&&(r.throwOnSyntheticProps=!1);let o=new qu(r);return n?.data?.animation&&!this._rendererFactoryPromise&&(this._rendererFactoryPromise=this.loadImpl()),this._rendererFactoryPromise?.then(s=>{let a=s.createRenderer(e,n);o.use(a),this.scheduler?.notify(10)}).catch(s=>{o.use(r)}),o}begin(){this.delegate.begin?.()}end(){this.delegate.end?.()}whenRenderingDone(){return this.delegate.whenRenderingDone?.()??Promise.resolve()}static{this.\u0275fac=function(n){wc()}}static{this.\u0275prov=H({token:t,factory:t.\u0275fac})}}return t})(),qu=class{constructor(i){this.delegate=i,this.replay=[],this.\u0275type=1}use(i){if(this.delegate=i,this.replay!==null){for(let e of this.replay)e(i);this.replay=null}}get data(){return this.delegate.data}destroy(){this.replay=null,this.delegate.destroy()}createElement(i,e){return this.delegate.createElement(i,e)}createComment(i){return this.delegate.createComment(i)}createText(i){return this.delegate.createText(i)}get destroyNode(){return this.delegate.destroyNode}appendChild(i,e){this.delegate.appendChild(i,e)}insertBefore(i,e,n,r){this.delegate.insertBefore(i,e,n,r)}removeChild(i,e,n){this.delegate.removeChild(i,e,n)}selectRootElement(i,e){return this.delegate.selectRootElement(i,e)}parentNode(i){return this.delegate.parentNode(i)}nextSibling(i){return this.delegate.nextSibling(i)}setAttribute(i,e,n,r){this.delegate.setAttribute(i,e,n,r)}removeAttribute(i,e,n){this.delegate.removeAttribute(i,e,n)}addClass(i,e){this.delegate.addClass(i,e)}removeClass(i,e){this.delegate.removeClass(i,e)}setStyle(i,e,n,r){this.delegate.setStyle(i,e,n,r)}removeStyle(i,e,n){this.delegate.removeStyle(i,e,n)}setProperty(i,e,n){this.shouldReplay(e)&&this.replay.push(r=>r.setProperty(i,e,n)),this.delegate.setProperty(i,e,n)}setValue(i,e){this.delegate.setValue(i,e)}listen(i,e,n){return this.shouldReplay(e)&&this.replay.push(r=>r.listen(i,e,n)),this.delegate.listen(i,e,n)}shouldReplay(i){return this.replay!==null&&i.startsWith(iS)}},rS=new Z("");function Im(t="animations"){return Tc("NgAsyncAnimations"),Tn([{provide:Ts,useFactory:(i,e,n)=>new nS(i,e,n,t),deps:[at,Us,lt]},{provide:Wi,useValue:t==="noop"?"NoopAnimations":"BrowserAnimations"}])}var Zu={providers:[Sd({eventCoalescing:!0}),Mh(km),Im()]};var oS=t=>({show:t}),ac=class t{isMenuOpen=!1;cerrarMenu(){window.innerWidth<992&&(this.isMenuOpen=!1)}static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-navbar"]],standalone:!0,features:[st],decls:31,vars:3,consts:[[1,"navbar","navbar-expand-lg","navbar-dark","bg-dark"],[1,"container-fluid"],["routerLink","/",1,"navbar-brand"],["type","button","aria-label","Toggle navigation",1,"navbar-toggler",3,"click"],[1,"navbar-toggler-icon"],["id","navbarNavAltMarkup",1,"collapse","navbar-collapse",3,"ngClass"],[1,"navbar-nav"],["aria-current","page","routerLink","/",1,"nav-link","active",3,"click"],["routerLink","/notes",1,"nav-link",3,"click"],[1,"nav-item","dropdown"],["role","button","data-bs-toggle","dropdown","aria-expanded","false",1,"nav-link","dropdown-toggle"],[1,"dropdown-menu"],["routerLink","/inventory",1,"dropdown-item",3,"click"],[1,"dropdown-divider"],["href","#",1,"dropdown-item",3,"click"],["href","#",1,"dropdown-item"],["aria-disabled","true",1,"nav-link","disabled"]],template:function(e,n){e&1&&(N(0,"nav",0)(1,"div",1)(2,"a",2),I(3,"Navbar"),A(),N(4,"button",3),_("click",function(){return n.isMenuOpen=!n.isMenuOpen}),Rt(5,"span",4),A(),N(6,"div",5)(7,"div",6)(8,"a",7),_("click",function(){return n.cerrarMenu()}),I(9,"Home"),A(),N(10,"a",8),_("click",function(){return n.cerrarMenu()}),I(11,"Notes"),A(),N(12,"li",9)(13,"a",10),I(14," Inventories "),A(),N(15,"ul",11)(16,"li")(17,"a",12),_("click",function(){return n.cerrarMenu()}),I(18,"Books"),A()(),N(19,"li"),Rt(20,"hr",13),A(),N(21,"li")(22,"a",14),_("click",function(){return n.cerrarMenu()}),I(23,"Stationer"),A()(),N(24,"li"),Rt(25,"hr",13),A(),N(26,"li")(27,"a",15),I(28,"Something else here"),A()()()(),N(29,"a",16),I(30,"Disabled"),A()()()()()),e&2&&(W(6),Q("ngClass",nr(1,oS,n.isMenuOpen)))},dependencies:[Nh,Dd]})};var cc=class t{title="cbpage";static \u0275fac=function(e){return new(e||t)};static \u0275cmp=ot({type:t,selectors:[["app-root"]],standalone:!0,features:[st],decls:2,vars:0,template:function(e,n){e&1&&Rt(0,"app-navbar")(1,"router-outlet")},dependencies:[Nl,ac]})};Xd(cc,vt(P({},Zu),{providers:[...Zu.providers||[],Ld()]})).catch(t=>console.error(t));
